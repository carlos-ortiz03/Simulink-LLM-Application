[
    {
        "block_name": "First Order Hold",
        "libraries": [
            "Simulink/Continuous"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">InitialOutput</code></span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Type:</strong> character vector, string </span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> scalar | vector</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutputAlgorithm</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">Slow (Avoid Overshoot)</code>| <code class=\"literal\">Fast (Minimize\n\t\t\t\t\t\t\t\t\tError)</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Slow (Avoid Overshoot)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ErrorTolerance</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'inf'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">AllowContinuousInput</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code>| <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/firstorderhold.html"
    },
    {
        "block_name": "Integrator",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Continuous"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:\n                            </strong><code class=\"literal\">ExternalReset</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type: </strong> character vector ,\n                        string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'none'</code> | <code class=\"literal\">'rising'</code> |\n                            <code class=\"literal\">'falling'</code> | <code class=\"literal\">'either'</code> |\n                            <code class=\"literal\">'level'</code> | <code class=\"literal\">'level hold'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'none'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:\n                        </strong><code class=\"literal\">InitialConditionSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type: </strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'internal'</code> | <code class=\"literal\">'external'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'internal'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:\n                                </strong><code class=\"literal\">InitialCondition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type: </strong> scalar or vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter: </strong>\n<code class=\"literal\">LimitOutput</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type: </strong> character vector , string</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">UpperSaturationLimit</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character\n                                                  vector, string</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar |\n                                                  vector | matrix</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'inf'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LowerSaturationLimit</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector , string </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar | vector | matrix</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-inf'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:\n                            </strong><code class=\"literal\">WrapState</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type: </strong> character vector,\n                        string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:\n                            </strong><code class=\"literal\">WrappedStateUpperValue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type: </strong> scalar or vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'2*pi'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'pi'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:\n                            </strong><code class=\"literal\">WrappedStateLowerValue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type: </strong> scalar or vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'0'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'-pi'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">ShowSaturationPort</code> </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector , string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'off'</code> </span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">ShowStatePort</code> </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector , string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'off'</code> </span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter: </strong><code class=\"literal\">\n                            AbsoluteTolerance</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type: </strong> character vector, string,\n                        scalar, or vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'auto'</code> | <code class=\"literal\">'-1'</code> | any positive real\n                        scalar or vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default: </strong><code class=\"literal\">\n                        'auto'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:\n                                </strong><code class=\"literal\">IgnoreLimit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type: </strong> character vector |\n                            string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector | string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off'</code> |\n                        <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:\n                            </strong><code class=\"literal\">ContinuousStateAttributes</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type: </strong> character vector,\n                        string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">' '</code> | user-defined</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">' '</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/integrator.html"
    },
    {
        "block_name": "Derivative",
        "libraries": [
            "Simulink/Continuous"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">CoefficientInTFapproximation</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">inf</code> (default) | finite positive scalar number</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/derivative.html"
    },
    {
        "block_name": "Descriptor State-Space",
        "libraries": [
            "Simulink/Continuous"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">E</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string | character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar |\n\t\t\t\t\t\t\t\tmatrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">A</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar |\n\t\t\t\t\t\t\t\tmatrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">B</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string | character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n\t\t\t\t\t\t\t\tmatrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">C</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string | character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n\t\t\t\t\t\t\t\tmatrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">D</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string | character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n\t\t\t\t\t\t\t\tmatrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InitialCondition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector | matrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DirectFeedthrough</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string | character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'True'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'False'</code><code class=\"literal\">'Auto'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'True'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\"> AbsoluteTolerance</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'auto'</code> | <code class=\"literal\">'-1'</code> | positive, real scalar |\n                    vector of positive, real scalars</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'auto'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ContinuousStateAttributes</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string | character\n                                        vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">' '</code> | user-defined</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">' '</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/descriptorstatespace.html"
    },
    {
        "block_name": "Entity Transport Delay",
        "libraries": [
            "Simulink/Continuous",
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Capacity</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'inf'</code> | real scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'inf'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">ShowNumberEntitiesInBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n\t\t\t\t\t\t\t\t| <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/entitytransportdelay.html"
    },
    {
        "block_name": "Integrator Limited",
        "libraries": [
            "Simulink/Continuous"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:\n                            </strong><code class=\"literal\">ExternalReset</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type: </strong> character vector ,\n                        string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'none'</code> | <code class=\"literal\">'rising'</code> |\n                            <code class=\"literal\">'falling'</code> | <code class=\"literal\">'either'</code> |\n                            <code class=\"literal\">'level'</code> | <code class=\"literal\">'level hold'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'none'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:\n                        </strong><code class=\"literal\">InitialConditionSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type: </strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'internal'</code> | <code class=\"literal\">'external'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'internal'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:\n                                </strong><code class=\"literal\">InitialCondition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type: </strong> scalar or vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter: </strong>\n<code class=\"literal\">LimitOutput</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type: </strong> character vector , string</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">UpperSaturationLimit</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character\n                                                  vector, string</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar |\n                                                  vector | matrix</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'inf'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LowerSaturationLimit</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector , string </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar | vector | matrix</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-inf'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:\n                            </strong><code class=\"literal\">WrapState</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type: </strong> character vector,\n                        string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:\n                            </strong><code class=\"literal\">WrappedStateUpperValue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type: </strong> scalar or vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'2*pi'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'pi'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:\n                            </strong><code class=\"literal\">WrappedStateLowerValue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type: </strong> scalar or vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'0'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'-pi'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">ShowSaturationPort</code> </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector , string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'off'</code> </span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">ShowStatePort</code> </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector , string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'off'</code> </span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter: </strong><code class=\"literal\">\n                            AbsoluteTolerance</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type: </strong> character vector, string,\n                        scalar, or vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'auto'</code> | <code class=\"literal\">'-1'</code> | any positive real\n                        scalar or vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default: </strong><code class=\"literal\">\n                        'auto'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:\n                                </strong><code class=\"literal\">IgnoreLimit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type: </strong> character vector |\n                            string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector | string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off'</code> |\n                        <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:\n                            </strong><code class=\"literal\">ContinuousStateAttributes</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type: </strong> character vector,\n                        string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">' '</code> | user-defined</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">' '</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/integratorlimited.html"
    },
    {
        "block_name": "Second-Order Integrator Limited",
        "libraries": [
            "Simulink/Continuous"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">ICSourceX</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'internal'</code> | <code class=\"literal\">'external'</code></span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'internal'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/secondorderintegratorlimited.html"
    },
    {
        "block_name": "Second-Order Integrator",
        "libraries": [
            "Simulink/Continuous"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">ICSourceX</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'internal'</code> | <code class=\"literal\">'external'</code></span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'internal'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/secondorderintegrator.html"
    },
    {
        "block_name": "PID Controller (2DOF)",
        "libraries": [
            "Simulink/Continuous"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Controller</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">\"PID\"</code>, <code class=\"literal\">\"PI\"</code>, <code class=\"literal\">\"PD\"</code> </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">\"PID\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Controller</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">\"Parallel\"</code>, <code class=\"literal\">\"Ideal\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">\"Parallel\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TimeDomain</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"Continuous-time\"</code>,\n                                    <code class=\"literal\">\"Discrete-time\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"Continuous-time\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">UseExternalTs</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code>, <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal remove_text_wrapping\">-1</code>, positive scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal remove_text_wrapping\">-1</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">IntegratorMethod</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">\"Forward Euler\"</code>, <code class=\"literal\">\"Backward Euler\"</code>, <code class=\"literal\">\"Trapezoidal\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">\"Forward Euler\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">FilterMethod</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">\"Forward Euler\"</code>, <code class=\"literal\">\"Backward Euler\"</code>, <code class=\"literal\">\"Trapezoidal\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">\"Forward Euler\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/pidcontroller2dof.html"
    },
    {
        "block_name": "PID Controller",
        "libraries": [
            "Simulink/Continuous"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Controller</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">\"PID\"</code>, <code class=\"literal\">\"PI\"</code>, <code class=\"literal\">\"PD\"</code>, <code class=\"literal\">\"P\"</code>, <code class=\"literal\">\"I\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">\"PID\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Controller</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">\"Parallel\"</code>, <code class=\"literal\">\"Ideal\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">\"Parallel\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TimeDomain</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"Continuous-time\"</code>,\n                                    <code class=\"literal\">\"Discrete-time\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"Continuous-time\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">UseExternalTs</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code>, <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal remove_text_wrapping\">-1</code>, positive scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal remove_text_wrapping\">-1</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">IntegratorMethod</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">\"Forward Euler\"</code>, <code class=\"literal\">\"Backward Euler\"</code>, <code class=\"literal\">\"Trapezoidal\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">\"Forward Euler\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">FilterMethod</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">\"Forward Euler\"</code>, <code class=\"literal\">\"Backward Euler\"</code>, <code class=\"literal\">\"Trapezoidal\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">\"Forward Euler\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/pidcontroller.html"
    },
    {
        "block_name": "State-Space",
        "libraries": [
            "Simulink/Continuous"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">A</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n\t\t\t\t\t\t\t\tmatrix | sparse matrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">B</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n\t\t\t\t\t\t\t\tmatrix | sparse matrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">C</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n\t\t\t\t\t\t\t\tmatrix | sparse matrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">D</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n\t\t\t\t\t\t\t\tmatrix | sparse matrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">X0</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar | vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ParameterTunability</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector | string </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Auto'</code> | <code class=\"literal\">'Optimized'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Unconstrained'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Auto'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">AllowTunableDMatrix</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector | string </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\"> AbsoluteTolerance</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'auto'</code> | <code class=\"literal\">'-1'</code> | positive, real scalar |\n                    vector of positive, real scalars</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'auto'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ContinuousStateAttributes</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string | character\n                                        vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">' '</code> | user-defined</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">' '</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/statespace.html"
    },
    {
        "block_name": "Transfer Fcn",
        "libraries": [
            "Simulink/Continuous"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Numerator</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector,\n\t\t\t\t\t\t\t\tstring</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> vector | matrix </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'[1]'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Denominator</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector | string </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'[1 1]'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ParameterTunability</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Auto'</code> | <code class=\"literal\">'Optimized'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Unconstrained'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Auto'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\"> AbsoluteTolerance</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'auto'</code> | <code class=\"literal\">'-1'</code> | positive, real scalar |\n                    vector of positive, real scalars</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'auto'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ContinuousStateAttributes</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string | character\n                                        vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">' '</code> | user-defined</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">' '</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/transferfcn.html"
    },
    {
        "block_name": "Transport Delay",
        "libraries": [
            "Simulink/Continuous"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DelayTime</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector,\n\t\t\t\t\t\t\t\tstring</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> nonnegative scalar, vector,\n\t\t\t\t\t\t\t\tor matrix</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InitialOutput</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector,\n\t\t\t\t\t\t\t\tstring</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n\t\t\t\t\t\t\t\tmatrix</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">BufferSize</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector,\n\t\t\t\t\t\t\t\tstring</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> positive integer\n\t\t\t\t\t\t\t\tscalar</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1024'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FixedBuffer</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector,\n\t\t\t\t\t\t\t\tstring</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TransDelayFeedthrough</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector,\n\t\t\t\t\t\t\t\tstring</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">PadeOrder</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector,\n\t\t\t\t\t\t\t\tstring</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n\t\t\t\t\t\t\t\tmatrix</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/transportdelay.html"
    },
    {
        "block_name": "Variable Transport Delay",
        "libraries": [
            "Simulink/Continuous"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">VariableDelayType</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'Variable transport delay'</code> | <code class=\"literal\">'Variable time delay'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">MaximumDelay</code> </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Value:</strong> scalar | vector</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'10'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">InitialOutput</code></span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Type:</strong> character vector, string </span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> scalar | vector</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">MaximumPoints</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> scalar | vector</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'1024'</code> </span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">FixedBuffer</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ZeroDelay</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TransDelayFeedthrough</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">PadeOrder</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">AbsoluteTolerance</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'auto'</code> | <code class=\"literal\">'-1'</code> | any positive real scalar or vector</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'auto'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">ContinuousStateAttributes</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">' '</code> | user-defined character vector, user-defined\n                        string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">' '</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/variabletransportdelay.html"
    },
    {
        "block_name": "Callback Button",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ButtonType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string or character array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'Momentary'</code> | <code class=\"literal\">'Latch'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/callbackbutton.html"
    },
    {
        "block_name": "Variable Time Delay",
        "libraries": [
            "Simulink/Continuous"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">VariableDelayType</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'Variable transport delay'</code> | <code class=\"literal\">'Variable time delay'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">MaximumDelay</code> </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Value:</strong> scalar | vector</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'10'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">InitialOutput</code></span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Type:</strong> character vector, string </span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> scalar | vector</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">MaximumPoints</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> scalar | vector</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'1024'</code> </span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">FixedBuffer</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ZeroDelay</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TransDelayFeedthrough</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">PadeOrder</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">AbsoluteTolerance</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'auto'</code> | <code class=\"literal\">'-1'</code> | any positive real scalar or vector</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'auto'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">ContinuousStateAttributes</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">' '</code> | user-defined character vector, user-defined\n                        string</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">' '</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/variabletimedelay.html"
    },
    {
        "block_name": "Zero-Pole",
        "libraries": [
            "Simulink/Continuous"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Zeros</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> vector | matrix</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'[1]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Poles</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'[0 -1]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Gain</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'[1]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ParameterTunability</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Auto'</code> | <code class=\"literal\">'Optimized'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Unconstrained'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Auto'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\"> AbsoluteTolerance</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values: </strong>\n<code class=\"literal\">'auto'</code> | <code class=\"literal\">'-1'</code> | positive, real scalar |\n                    vector of positive, real scalars</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'auto'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ContinuousStateAttributes</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string | character\n                                        vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">' '</code> | user-defined</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">' '</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/zeropole.html"
    },
    {
        "block_name": "Check Box",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkbox.html"
    },
    {
        "block_name": "Combo Box",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/combobox.html"
    },
    {
        "block_name": "Dashboard Scope",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> cell array of\n                                        <code class=\"class\">Simulink.HMI.SignalSpecification</code>\n                                    objects</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/dashboardscope.html"
    },
    {
        "block_name": "Edit",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/edit.html"
    },
    {
        "block_name": "Display",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/dashboarddisplay.html"
    },
    {
        "block_name": "Gauge",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/gauge.html"
    },
    {
        "block_name": "Half Gauge",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/halfgauge.html"
    },
    {
        "block_name": "Knob",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ScaleType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string or character\n                        vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Linear'</code> | <code class=\"literal\">'Log'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Linear'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Limits</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">1x3</code> vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[0 -1 100]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Limits</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">1x3</code> vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[0 -1 100]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Limits</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">1x3</code> vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[0 -1 100]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LabelPosition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Top'</code> | <code class=\"literal\">'Bottom'</code> |\n                            <code class=\"literal\">'Hide'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Top'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/knob.html"
    },
    {
        "block_name": "Linear Gauge",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/lineargauge.html"
    },
    {
        "block_name": "Lamp",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">StateColors</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> structure array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> structure</span></td></tr>"
            ],
            [
                "<tr><th>Icon</th><th>Basic Shapes Library Block Name</th><th>Programmatic Use Value</th></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180666\"><p><img alt=\"Lamp icon: a solid gray circle\" height=\"50\" src=\"default.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Lamp</span></td><td><code class=\"literal\">Default</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180679\"><p><img alt=\"Circle icon: a solid black circle\" height=\"50\" src=\"circle.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Circle</span></td><td><code class=\"literal\">Circle</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180692\"><p><img alt=\"Hexagon icon: a solid hexagon\" height=\"50\" src=\"hexagon.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Hexagon</span></td><td><code class=\"literal\">Hexagon</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180705\"><p><img alt=\"Pentagon icon: a solid pentagon\" height=\"50\" src=\"pentagon.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Pentagon</span></td><td><code class=\"literal\">Pentagon</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180718\"><p><img alt=\"Rectangle icon: a solid rectangle\" height=\"50\" src=\"rectangle.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Rectangle</span></td><td><code class=\"literal\">Rectangle</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180731\"><p><img alt=\"Square icon: a solid square\" height=\"50\" src=\"square.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Square</span></td><td><code class=\"literal\">Square</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180744\"><p><img alt=\"Triangle icon: a solid triangle\" height=\"50\" src=\"triangle.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Triangle</span></td><td><code class=\"literal\">Triangle</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180757\"><p><img alt=\"Check1 icon: a check mark\" height=\"50\" src=\"check1.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Check1</span></td><td><code class=\"literal\">Check1</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180770\"><p><img alt=\"Check2 icon: a check mark with slightly curved lines\" height=\"50\" src=\"check2.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Check2</span></td><td><code class=\"literal\">Check2</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180783\"><p><img alt=\"Check3 icon: the outline of a check mark\" height=\"50\" src=\"check3.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Check3</span></td><td><code class=\"literal\">Check3</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180796\"><p><img alt=\"Check4 icon: a check mark with a divot along its outline\" height=\"50\" src=\"check4.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Check4</span></td><td><code class=\"literal\">Check4</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180810\"><p><img alt=\"Ex1 icon: a cross mark\" height=\"50\" src=\"ex1.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Ex1</span></td><td><code class=\"literal\">Ex1</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180823\"><p><img alt=\"Ex2 icon: a cross mark with one curved line\" height=\"50\" src=\"ex2.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Ex2</span></td><td><code class=\"literal\">Ex2</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180836\"><p><img alt=\"Ex3 icon: the outline of a cross mark\" height=\"50\" src=\"ex3.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Ex3</span></td><td><code class=\"literal\">Ex3</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180849\"><p><img alt=\"Ex4 icon: a cross mark with a divot along the outline\" height=\"50\" src=\"ex4.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Ex4</span></td><td><code class=\"literal\">Ex4</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180862\"><p><img alt=\"Face icon: the outline of a face with a closed mouth in a straight line\" height=\"50\" src=\"face.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Face</span></td><td><code class=\"literal\">Face</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180875\"><p><img alt=\"Frown1 icon: the outline of a face with an open downturned mouth\" height=\"50\" src=\"frown1.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Frown1</span></td><td><code class=\"literal\">Frown1</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180888\"><p><img alt=\"Frown2 icon: the outline of a face with a closed downturned mouth\" height=\"50\" src=\"frown2.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Frown2</span></td><td><code class=\"literal\">Frown2</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180901\"><p><img alt=\"Smile1 icon: the outline of a face with an open upturned mouth\" height=\"50\" src=\"smile1.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Smile1</span></td><td><code class=\"literal\">Smile1</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180914\"><p><img alt=\"Smile2 icon: the outline of a face with a closed upturned mouth\" height=\"50\" src=\"smile2.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Smile2</span></td><td><code class=\"literal\">Smile2</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180927\"><p><img alt=\"Solid Face icon: a solid face with a closed mouth in a straight line\" height=\"50\" src=\"solid_face.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Solid Face</span></td><td><code class=\"literal\">SolidFace</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180940\"><p><img alt=\"Solid Frown1 icon: a solid face with an open downturned mouth\" height=\"50\" src=\"solid_frown1.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Solid Frown1</span></td><td><code class=\"literal\">SolidFrown1</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180954\"><p><img alt=\"Solid Frown2 icon: a closed downturned mouth\" height=\"50\" src=\"solid_frown2.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Solid Frown2</span></td><td><code class=\"literal\">SolidFrown2</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180967\"><p><img alt=\"Solid Smile1 icon: a solid face with an open upturned mouth\" height=\"50\" src=\"solid_smile1.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Solid Smile1</span></td><td><code class=\"literal\">SolidSmile1</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180980\"><p><img alt=\"Solid Smile2 icon: a solid face with a closed upturned mouth\" height=\"50\" src=\"solid_smile2.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Solid Smile2</span></td><td><code class=\"literal\">SolidSmile2</code></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LabelPosition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Top'</code> | <code class=\"literal\">'Bottom'</code> |\n                            <code class=\"literal\">'Hide'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Top'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Opacity</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">1</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/lamp.html"
    },
    {
        "block_name": "MultiStateImage",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ScaleMode</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string or character\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Fill with fixed aspect ratio'</code> |\n                                    <code class=\"literal\">'Fixed'</code> | <code class=\"literal\">'Fill'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Fill with fixed aspect ratio'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">States</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> structure array</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LabelPosition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Top'</code> | <code class=\"literal\">'Bottom'</code> |\n                            <code class=\"literal\">'Hide'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Top'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/multistateimage.html"
    },
    {
        "block_name": "Push Button",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/pushbutton.html"
    },
    {
        "block_name": "Quarter Gauge",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/quartergauge.html"
    },
    {
        "block_name": "Rocker Switch",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ],
            [
                "<tr><th>Position</th><th>State Value</th><th>State Label</th></tr>",
                "<tr><td><strong class=\"guilabel\">Top</strong></td><td><code class=\"literal\">0</code></td><td><code class=\"literal\">on</code></td></tr>",
                "<tr><td><strong class=\"guilabel\">Bottom</strong></td><td><code class=\"literal\">1</code></td><td><code class=\"literal\">off</code></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LabelPosition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Top'</code> | <code class=\"literal\">'Bottom'</code> |\n                            <code class=\"literal\">'Hide'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Top'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/rockerswitch.html"
    },
    {
        "block_name": "Radio Button",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/radiobutton.html"
    },
    {
        "block_name": "Slider",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ScaleType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string or character\n                        vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Linear'</code> | <code class=\"literal\">'Log'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Linear'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Limits</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">1x3</code> vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[0 -1 100]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Limits</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">1x3</code> vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[0 -1 100]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Limits</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">1x3</code> vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[0 -1 100]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LabelPosition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Top'</code> | <code class=\"literal\">'Bottom'</code> |\n                            <code class=\"literal\">'Hide'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Top'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/slider.html"
    },
    {
        "block_name": "Rotary Switch",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ],
            [
                "<tr><th>State Value</th><th>State Label</th></tr>",
                "<tr><td><code class=\"literal\">0</code></td><td><code class=\"literal\">Off</code></td></tr>",
                "<tr><td><code class=\"literal\">1</code></td><td><code class=\"literal\">Low</code></td></tr>",
                "<tr><td><code class=\"literal\">2</code></td><td><code class=\"literal\">Medium</code></td></tr>",
                "<tr><td><code class=\"literal\">3</code></td><td><code class=\"literal\">High</code></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">UseEnumeratedDataType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string or character array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LabelPosition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Top'</code> | <code class=\"literal\">'Bottom'</code> |\n                            <code class=\"literal\">'Hide'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Top'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/rotaryswitch.html"
    },
    {
        "block_name": "Slider Switch",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ],
            [
                "<tr><th>Position</th><th>State Value</th><th>State Label</th></tr>",
                "<tr><td><strong class=\"guilabel\">Left</strong></td><td><code class=\"literal\">0</code></td><td><code class=\"literal\">on</code></td></tr>",
                "<tr><td><strong class=\"guilabel\">Right</strong></td><td><code class=\"literal\">1</code></td><td><code class=\"literal\">off</code></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LabelPosition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Top'</code> | <code class=\"literal\">'Bottom'</code> |\n                            <code class=\"literal\">'Hide'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Top'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/sliderswitch.html"
    },
    {
        "block_name": "Toggle Switch",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ],
            [
                "<tr><th>Position</th><th>State Value</th><th>State Label</th></tr>",
                "<tr><td><strong class=\"guilabel\">Top</strong></td><td><code class=\"literal\">0</code></td><td><code class=\"literal\">on</code></td></tr>",
                "<tr><td><strong class=\"guilabel\">Bottom</strong></td><td><code class=\"literal\">1</code></td><td><code class=\"literal\">off</code></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LabelPosition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Top'</code> | <code class=\"literal\">'Bottom'</code> |\n                            <code class=\"literal\">'Hide'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Top'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/toggleswitch.html"
    },
    {
        "block_name": "Callback Button",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ButtonType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string or character array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'Momentary'</code> | <code class=\"literal\">'Latch'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customcallbackbutton.html"
    },
    {
        "block_name": "Circular Gauge",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/circulargauge.html"
    },
    {
        "block_name": "Display",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customdisplay.html"
    },
    {
        "block_name": "Horizontal Gauge",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/horizontalgauge.html"
    },
    {
        "block_name": "Half Gauge",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customhalfgauge.html"
    },
    {
        "block_name": "Horizontal Slider",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/horizontalslider.html"
    },
    {
        "block_name": "Quarter Gauge",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customquartergauge.html"
    },
    {
        "block_name": "Push Button",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/custompushbutton.html"
    },
    {
        "block_name": "Knob",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customknob.html"
    },
    {
        "block_name": "Lamp",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customlamp.html"
    },
    {
        "block_name": "Rotary Switch",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customrotaryswitch.html"
    },
    {
        "block_name": "Toggle Switch",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customtoggleswitch.html"
    },
    {
        "block_name": "Rocker Switch",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customrockerswitch.html"
    },
    {
        "block_name": "Vertical Gauge",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/verticalgauge.html"
    },
    {
        "block_name": "Slider Switch",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customsliderswitch.html"
    },
    {
        "block_name": "Vertical Slider",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/verticalslider.html"
    },
    {
        "block_name": "Coulomb and Viscous Friction",
        "libraries": [
            "Simulink/Discontinuities",
            "HDL Coder/Discontinuities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">offset</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: real values</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[1 3 2\n\t\t\t\t\t\t\t\t\t0]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">gain</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: real values</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'1'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/coulombandviscousfriction.html"
    },
    {
        "block_name": "Backlash",
        "libraries": [
            "Simulink/Discontinuities",
            "HDL Coder/Discontinuities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">BacklashWidth</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: real scalar or\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">InitialOutput</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: real scalar or\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">InputProcessing</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Columns as channels\n                        (frame based)'</code> | <code class=\"literal\">'Elements as channels (sample\n                        based)'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Elements as channels\n                        (sample based)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector |\n                                string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/backlash.html"
    },
    {
        "block_name": "Dead Zone Dynamic",
        "libraries": [
            "Simulink/Discontinuities",
            "HDL Coder/Discontinuities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/deadzonedynamic.html"
    },
    {
        "block_name": "Dead Zone",
        "libraries": [
            "Simulink/Discontinuities",
            "HDL Coder/Discontinuities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">LowerValue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar or vector less\n                                than or equal to <code class=\"literal\">UpperValue</code>.</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'-0.5'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">UpperValue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar or vector greater\n                                than or equal to <code class=\"literal\">LowerValue</code>.</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'0.5'</code></span></td></tr>"
            ],
            [
                "<tr><th>Action</th><th>Reasons for Taking This Action</th><th>What Happens for Overflows</th><th>Example</th></tr>",
                "<tr><td>\n<p>Select this check box.</p>\n</td><td>\n<p>Your model has possible overflow, and you want explicit\n                                    saturation protection in the generated code.</p>\n</td><td>\n<p>Overflows saturate to either the minimum or maximum value that\n                                    the data type can represent.</p>\n</td><td>\n<p>The maximum value that the <code class=\"literal\">int8</code> (signed,\n                                    8-bit integer) data type can represent is 127. Any block\n                                    operation result greater than this maximum value causes overflow\n                                    of the 8-bit integer. With the check box selected, the block\n                                    output saturates at 127. Similarly, the block output saturates\n                                    at a minimum output value of -128.</p>\n</td></tr>",
                "<tr><td>\n<p>Do not select this check box.</p>\n</td><td>\n<p>You want to optimize efficiency of your generated code.</p>\n<p>You want to avoid overspecifying how a block handles\n                                    out-of-range signals. For more information, see <a class=\"a\" href=\"../ug/signal-ranges.html#brdiku9\">Troubleshoot Signal Range Errors</a>.</p>\n</td><td>\n<p>Overflows wrap to the appropriate value that is representable\n                                    by the data type.</p>\n</td><td>\n<p>The maximum value that the <code class=\"literal\">int8</code> (signed,\n                                    8-bit integer) data type can represent is 127. Any block\n                                    operation result greater than this maximum value causes overflow\n                                    of the 8-bit integer. With the check box cleared, the software\n                                    interprets the overflow-causing value as\n                                    <code class=\"literal\">int8</code>, which can produce an unintended result.\n                                    For example, a block result of 130 (binary 1000 0010) expressed\n                                    as <code class=\"literal\">int8</code>, is -126.</p>\n</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">LinearizeAsGain</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: <code class=\"literal\">'off'</code> |\n                        <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector | string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off'</code> |\n                        <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/deadzone.html"
    },
    {
        "block_name": "Hit Crossing",
        "libraries": [
            "Simulink/Discontinuities",
            "Simulink/Messages & Events",
            "HDL Coder/Discontinuities",
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">HitCrossingOffset</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: real values</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">HitCrossingDirection</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'either'</code> | <code class=\"literal\">'rising'</code>\n\t\t\t\t\t\t\t\t\t|<code class=\"literal\">'falling'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'either'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">ShowOutputPort</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">HitCrossingOutputType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Signal'</code> | <code class=\"literal\">'Message'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Function-Call'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Signal'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/hitcrossing.html"
    },
    {
        "block_name": "PWM",
        "libraries": [
            "Simulink/Discontinuities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Period</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> real scalar </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InitialDelay</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> numeric scalar </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">0</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DisallowZeroDutyCycle</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">RunAtFixedTimeIntervals</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> numeric scalar </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">0.1</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/pwm.html"
    },
    {
        "block_name": "Quantizer",
        "libraries": [
            "Simulink/Discontinuities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">QuantizationInterval</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: Any real or complex\n\t\t\t\t\t\t\t\tvalue</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'0.5'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">LinearizeAsGain</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: <code class=\"literal\">'off'</code> |\n                        <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/quantizer.html"
    },
    {
        "block_name": "Rate Limiter",
        "libraries": [
            "Simulink/Discontinuities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">RisingSlewLimit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: real number</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">FallingSlewLimit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: real number</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'-1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">SampleTimeMode</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'inherited'</code> | <code class=\"literal\">'continuous'</code>\n\t\t\t\t\t\t\t\t|</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'inherited'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">InitialCondition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">scalar</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">LinearizeAsGain</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off'</code> |\n                        <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/ratelimiter.html"
    },
    {
        "block_name": "Rate Limiter Dynamic",
        "libraries": [
            "Simulink/Discontinuities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/ratelimiterdynamic.html"
    },
    {
        "block_name": "Saturation",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Discontinuities",
            "HDL Coder/Discontinuities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">UpperLimit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: real scalar or\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">'0.5'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/saturation.html"
    },
    {
        "block_name": "Variable Pulse Generator",
        "libraries": [
            "Simulink/Discontinuities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/variablepulsegenerator.html"
    },
    {
        "block_name": "Relay",
        "libraries": [
            "Simulink/Discontinuities",
            "HDL Coder/Discontinuities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">OnSwitchValue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'eps'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">OffSwitchValue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'eps'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">OnOutputValue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">OffOutputValue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">InputProcessing</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Columns as channels\n                        (frame based)'</code> | <code class=\"literal\">'Elements as channels (sample\n                        based)'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Elements as channels\n                        (sample based)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector | string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off'</code> |\n                        <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                    <code class=\"literal\">OutMin</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'[ ]'</code>|\n                    scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[ ]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                    <code class=\"literal\">OutMax</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'[ ]'</code>|\n                    scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[ ]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Inherit: Same as input'</code>,\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Inherit: Inherit via back propagation'</code>,\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'single'</code>, <code class=\"literal\">'int8'</code>,\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'uint8'</code>, <code class=\"literal\">int16</code>,\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'uint16'</code>, <code class=\"literal\">'int32'</code>,\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'uint32'</code>, <code class=\"literal\">'int64'</code>,\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'uint64'</code>, <code class=\"literal\">fixdt(1,16,0)</code>,\n\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">fixdt(1,16,2^0,0)</code>,\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">fixdt(1,16,2^0,0)</code>. <code class=\"literal\">'&lt;data type\n\t\t\t\t\t\t\t\t\texpression&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Inherit:\n\t\t\t\t\t\t\t\t\tSame as input'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">LockScale</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/relay.html"
    },
    {
        "block_name": "Saturation Dynamic",
        "libraries": [
            "Simulink/Discontinuities",
            "HDL Coder/Discontinuities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                    <code class=\"literal\">OutMin</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'[ ]'</code>|\n                    scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[ ]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                    <code class=\"literal\">OutMax</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'[ ]'</code>|\n                    scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[ ]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Inherit: Same as\n                        input'</code>, <code class=\"literal\">'Inherit: Inherit via back\n                    propagation'</code>, <code class=\"literal\">'single'</code>, <code class=\"literal\">'int8'</code>,\n                        <code class=\"literal\">'uint8'</code>, <code class=\"literal\">int16</code>,\n                        <code class=\"literal\">'uint16'</code>, <code class=\"literal\">'int32'</code>,\n                        <code class=\"literal\">'uint32'</code>, <code class=\"literal\">'int64'</code>,\n                        <code class=\"literal\">'uint64'</code>, <code class=\"literal\">fixdt(1,16,0)</code>,\n                        <code class=\"guidropdown\">fixdt(1,16,2^0,0)</code>,\n                        <code class=\"literal\">fixdt(1,16,2^0,0)</code>. <code class=\"literal\">'&lt;data type\n                        expression&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Inherit: Same as\n                        input'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LockScale</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                                  <code class=\"literal\">RndMeth</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character\n                                                  vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                                  <code class=\"literal\">'Ceiling'</code> |\n                                                  <code class=\"literal\">'Convergent'</code> |\n                                                  <code class=\"literal\">'Floor'</code> |\n                                                  <code class=\"literal\">'Nearest'</code> |\n                                                  <code class=\"literal\">'Round'</code> |\n                                                  <code class=\"literal\">'Simplest'</code> |\n                                                  <code class=\"literal\">'Zero'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                                  <code class=\"literal\">'Floor'</code></span></td></tr>"
            ],
            [
                "<tr><th>Action</th><th>Reasons for Taking This Action</th><th>What Happens for Overflows</th><th>Example</th></tr>",
                "<tr><td>\n<p>Select this check box.</p>\n</td><td>\n<p>Your model has possible overflow, and you want explicit\n                                    saturation protection in the generated code.</p>\n</td><td>\n<p>Overflows saturate to either the minimum or maximum value that\n                                    the data type can represent.</p>\n</td><td>\n<p>The maximum value that the <code class=\"literal\">int8</code> (signed,\n                                    8-bit integer) data type can represent is 127. Any block\n                                    operation result greater than this maximum value causes overflow\n                                    of the 8-bit integer. With the check box selected, the block\n                                    output saturates at 127. Similarly, the block output saturates\n                                    at a minimum output value of -128.</p>\n</td></tr>",
                "<tr><td>\n<p>Do not select this check box.</p>\n</td><td>\n<p>You want to optimize efficiency of your generated code.</p>\n<p>You want to avoid overspecifying how a block handles\n                                    out-of-range signals. For more information, see <a class=\"a\" href=\"../ug/signal-ranges.html#brdiku9\">Troubleshoot Signal Range Errors</a>.</p>\n</td><td>\n<p>Overflows wrap to the appropriate value that is representable\n                                    by the data type.</p>\n</td><td>\n<p>The maximum value that the <code class=\"literal\">int8</code> (signed,\n                                    8-bit integer) data type can represent is 127. Any block\n                                    operation result greater than this maximum value causes overflow\n                                    of the 8-bit integer. With the check box cleared, the software\n                                    interprets the overflow-causing value as\n                                    <code class=\"literal\">int8</code>, which can produce an unintended result.\n                                    For example, a block result of 130 (binary 1000 0010) expressed\n                                    as <code class=\"literal\">int8</code>, is -126.</p>\n</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/saturationdynamic.html"
    },
    {
        "block_name": "Wrap To Zero",
        "libraries": [
            "Simulink/Discontinuities",
            "HDL Coder/Discontinuities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Threshold</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">scalar</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'255'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/wraptozero.html"
    },
    {
        "block_name": "Difference",
        "libraries": [
            "Simulink/Discrete"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">ICPrevInput</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n\t\t\t\t\t\t\t\t\tmatrix | N-D array</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0.0'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/difference.html"
    },
    {
        "block_name": "Delay",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Discrete",
            "DSP System Toolbox/Signal Operations",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Discrete"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">DelayLengthSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Dialog'</code> | <code class=\"literal\">'Input\n\t\t\t\t\t\t\t\t\t\tport'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Dialog'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/delay.html"
    },
    {
        "block_name": "Discrete Derivative",
        "libraries": [
            "Simulink/Discrete"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">gainval</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1.0'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/discretederivative.html"
    },
    {
        "block_name": "Discrete FIR Filter",
        "libraries": [
            "Simulink/Discrete",
            "HDL Coder/Discrete",
            "HDL Coder/HDL Floating Point Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">CoefSource</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Dialog parameters' | 'Input port'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Dialog parameters'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/discretefirfilter.html"
    },
    {
        "block_name": "Discrete Filter",
        "libraries": [
            "Simulink/Discrete",
            "DSP System Toolbox/Filtering/Filter Implementations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FilterStructure</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Direct form II' | 'Direct form I transposed' | 'Direct\n\t\t\t\t\t\t\t\t\t\tform I' | 'Direct form II transposed'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Direct form II'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/discretefilter.html"
    },
    {
        "block_name": "Discrete PID Controller",
        "libraries": [
            "Simulink/Discrete",
            "HDL Coder/Discrete",
            "HDL Coder/HDL Floating Point Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Controller</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">\"PID\"</code>, <code class=\"literal\">\"PI\"</code>, <code class=\"literal\">\"PD\"</code>, <code class=\"literal\">\"P\"</code>, <code class=\"literal\">\"I\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">\"PID\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Controller</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">\"Parallel\"</code>, <code class=\"literal\">\"Ideal\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">\"Parallel\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TimeDomain</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"Continuous-time\"</code>,\n                                    <code class=\"literal\">\"Discrete-time\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"Discrete-time\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">UseExternalTs</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code>, <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal remove_text_wrapping\">-1</code>, positive scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal remove_text_wrapping\">-1</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">IntegratorMethod</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">\"Forward Euler\"</code>, <code class=\"literal\">\"Backward Euler\"</code>, <code class=\"literal\">\"Trapezoidal\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">\"Forward Euler\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">FilterMethod</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">\"Forward Euler\"</code>, <code class=\"literal\">\"Backward Euler\"</code>, <code class=\"literal\">\"Trapezoidal\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">\"Forward Euler\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/discretepidcontroller.html"
    },
    {
        "block_name": "Discrete Transfer Fcn",
        "libraries": [
            "Simulink/Discrete",
            "HDL Coder/Discrete",
            "HDL Coder/HDL Floating Point Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">NumeratorSource</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Dialog' | 'Input port'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Dialog'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/discretetransferfcn.html"
    },
    {
        "block_name": "Discrete Zero-Pole",
        "libraries": [
            "Simulink/Discrete"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Zeros</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'[1]'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/discretezeropole.html"
    },
    {
        "block_name": "Discrete State-Space",
        "libraries": [
            "Simulink/Discrete"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">A</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n\t\t\t\t\t\t\t\t\tmatrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/discretestatespace.html"
    },
    {
        "block_name": "Discrete PID Controller (2DOF)",
        "libraries": [
            "Simulink/Discrete"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Controller</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">\"PID\"</code>, <code class=\"literal\">\"PI\"</code>, <code class=\"literal\">\"PD\"</code> </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">\"PID\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Controller</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">\"Parallel\"</code>, <code class=\"literal\">\"Ideal\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">\"Parallel\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TimeDomain</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"Continuous-time\"</code>,\n                                    <code class=\"literal\">\"Discrete-time\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"Discrete-time\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">UseExternalTs</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code>, <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal remove_text_wrapping\">-1</code>, positive scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal remove_text_wrapping\">-1</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">IntegratorMethod</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">\"Forward Euler\"</code>, <code class=\"literal\">\"Backward Euler\"</code>, <code class=\"literal\">\"Trapezoidal\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">\"Forward Euler\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">FilterMethod</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string, character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">\"Forward Euler\"</code>, <code class=\"literal\">\"Backward Euler\"</code>, <code class=\"literal\">\"Trapezoidal\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">\"Forward Euler\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/discretepidcontroller2dof.html"
    },
    {
        "block_name": "Discrete-Time Integrator",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Discrete",
            "HDL Coder/Discrete",
            "HDL Coder/HDL Floating Point Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">IntegratorMethod</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Integration: Forward Euler'</code> |\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Integration: Backward Euler'</code> |\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Integration: Trapezoidal'</code> |\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Accumulation: Forward Euler'</code> |\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Accumulation: Backward Euler'</code> |\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Accumulation: Trapezoidal'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Integration: Forward Euler'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/discretetimeintegrator.html"
    },
    {
        "block_name": "First-Order Hold (Obsolete)",
        "libraries": [
            "Simulink/Discrete"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Ts</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar |\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/ref_obsolete_blocks/firstorderhold.html"
    },
    {
        "block_name": "Memory",
        "libraries": [
            "Simulink/Discrete",
            "HDL Coder/Discrete"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InitialCondition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar |\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/memory.html"
    },
    {
        "block_name": "Propagation Delay",
        "libraries": [
            "Simulink/Discrete"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InitialOutput</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> numeric scalar </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">0</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">RunAtFixedTimeIntervals</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> numeric scalar </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">0.1</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/propagationdelay.html"
    },
    {
        "block_name": "Resettable Delay",
        "libraries": [
            "Simulink/Discrete",
            "HDL Coder/Discrete"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">DelayLengthSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Dialog'</code> | <code class=\"literal\">'Input\n\t\t\t\t\t\t\t\t\t\tport'</code> |</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Dialog'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/resettabledelay.html"
    },
    {
        "block_name": "Transfer Fcn Lead or Lag",
        "libraries": [
            "Simulink/Discrete"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">PoleZ</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: real scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'0.95'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">ZeroZ</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: real scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'0.75'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">ICPrevInput</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: real scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'0.0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">ICPrevOutput</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: real scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'0.0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">RndMeth</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Ceiling' | 'Convergent' | 'Floor' | 'Nearest' | 'Round' | 'Simplest' |\n                        'Zero'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Floor'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DoSatur</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/transferfcnleadorlag.html"
    },
    {
        "block_name": "Tapped Delay",
        "libraries": [
            "Simulink/Discrete",
            "HDL Coder/Discrete"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">vinit</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0.0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">samptime</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar | vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">NumDelays</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> positive scalar |\n\t\t\t\t\t\t\t\t\t<code class=\"literal remove_text_wrapping\">-1</code> (inherited)</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'4'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DelayOrder</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Oldest' | 'Newest'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Oldest'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">includeCurrent</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/tappeddelay.html"
    },
    {
        "block_name": "Transfer Fcn First Order",
        "libraries": [
            "Simulink/Discrete"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">PoleZ</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: real scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'0.95'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">ICPrevOutput</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: real scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'0.0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">RndMeth</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Ceiling' | 'Convergent' | 'Floor' | 'Nearest' | 'Round' | 'Simplest' |\n                        'Zero'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Floor'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DoSatur</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/transferfcnfirstorder.html"
    },
    {
        "block_name": "Transfer Fcn Real Zero",
        "libraries": [
            "Simulink/Discrete"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">ZeroZ</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: real scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'0.75'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">ICPrevInput</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: real scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'0.0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">InputProcessing</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Columns as channels\n                        (frame based)'</code> | <code class=\"literal\">'Elements as channels (sample\n                        based)'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Elements as channels\n                        (sample based)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">RndMeth</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Ceiling' | 'Convergent' | 'Floor' | 'Nearest' | 'Round' | 'Simplest' |\n                        'Zero'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Floor'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DoSatur</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/transferfcnrealzero.html"
    },
    {
        "block_name": "Unit Delay",
        "libraries": [
            "Simulink/Discrete",
            "HDL Coder/Discrete"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">InitialCondition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar |\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/unitdelay.html"
    },
    {
        "block_name": "Zero-Order Hold",
        "libraries": [
            "Simulink/Discrete",
            "HDL Coder/Discrete"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">SampleTime</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal remove_text_wrapping\">-1</code> (default) | positive scalar number</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/zeroorderhold.html"
    },
    {
        "block_name": "Variable Integer Delay",
        "libraries": [
            "Simulink/Discrete"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">DelayLengthSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Dialog'</code> | <code class=\"literal\">'Input\n\t\t\t\t\t\t\t\t\t\tport'</code> |</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Dialog'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/variableintegerdelay.html"
    },
    {
        "block_name": "Bit Clear",
        "libraries": [
            "Simulink/Logic and Bit Operations",
            "HDL Coder/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">iBit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: scalar or vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: {'0'}</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: '0'</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/bitclear.html"
    },
    {
        "block_name": "Bit Set",
        "libraries": [
            "Simulink/Logic and Bit Operations",
            "HDL Coder/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">iBit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: positive\n                                integer</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:<code class=\"literal\">'0'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/bitset.html"
    },
    {
        "block_name": "Bit to Integer Converter",
        "libraries": [
            "Simulink/Logic and Bit Operations",
            "Communications Toolbox/Utility Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">nbits</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: integer in the range\n                                [1, 32]</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'3'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">bitOrder</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'MSB\n                                    first'</code> | <code class=\"literal\">'LSB first'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'MSB\n                                    first'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">signedOutputValues</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Unsigned'</code> |\n                                <code class=\"literal\">'Signed'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Unsigned'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">outDtype</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Inherit via\n                                    internal rule'</code> | <code class=\"literal\">'Smallest integer'</code>\n                                | <code class=\"literal\">'Same as input'</code> | <code class=\"literal\">'double'</code> |\n                                    <code class=\"literal\">'single'</code> | <code class=\"literal\">'int8'</code> |\n                                    <code class=\"literal\">'uint8'</code> | <code class=\"literal\">'int16'</code> |\n                                    <code class=\"literal\">'uint16'</code> | <code class=\"literal\">'int32'</code> |\n                                    <code class=\"literal\">'uint32'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Inherit via\n                                    internal rule'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/bittointegerconverter.html"
    },
    {
        "block_name": "Bitwise Operator",
        "libraries": [
            "Simulink/Logic and Bit Operations",
            "HDL Coder/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><th>Bitwise Operation</th><th>Description</th></tr>",
                "<tr><td><p>AND</p></td><td><p>TRUE if the corresponding bits are all\n                                                TRUE</p></td></tr>",
                "<tr><td><p>OR</p></td><td><p>TRUE if at least one of the corresponding bits\n                                                is TRUE</p></td></tr>",
                "<tr><td><p>NAND</p></td><td><p>TRUE if at least one of the corresponding bits\n                                                is FALSE</p></td></tr>",
                "<tr><td><p>NOR</p></td><td><p>TRUE if no corresponding bits are\n                                            TRUE</p></td></tr>",
                "<tr><td><p>XOR</p></td><td><p>TRUE if an odd number of corresponding bits are\n                                                TRUE</p></td></tr>",
                "<tr><td><p>NOT</p></td><td><p>TRUE if the input is FALSE (available only for\n                                                single input)</p></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">UseBitMask</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'off'</code>|<code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumInputPorts</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: positive\n                                integer</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><th>To perform a...</th><th>Set the Operator parameter to...</th><th>And create a bit mask with...</th></tr>",
                "<tr><td>Bit set</td><td>OR</td><td>A 1 for each corresponding input bit that you want to set\n                                        to 1</td></tr>",
                "<tr><td>Bit clear</td><td>AND</td><td>A 0 for each corresponding input bit that you want to set\n                                        to 0</td></tr>",
                "<tr><td>Bit get</td><td>AND</td><td>A 1 for each corresponding input bit that you want to\n                                        get</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">BitMaskRealWorld</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Real World\n                                    Value'</code> | <code class=\"literal\">'Stored Integer'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Stored\n                                    Integer'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/bitwiseoperator.html"
    },
    {
        "block_name": "Compare To Constant",
        "libraries": [
            "Simulink/Logic and Bit Operations",
            "HDL Coder/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">relop</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'=='</code>\n                                | <code class=\"literal\">'~='</code>| <code class=\"literal\">'&lt;'</code>\n                                    |<code class=\"literal\">'&lt;='</code>| <code class=\"literal\">'&gt;='</code>|\n                                    <code class=\"literal\">'&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'&lt;='</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">const</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> scalar | vector | matrix |\n                                N-D array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'3.0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:<code class=\"literal\">'boolean'</code> |\n                                    <code class=\"literal\">'uint8'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'boolean'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/comparetoconstant.html"
    },
    {
        "block_name": "Combinatorial Logic",
        "libraries": [
            "Simulink/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">TruthTable</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: matrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[0 0;0 1;0\n                                    1;1 0;0 1;1 0;1 0;1 1]'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/combinatoriallogic.html"
    },
    {
        "block_name": "Compare To Zero",
        "libraries": [
            "Simulink/Logic and Bit Operations",
            "HDL Coder/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">relop</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'=='</code>\n                                | <code class=\"literal\">'~='</code>| <code class=\"literal\">'&lt;'</code>\n                                    |<code class=\"literal\">'&lt;='</code>| <code class=\"literal\">'&gt;='</code>|\n                                    <code class=\"literal\">'&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'&lt;='</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:<code class=\"literal\">'boolean'</code> |\n                                    <code class=\"literal\">'uint8'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'boolean'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/comparetozero.html"
    },
    {
        "block_name": "Detect Change",
        "libraries": [
            "Simulink/Logic and Bit Operations",
            "HDL Coder/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">vinit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar |\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong><code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">InputProcessing</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Columns as channels\n                        (frame based)'</code> | <code class=\"literal\">'Elements as channels (sample\n                        based)'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Elements as channels\n                        (sample based)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'boolean'</code> |\n                                <code class=\"literal\">'uint8'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'boolean'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/detectchange.html"
    },
    {
        "block_name": "Detect Decrease",
        "libraries": [
            "Simulink/Logic and Bit Operations",
            "HDL Coder/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">vinit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar |\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">InputProcessing</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Columns as channels\n                        (frame based)'</code> | <code class=\"literal\">'Elements as channels (sample\n                        based)'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Elements as channels\n                        (sample based)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'boolean'</code> |\n                                <code class=\"literal\">'uint8'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'boolean'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/detectdecrease.html"
    },
    {
        "block_name": "Detect Fall Nonpositive",
        "libraries": [
            "Simulink/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">vinit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n                                matrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">InputProcessing</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Columns as channels\n                        (frame based)'</code> | <code class=\"literal\">'Elements as channels (sample\n                        based)'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Elements as channels\n                        (sample based)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'boolean' | 'uint8'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'boolean'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/detectfallnonpositive.html"
    },
    {
        "block_name": "Detect Increase",
        "libraries": [
            "Simulink/Logic and Bit Operations",
            "HDL Coder/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">vinit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n                                matrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0.0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">InputProcessing</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Columns as channels\n                        (frame based)'</code> | <code class=\"literal\">'Elements as channels (sample\n                        based)'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Elements as channels\n                        (sample based)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'boolean' | 'uint8'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'boolean'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/detectincrease.html"
    },
    {
        "block_name": "Detect Fall Negative",
        "libraries": [
            "Simulink/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">vinit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar |\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong><code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">InputProcessing</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Columns as channels\n                        (frame based)'</code> | <code class=\"literal\">'Elements as channels (sample\n                        based)'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Elements as channels\n                        (sample based)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'boolean'</code> |\n                                <code class=\"literal\">'uint8'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'boolean'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/detectfallnegative.html"
    },
    {
        "block_name": "Detect Rise Positive",
        "libraries": [
            "Simulink/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">vinit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n                                matrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">InputProcessing</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Columns as channels\n                        (frame based)'</code> | <code class=\"literal\">'Elements as channels (sample\n                        based)'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Elements as channels\n                        (sample based)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'boolean' | 'uint8'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'boolean'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/detectrisepositive.html"
    },
    {
        "block_name": "Detect Rise Nonnegative",
        "libraries": [
            "Simulink/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">vinit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n                                matrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">InputProcessing</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Columns as channels\n                        (frame based)'</code> | <code class=\"literal\">'Elements as channels (sample\n                        based)'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Elements as channels\n                        (sample based)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'boolean' | 'uint8'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'boolean'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/detectrisenonnegative.html"
    },
    {
        "block_name": "Extract Bits",
        "libraries": [
            "Simulink/Logic and Bit Operations",
            "HDL Coder/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">bitsToExtract</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Upper half' | 'Lower half' | 'Range starting with most\n                                    significant bit' | 'Range ending with least significant bit' |\n                                    'Range of bits'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Upper half'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">numBits</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> positive\n                                integer</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'8'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">bitIdxRange</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> contiguous\n                                range</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'[0 7]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">outScalingMode</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Preserve fixed-point scaling' | 'Treat bit field as an\n                                    integer'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Preserve fixed-point scaling'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/extractbits.html"
    },
    {
        "block_name": "Float Extract Bits",
        "libraries": [
            "Simulink/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                  <code class=\"literal\">OutputMode</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'All bits'</code> |\n                  <code class=\"literal\">'Range of bits'</code> | <code class=\"literal\">'Sign'</code> |\n                  <code class=\"literal\">'Mantissa'</code> | <code class=\"literal\">'Exponent'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'All\n                bits'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                <code class=\"literal\">BitRange</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'[0 15]'</code> |\n                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[0 15]'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/floatextractbits.html"
    },
    {
        "block_name": "Integer to Bit Converter",
        "libraries": [
            "Simulink/Logic and Bit Operations",
            "Communications Toolbox/Utility Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>: <code class=\"literal\">nbits</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: integer in the range [1, 32]</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'3'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n         <code class=\"literal\">signedInputValues</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Unsigned'</code> |\n         <code class=\"literal\">'Signed'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Unsigned'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n        <code class=\"literal\">bitOrder</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'MSB first'</code> |\n         <code class=\"literal\">'LSB first'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'MSB first'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n        <code class=\"literal\">outDtype</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Inherit via internal\n         rule'</code> | <code class=\"literal\">'Smallest unsigned integer'</code> | <code class=\"literal\">'Same as\n         input'</code> | <code class=\"literal\">'double'</code> | <code class=\"literal\">'single'</code> |\n         <code class=\"literal\">'int8'</code> | <code class=\"literal\">'uint8'</code> | <code class=\"literal\">'int16'</code> |\n         <code class=\"literal\">'uint16'</code> | <code class=\"literal\">'int32'</code> | <code class=\"literal\">'uint32'</code>|\n         <code class=\"literal\">'boolean'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Inherit via internal\n         rule'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/integertobitconverter.html"
    },
    {
        "block_name": "Interval Test",
        "libraries": [
            "Simulink/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\"> IntervalClosedRight</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on' | 'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">uplimit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n                                matrix | N-D array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0.5'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\"> IntervalClosedLeft</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on' | 'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">lowlimit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n                                matrix | N-D array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-0.5'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'boolean' | 'uint8'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'boolean'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/intervaltest.html"
    },
    {
        "block_name": "Interval Test Dynamic",
        "libraries": [
            "Simulink/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\"> IntervalClosedRight</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on' | 'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\"> IntervalClosedLeft</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on' | 'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'boolean' | 'uint8'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'boolean'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/intervaltestdynamic.html"
    },
    {
        "block_name": "Logical Operator",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Logic and Bit Operations",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Operator</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'AND' | 'OR' | 'NAND' | 'NOR' | 'XOR' | 'NXOR' |\n\t\t\t\t\t\t\t\t\t\t'NOT'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'AND'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/logicaloperator.html"
    },
    {
        "block_name": "Relational Operator",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Logic and Bit Operations",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/HDL Floating Point Operations",
            "HDL Coder/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Operator</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'==' | '~=' | '&lt;' | '&lt;=' | '&gt;=' | '&gt;' | 'isInf' |\n\t\t\t\t\t\t\t\t\t\t'isNaN' | 'isFinite'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'&lt;='</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/relationaloperator.html"
    },
    {
        "block_name": "Direct Lookup Table (n-D)",
        "libraries": [
            "Simulink/Lookup Tables",
            "HDL Coder/Lookup Tables"
        ],
        "parameters": [
            [
                "<tr><th>To specify...</th><th>Do this...</th></tr>",
                "<tr><td>\n<p>1, 2, 3, or 4</p>\n</td><td>\n<p>Select the value from the drop-down list.</p>\n</td></tr>",
                "<tr><td>\n<p>A higher number of table dimensions</p>\n</td><td>\n<p>Enter a positive integer directly in the\n\t\t\t\t\t\t\t\t\t\t\t\tfield.</p>\n<p>The maximum number of table dimensions that this\n\t\t\t\t\t\t\t\t\t\t\t\tblock supports is 30.</p>\n</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/directlookuptablend.html"
    },
    {
        "block_name": "2-D Lookup Table",
        "libraries": [
            "Simulink/Lookup Tables",
            "HDL Coder/Lookup Tables"
        ],
        "parameters": [
            [
                "<tr><th>To specify...</th><th>Do this...</th></tr>",
                "<tr><td>\n<p>1, 2, 3, or 4</p>\n</td><td>\n<p>Select the value from the drop-down list.</p>\n</td></tr>",
                "<tr><td>\n<p>A higher number of table dimensions</p>\n</td><td>\n<p>Enter a positive integer directly in the\n                                                field.</p>\n<p>The maximum number of table dimensions that this\n                                                block supports is 30.</p>\n</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/2dlookuptable.html"
    },
    {
        "block_name": "1-D Lookup Table",
        "libraries": [
            "Simulink/Lookup Tables",
            "HDL Coder/Lookup Tables"
        ],
        "parameters": [
            [
                "<tr><th>To specify...</th><th>Do this...</th></tr>",
                "<tr><td>\n<p>1, 2, 3, or 4</p>\n</td><td>\n<p>Select the value from the drop-down list.</p>\n</td></tr>",
                "<tr><td>\n<p>A higher number of table dimensions</p>\n</td><td>\n<p>Enter a positive integer directly in the\n                                                field.</p>\n<p>The maximum number of table dimensions that this\n                                                block supports is 30.</p>\n</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/1dlookuptable.html"
    },
    {
        "block_name": "Interpolation Using Prelookup",
        "libraries": [
            "Simulink/Lookup Tables"
        ],
        "parameters": [
            [
                "<tr><th>To specify...</th><th>Do this...</th></tr>",
                "<tr><td>\n<p>1, 2, 3, or 4</p>\n</td><td>\n<p>Select the value from the drop-down list.</p>\n</td></tr>",
                "<tr><td>\n<p>A higher number of table dimensions</p>\n</td><td>\n<p>Enter a positive integer directly in the\n\t\t\t\t\t\t\t\t\t\t\t\tfield.</p>\n<p>The maximum number of table dimensions that this\n\t\t\t\t\t\t\t\t\t\t\t\tblock supports is 30.</p>\n</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/interpolationusingprelookup.html"
    },
    {
        "block_name": "Shift Arithmetic",
        "libraries": [
            "Simulink/Logic and Bit Operations",
            "HDL Coder/Logic and Bit Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">BitShiftNumberSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector,\n\t\t\t\t\t\t\t\tstring</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Dialog'</code> | <code class=\"literal\">'Input\n\t\t\t\t\t\t\t\tport'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Dialog'</code></span></td></tr>"
            ],
            [
                "<tr><th>If the direction is...</th><th>Then...</th></tr>",
                "<tr><td>\n<code class=\"guidropdown\">Left</code> or\n\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Right</code>\n</td><td>Use positive integers to specify bit shifts.</td></tr>",
                "<tr><td>\n<code class=\"guidropdown\">Bidirectional</code>\n</td><td>Use positive integers for right shifts and negative\n\t\t\t\t\t\t\t\t\t\tintegers for left shifts.</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">BitShiftDirection</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector,\n\t\t\t\t\t\t\t\tstring</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Left'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Right'</code> |\n\t\t\t\t\t\t\t\t<code class=\"literal\">'Bidrectional'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Bidrectional'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">BinPtShiftNumber</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector,\n\t\t\t\t\t\t\t\tstring</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Dialog'</code> | <code class=\"literal\">'Input\n\t\t\t\t\t\t\t\tport'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Dialog'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">DiagnosticForOORShift</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector,\n\t\t\t\t\t\t\t\tstring</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'None'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Warning'</code> |\n\t\t\t\t\t\t\t\t<code class=\"literal\">'Error'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'None'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">CheckOORBitShift</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector,\n\t\t\t\t\t\t\t\tstring</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/shiftarithmetic.html"
    },
    {
        "block_name": "Lookup Table Dynamic",
        "libraries": [
            "Simulink/Lookup Tables"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LookUpMeth</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Interpolation-Extrapolation' | 'Interpolation-Use End\n\t\t\t\t\t\t\t\t\t\tValues' | 'Use Input Nearest' | 'Use Input Below' | 'Use\n\t\t\t\t\t\t\t\t\t\tInput Above'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Interpolation-Use End Values'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/lookuptabledynamic.html"
    },
    {
        "block_name": "n-D Lookup Table",
        "libraries": [
            "Simulink/Lookup Tables",
            "HDL Coder/Lookup Tables"
        ],
        "parameters": [
            [
                "<tr><th>Value</th><th>Setting</th></tr>",
                "<tr><td><p>1, 2, 3, or 4</p></td><td><p>Select the value from the drop-down\n\t\t\t\t\t\t\t\t\t\t\t\tlist.</p></td></tr>",
                "<tr><td><p>A higher number of table\n\t\t\t\t\t\t\t\t\t\t\tdimensions</p></td><td><p>Enter a positive integer directly in the\n\t\t\t\t\t\t\t\t\t\t\t\tfield.</p><p>The maximum number of table\n\t\t\t\t\t\t\t\t\t\t\t\tdimensions that this block supports is\n\t\t\t\t\t\t\t\t\t\t\t30.</p></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/ndlookuptable.html"
    },
    {
        "block_name": "Abs",
        "libraries": [
            "Simulink/Math Operations",
            "HDL Coder/HDL Floating Point Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector | string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off'</code> |\n                        <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/abs.html"
    },
    {
        "block_name": "Sine, Cosine",
        "libraries": [
            "Simulink/Lookup Tables"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Formula</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'sin(2*pi*u)' | 'cos(2*pi*u)' | 'exp(j*2*pi*u)' |\n                                    'sin(2*pi*u) and cos(2*pi*u)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">NumDataPoints</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">integer &gt;= 2</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'(2^5)+1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutputWordLength</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">integer from 2 to 53</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'16'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InternalRulePriority</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Speed' | 'Precision'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Speed'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/sine.html"
    },
    {
        "block_name": "Prelookup",
        "libraries": [
            "Simulink/Lookup Tables",
            "HDL Coder/Lookup Tables"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">BreakpointsSpecification</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n                                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Explicit values' | 'Even spacing' | 'Breakpoint\n                                        object'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Explicit values'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/prelookup.html"
    },
    {
        "block_name": "Add",
        "libraries": [
            "Simulink/Math Operations",
            "HDL Coder/HDL Floating Point Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                        <code class=\"literal\">IconShape</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character\n                                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                        <code class=\"literal\">'rectangular'</code> |\n                                        <code class=\"literal\">'round'</code></span></td></tr>",
                "<tr><td><span class=\"member\"></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                        <code class=\"literal\">'round'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/add.html"
    },
    {
        "block_name": "Algebraic Constraint",
        "libraries": [
            "Simulink/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Constraint</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'f(z) = 0' | 'f(z) = z'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'f(z) = 0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Solver</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'auto' | 'Trust region' | 'Line search'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'auto'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Tolerance</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'auto' |</code> positive scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'auto'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InitialGuess</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/algebraicconstraint.html"
    },
    {
        "block_name": "Bias",
        "libraries": [
            "Simulink/Math Operations",
            "HDL Coder/HDL Floating Point Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Bias</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> real, finite</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0.0'</code></span></td></tr>"
            ],
            [
                "<tr><th>Action</th><th>Reasons for Taking This Action</th><th>What Happens for Overflows</th><th>Example</th></tr>",
                "<tr><td>\n<p>Select this check box.</p>\n</td><td>\n<p>Your model has possible overflow, and you want explicit\n                                    saturation protection in the generated code.</p>\n</td><td>\n<p>Overflows saturate to either the minimum or maximum value that\n                                    the data type can represent.</p>\n</td><td>\n<p>The maximum value that the <code class=\"literal\">int8</code> (signed,\n                                    8-bit integer) data type can represent is 127. Any block\n                                    operation result greater than this maximum value causes overflow\n                                    of the 8-bit integer. With the check box selected, the block\n                                    output saturates at 127. Similarly, the block output saturates\n                                    at a minimum output value of -128.</p>\n</td></tr>",
                "<tr><td>\n<p>Do not select this check box.</p>\n</td><td>\n<p>You want to optimize efficiency of your generated code.</p>\n<p>You want to avoid overspecifying how a block handles\n                                    out-of-range signals. For more information, see <a class=\"a\" href=\"../ug/signal-ranges.html#brdiku9\">Troubleshoot Signal Range Errors</a>.</p>\n</td><td>\n<p>Overflows wrap to the appropriate value that is representable\n                                    by the data type.</p>\n</td><td>\n<p>The maximum value that the <code class=\"literal\">int8</code> (signed,\n                                    8-bit integer) data type can represent is 127. Any block\n                                    operation result greater than this maximum value causes overflow\n                                    of the 8-bit integer. With the check box cleared, the software\n                                    interprets the overflow-causing value as\n                                    <code class=\"literal\">int8</code>, which can produce an unintended result.\n                                    For example, a block result of 130 (binary 1000 0010) expressed\n                                    as <code class=\"literal\">int8</code>, is -126.</p>\n</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/bias.html"
    },
    {
        "block_name": "Assignment",
        "libraries": [
            "Simulink/Math Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">NumberOfDimensions</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">integer</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">IndexMode</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Zero-based'</code> | <code class=\"literal\">'One-based'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'One-based'</code>\n</span></td></tr>"
            ],
            [
                "<tr><th>Menu Item</th><th>Action</th></tr>",
                "<tr><td><code class=\"guidropdown\">Assign all</code></td><td><p>All elements are assigned.</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Index vector (dialog)</code></td><td><p>Enables the <strong class=\"guilabel\">Index</strong> column.\n                                            Enter the indices of elements.</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Index vector (port)</code></td><td><p>The index port defines the indices of\n                                            elements.</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Starting index\n                                        (dialog)</code></td><td><p>Enables the <strong class=\"guilabel\">Index</strong> column.\n                                            Enter the starting index of the range of elements to be\n                                            assigned values.</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Starting index (port)</code></td><td><p>The index port defines the starting index of the\n                                            range of elements to be assigned values.</p></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">IndexParamArray</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> cell array</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'{ }'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">OutputSizeArray</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> cell array</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'{ }'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">OutputInitialize</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Initialize using input port &lt;Y0&gt;'</code> |\n                                    <code class=\"literal\">'Specify size for each dimension in\n                                table'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Initialize using input port &lt;Y0&gt;'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">DiagnosticForDimensions</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Error'</code> | <code class=\"literal\">'Warning'</code> |\n                                    <code class=\"literal\">'None'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Warning'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">RuntimeRangeChecks</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Off'</code> | <code class=\"literal\">'On'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Off'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/assignment.html"
    },
    {
        "block_name": "Divide",
        "libraries": [
            "Simulink/Math Operations",
            "HDL Coder/HDL Floating Point Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Inputs</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'2' | '*' | '**' | '*/' | '*/*' |\n\t\t\t\t\t\t\t\t\t...</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'*/'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/divide.html"
    },
    {
        "block_name": "Complex to Magnitude-Angle",
        "libraries": [
            "Simulink/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">Output</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Magnitude and angle'</code> |\n                                    <code class=\"literal\">'Magnitude'</code> |\n                                <code class=\"literal\">'Angle'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Magnitude and angle'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/complextomagnitudeangle.html"
    },
    {
        "block_name": "Complex to Real-Imag",
        "libraries": [
            "Simulink/Math Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">Output</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Real and imag'</code> | <code class=\"literal\">'Real'</code> |\n                                    <code class=\"literal\">'Imag'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Real and imag'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/complextorealimag.html"
    },
    {
        "block_name": "Dot Product",
        "libraries": [
            "Simulink/Math Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">InputSameDT</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n\t\t\t\t\t\t\t\t| <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                    <code class=\"literal\">OutMin</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'[ ]'</code>|\n                    scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[ ]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                    <code class=\"literal\">OutMax</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[ ]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Inherit:\n\t\t\t\t\t\t\t\t\tInherit via internal rule</code> | <code class=\"literal\">'Inherit: Same as\n\t\t\t\t\t\t\t\t\tfirst input'</code> | <code class=\"literal\">'Inherit: Inherit via back\n\t\t\t\t\t\t\t\t\tpropagation'</code> | <code class=\"literal\">'double'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'single'</code> | <code class=\"literal\">'half'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'int8'</code> | <code class=\"literal\">'uint8'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'int16'</code> | <code class=\"literal\">'uint16'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'int32'</code> | <code class=\"literal\">'uint32'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'int64'</code> | <code class=\"literal\">'uint64'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'fixdt(1,16)'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'fixdt(1,16,0)'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'fixdt(1,16,2^0,0)'</code> | <code class=\"literal\">'&lt;data type\n\t\t\t\t\t\t\t\t\texpression&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Inherit:\n\t\t\t\t\t\t\t\t\tInherit via internal rule'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                                  <code class=\"literal\">LockScale</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character\n                                                  vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                                  <code class=\"literal\">'off'</code> |\n                                                  <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                                  <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">RndMeth</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Ceiling' | 'Convergent' | 'Floor' | 'Nearest' | 'Round' | 'Simplest' |\n                        'Zero'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Floor'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">SaturateOnIntegerOverflow</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/dotproduct.html"
    },
    {
        "block_name": "Gain",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Math Operations",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/HDL Floating Point Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Gain</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'1'</code> | real- or complex-valued scalar, vector,\n\t\t\t\t\t\t\t\t\tor matrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/gain.html"
    },
    {
        "block_name": "Find Nonzero Elements",
        "libraries": [
            "Simulink/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">IndexOutputFormat</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Linear indices'</code> |\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Subscripts'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Linear indices'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/findnonzeroelements.html"
    },
    {
        "block_name": "Math Function",
        "libraries": [
            "Simulink/Math Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Operator</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'exp' | 'log' | '2^u' | '10^u' | 'log10' |\n\t\t\t\t\t\t\t\t\t\t'magnitude^2' | 'square' | 'pow' | 'conj' | 'reciprocal' |\n\t\t\t\t\t\t\t\t\t\t'hypot' | 'rem' | 'mod' | 'transpose' |\n\t\t\t\t\t\t\t\t\t\t'hermitian'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'exp'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/mathfunction.html"
    },
    {
        "block_name": "Magnitude-Angle to Complex",
        "libraries": [
            "Simulink/Math Operations",
            "HDL Coder/HDL Floating Point Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Input</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Magnitude' | 'Angle' | 'Magnitude and\n\t\t\t\t\t\t\t\tangle'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Magnitude and angle'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ConstantPart</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> constant\n\t\t\t\t\t\t\t\tscalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ConstantPart</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>real-valued scalar, vector, or\n\t\t\t\t\t\t\t\tmatrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><th>Approximation Method</th><th>Data Types Supported</th><th>When to Use This Method</th></tr>",
                "<tr><td>\n<code class=\"guidropdown\">None</code> (default) </td><td>\n<p>Floating point</p>\n</td><td>\n<p>You want to use the default Taylor series\n\t\t\t\t\t\t\t\t\t\t\talgorithm.</p>\n</td></tr>",
                "<tr><td>\n<code class=\"guidropdown\">CORDIC</code>\n</td><td>\n<p>Floating point and fixed point</p>\n</td><td>\n<p>You want a fast, approximate calculation.</p>\n</td></tr>"
            ],
            [
                "<tr><th>Data Type of Block Inputs</th><th>Value You Can Specify</th></tr>",
                "<tr><td>Floating point</td><td>A positive integer</td></tr>",
                "<tr><td>Fixed point</td><td>A positive integer that does not exceed the word length\n\t\t\t\t\t\t\t\t\t\tof the magnitude input or the word length of the phase angle\n\t\t\t\t\t\t\t\t\t\tinput, whichever value is smaller</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ScaleReciprocalGainFactor</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on' | 'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/magnitudeangletocomplex.html"
    },
    {
        "block_name": "Matrix Concatenate",
        "libraries": [
            "Simulink/Math Operations",
            "Simulink/Matrix Operations",
            "DSP System Toolbox/Math Functions/Matrices and Linear Algebra/Matrix Operations",
            "HDL Coder/Math Operations",
            "Simulink/Commonly Used Blocks",
            "Simulink/Math Operations",
            "Simulink/Signal Routing",
            "HDL Coder/Math Operations",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">NumInputs</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'2'</code> (default) | positive integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><th><strong class=\"guilabel\">Mode</strong> Setting</th><th>Input Signals</th><th>Output Signal</th></tr>",
                "<tr><td><code class=\"guidropdown\">Vector</code></td><td><p></p>\n<div class=\"itemizedlist\"><ul><li><p>Vectors</p></li><li><p>Row vectors (1-by-<em class=\"varname\">M</em> matrices)</p></li><li><p>Column vectors (<em class=\"varname\">M</em>-by-1 matrices)</p></li><li><p>Combination of vectors and either row or column vectors</p></li></ul></div><p>\n</p></td><td><p>When all inputs are vectors, the output is a vector.</p><p>If any of the inputs are row or column vectors, the output is a row or column vector, respectively.</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Multidimensional array</code></td><td><p>Signals of any dimensionality (scalars, vectors, and matrices)</p></td><td><p> The output is always an array.</p><p>Trailing dimensions are assumed to be <code class=\"literal\">1</code> for lower dimensionality inputs. For example, if the output is 4-D and the input is <code class=\"literal\">[2x3]</code> (2-D), this block treats the input as <code class=\"literal\">[2x3x1x1]</code>.</p><p>Concatenation is on the dimension that you specify with the <strong class=\"guilabel\">Concatenate dimension</strong> parameter.</p></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ConcatenateDimension</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\">scalar integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/matrixconcatenate.html"
    },
    {
        "block_name": "Polynomial",
        "libraries": [
            "Simulink/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">coefs</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> real array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[ +2.081618890e-019, -1.441693666e-014, +4.719686976e-010,\n                  -8.536869453e-006, +1.621573104e-001, -8.087801117e+001 ]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/polynomial.html"
    },
    {
        "block_name": "Permute Dimensions",
        "libraries": [
            "Simulink/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Order</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: N-element\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[2\n\t\t\t\t\t\t\t\t\t1]'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/permutedimensions.html"
    },
    {
        "block_name": "MinMax Running Resettable",
        "libraries": [
            "Simulink/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Function</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'min' | 'max'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'min'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">vinit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar or\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0.0'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/minmaxrunningresettable.html"
    },
    {
        "block_name": "MinMax",
        "libraries": [
            "Simulink/Math Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Function</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'min' | 'max'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'min'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/minmax.html"
    },
    {
        "block_name": "Product of Elements",
        "libraries": [
            "Simulink/Math Operations",
            "HDL Coder/HDL Floating Point Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Inputs</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'2' | '*' | '**' | '*/' | '*/*' |\n\t\t\t\t\t\t\t\t\t...</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'*'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/productofelements.html"
    },
    {
        "block_name": "Real-Imag to Complex",
        "libraries": [
            "Simulink/Math Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Input</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Real and imag' | 'Real' | 'Imag'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Real and imag'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ConstantPart</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> imaginary\n\t\t\t\t\t\t\t\tvalue</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ConstantPart</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> finite, real-valued\n\t\t\t\t\t\t\t\tscalar, vector, or matrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/realimagtocomplex.html"
    },
    {
        "block_name": "Product, Matrix Multiply",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Math Operations",
            "Simulink/Matrix Operations",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/HDL Floating Point Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Inputs</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'2' | '**' | '*/' | '*/*' | ...</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'2'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/product.html"
    },
    {
        "block_name": "Reshape",
        "libraries": [
            "Simulink/Math Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><th>Output Dimensionality</th><th>Description</th></tr>",
                "<tr><td>\n<p>1-D array</p>\n</td><td><p>Converts a multidimensional array to a vector (1-D array) array signal. The\n\t\t\t\t\t\t\t\t\t\t\toutput vector consists of the first column of the input\n\t\t\t\t\t\t\t\t\t\t\tmatrix followed by the second column, and so on. (This\n\t\t\t\t\t\t\t\t\t\t\toption leaves a vector input unchanged.)</p></td></tr>",
                "<tr><td>\n<p>Column vector</p>\n</td><td><p>Converts a vector, matrix, or multidimensional input signal to a column\n\t\t\t\t\t\t\t\t\t\t\tmatrix, a <em class=\"varname\">M</em>-by-1 matrix, where\n\t\t\t\t\t\t\t\t\t\t\t\t<em class=\"varname\">M</em> is the number of elements in\n\t\t\t\t\t\t\t\t\t\t\tthe input signal. For matrices, the conversion is done\n\t\t\t\t\t\t\t\t\t\t\tin column-major order. For multidimensional arrays, the\n\t\t\t\t\t\t\t\t\t\t\tconversion is done along the first\n\t\t\t\t\t\t\t\t\t\tdimension.</p></td></tr>",
                "<tr><td>\n<p>Row vector</p>\n</td><td><p>Converts a vector, matrix, or multidimensional input signal to a row matrix, a\n\t\t\t\t\t\t\t\t\t\t\t\t1-by-<em class=\"varname\">N</em> matrix where\n\t\t\t\t\t\t\t\t\t\t\t\t<em class=\"varname\">N</em> is the number of elements in\n\t\t\t\t\t\t\t\t\t\t\tthe input signal. For matrices, the conversion is done\n\t\t\t\t\t\t\t\t\t\t\tin column-major order. For multidimensional arrays, the\n\t\t\t\t\t\t\t\t\t\t\tconversion is done along the first\n\t\t\t\t\t\t\t\t\t\tdimension.</p></td></tr>",
                "<tr><td>\n<p>Customize</p>\n</td><td><p>Converts the input signal to an output signal whose dimensions you specify,\n\t\t\t\t\t\t\t\t\t\t\tusing the <strong class=\"emphasis bold\">Output\n\t\t\t\t\t\t\t\t\t\t\t\tdimensions</strong> parameter. This option does\n\t\t\t\t\t\t\t\t\t\t\tnot support variable-size input signals.</p></td></tr>",
                "<tr><td>\n<p>Derive from reference input port</p>\n</td><td><p>Creates a second input port, <strong class=\"guilabel\">Ref</strong>, on the block. Derives\n\t\t\t\t\t\t\t\t\t\t\tthe dimensions of the output signal from the dimensions\n\t\t\t\t\t\t\t\t\t\t\tof the signal input to the Ref input port. Selecting\n\t\t\t\t\t\t\t\t\t\t\tthis option disables the <strong class=\"guilabel\">Output\n\t\t\t\t\t\t\t\t\t\t\t\tdimensions</strong> parameter. When you select\n\t\t\t\t\t\t\t\t\t\t\tthis parameter, the input signals for both inport ports,\n\t\t\t\t\t\t\t\t\t\t\t\t<strong class=\"guilabel\">U</strong> and <strong class=\"guilabel\">Ref</strong>,\n\t\t\t\t\t\t\t\t\t\t\tmust have the same sampling mode (sample-based or\n\t\t\t\t\t\t\t\t\t\t\tframe-based). This option does not support variable-size\n\t\t\t\t\t\t\t\t\t\t\tinput signals.\n\t\t\t\t\t\t\t\t\t\t\t</p></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">OutputDimensions</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'[integer,intger]'</code> | </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'[1,1]'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/reshape.html"
    },
    {
        "block_name": "Rounding Function",
        "libraries": [
            "Simulink/Math Operations"
        ],
        "parameters": [
            [
                "<tr><th>Rounding function</th><th>Rounds each element of the input signal</th></tr>",
                "<tr><td><code class=\"guidropdown\">floor</code></td><td>To the nearest integer value towards minus infinity</td></tr>",
                "<tr><td><code class=\"guidropdown\">ceil</code></td><td>To the nearest integer towards positive infinity</td></tr>",
                "<tr><td><code class=\"guidropdown\">round</code></td><td>To the nearest integer</td></tr>",
                "<tr><td><code class=\"guidropdown\">fix</code></td><td>To the nearest integer towards zero</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/roundingfunction.html"
    },
    {
        "block_name": "Sign",
        "libraries": [
            "Simulink/Math Operations",
            "HDL Coder/HDL Floating Point Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector | string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off'</code> |\n                        <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/sign.html"
    },
    {
        "block_name": "Sine Wave Function",
        "libraries": [
            "Simulink/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">SineType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Time\n\t\t\t\t\t\t\t\t\tbased'</code> | <code class=\"literal\">'Sample based'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Time\n\t\t\t\t\t\t\t\t\tbased'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">TimeSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Use\n\t\t\t\t\t\t\t\t\tsimulation time'</code> | <code class=\"literal\">'Use external\n\t\t\t\t\t\t\t\t\tsignal'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Use external\n\t\t\t\t\t\t\t\tsignal'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Amplitude</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Bias</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Frequence</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Phase</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Samples</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'10'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Offset</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">VectorParams1D</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/sinewavefunction.html"
    },
    {
        "block_name": "Slider Gain",
        "libraries": [
            "Simulink/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">gain</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: real scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">low</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: real scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">high</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: real scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'2'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/slidergain.html"
    },
    {
        "block_name": "Squeeze",
        "libraries": [
            "Simulink/Math Operations"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/squeeze.html"
    },
    {
        "block_name": "Sqrt",
        "libraries": [
            "Simulink/Math Operations",
            "HDL Coder/HDL Floating Point Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><th>Function</th><th>Block Icon</th></tr>",
                "<tr><td>\n<code class=\"literal\">sqrt</code>\n</td><td>\n<span class=\"guiicon\">\n<span class=\"inlinemediaobject\"><img alt=\"\" height=\"38\" src=\"sqrt_function_sqrt_icon.png\" width=\"44\"/></span>\n</span>\n</td></tr>",
                "<tr><td>\n<code class=\"literal\">signedSqrt</code>\n</td><td>\n<span class=\"guiicon\">\n<span class=\"inlinemediaobject\"><img alt=\"\" height=\"39\" src=\"sqrt_function_signedsqrt_icon.png\" width=\"45\"/></span>\n</span>\n</td></tr>",
                "<tr><td>\n<code class=\"literal\">rSqrt</code>\n</td><td>\n<span class=\"guiicon\">\n<span class=\"inlinemediaobject\"><img alt=\"\" height=\"40\" src=\"sqrt_function_recipsqrt_icon.png\" width=\"47\"/></span>\n</span>\n</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/sqrt.html"
    },
    {
        "block_name": "Unary Minus",
        "libraries": [
            "Simulink/Math Operations",
            "HDL Coder/HDL Floating Point Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><th>Parameter Setting</th><th>Block Behavior</th><th>Examples</th></tr>",
                "<tr><td><strong class=\"guilabel\">Saturate on integer overflow</strong> =\n\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">on</code></td><td>Values saturate to the most positive value of the integer\n\t\t\t\t\t\t\t\t\t\tdata type</td><td>\n<div class=\"itemizedlist\"><ul><li><p>For 8-bit signed integers, -128 maps to\n\t\t\t\t\t\t\t\t\t\t\t\t127.</p></li><li><p>For 16-bit signed integers, -32768 maps to\n\t\t\t\t\t\t\t\t\t\t\t\t32767.</p></li><li><p>For 32-bit signed integers, -2147483648 maps\n\t\t\t\t\t\t\t\t\t\t\t\tto 2147483647.</p></li></ul></div>\n</td></tr>",
                "<tr><td><strong class=\"guilabel\">Saturate on integer overflow</strong> =\n\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">off</code></td><td>Values wrap to the most negative value of the integer\n\t\t\t\t\t\t\t\t\t\tdata type</td><td>\n<div class=\"itemizedlist\"><ul><li><p>For 8-bit signed integers, -128 remains\n\t\t\t\t\t\t\t\t\t\t\t\t-128.</p></li><li><p>For 16-bit signed integers, -32768 remains\n\t\t\t\t\t\t\t\t\t\t\t\t-32768.</p></li><li><p>For 32-bit signed integers, -2147483648\n\t\t\t\t\t\t\t\t\t\t\t\tremains -2147483648.</p></li></ul></div>\n</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/unaryminus.html"
    },
    {
        "block_name": "Trigonometric Function",
        "libraries": [
            "Simulink/Math Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Operator</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'sin' | 'cos' | 'tan' | 'asin' | 'acos' | 'atan' |\n\t\t\t\t\t\t\t\t\t\t'atan2' | 'sinh' | 'cosh' | 'tanh' | 'asinh' | 'acosh' |\n\t\t\t\t\t\t\t\t\t\t'atanh' | 'sincos' | 'cos + jsin'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'sin'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/trigonometricfunction.html"
    },
    {
        "block_name": "Vector Concatenate",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Math Operations",
            "Simulink/Signal Routing",
            "HDL Coder/Math Operations",
            "HDL Coder/Signal Routing",
            "Simulink/Math Operations",
            "Simulink/Matrix Operations",
            "DSP System Toolbox/Math Functions/Matrices and Linear Algebra/Matrix Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">NumInputs</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'2'</code> (default) | positive integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><th><strong class=\"guilabel\">Mode</strong> Setting</th><th>Input Signals</th><th>Output Signal</th></tr>",
                "<tr><td><code class=\"guidropdown\">Vector</code></td><td><p></p>\n<div class=\"itemizedlist\"><ul><li><p>Vectors</p></li><li><p>Row vectors (1-by-<em class=\"varname\">M</em> matrices)</p></li><li><p>Column vectors (<em class=\"varname\">M</em>-by-1 matrices)</p></li><li><p>Combination of vectors and either row or column vectors</p></li></ul></div><p>\n</p></td><td><p>When all inputs are vectors, the output is a vector.</p><p>If any of the inputs are row or column vectors, the output is a row or column vector, respectively.</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Multidimensional array</code></td><td><p>Signals of any dimensionality (scalars, vectors, and matrices)</p></td><td><p> The output is always an array.</p><p>Trailing dimensions are assumed to be <code class=\"literal\">1</code> for lower dimensionality inputs. For example, if the output is 4-D and the input is <code class=\"literal\">[2x3]</code> (2-D), this block treats the input as <code class=\"literal\">[2x3x1x1]</code>.</p><p>Concatenation is on the dimension that you specify with the <strong class=\"guilabel\">Concatenate dimension</strong> parameter.</p></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ConcatenateDimension</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\">scalar integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/vectorconcatenate.html"
    },
    {
        "block_name": "Weighted Sample Time Math",
        "libraries": [
            "Simulink/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TsamMathOp</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'+' | '-' | '*' | '/' | 'Ts Only' | '1/Ts\n\t\t\t\t\t\t\t\t\t\tOnly'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'+'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/weightedsampletimemath.html"
    },
    {
        "block_name": "Create Diagonal Matrix",
        "libraries": [
            "Simulink/Matrix Operations"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/creatediagonalmatrix.html"
    },
    {
        "block_name": "Array Processing Subsystem",
        "libraries": [
            "Simulink/Matrix Operations"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/arrayprocessingsubsystem.html"
    },
    {
        "block_name": "Cross Product",
        "libraries": [
            "Simulink/Matrix Operations"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/crossproduct.html"
    },
    {
        "block_name": "Extract Diagonal",
        "libraries": [
            "Simulink/Matrix Operations"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/extractdiagonal.html"
    },
    {
        "block_name": "Expand Scalar",
        "libraries": [
            "Simulink/Matrix Operations"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ElementValue</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\">1 (default) | real scalar</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">OutputDimensions</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'5'</code> (default) | scalar | two-element vector</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">OutDataTypeStr</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'double'</code> (default) | <code class=\"guidropdown\">single</code> | <code class=\"guidropdown\">int8</code> | <code class=\"guidropdown\">uint8</code> | <code class=\"guidropdown\">int16</code> | <code class=\"guidropdown\">uint16</code> | <code class=\"guidropdown\">int32</code> | <code class=\"guidropdown\">uint32</code> | <code class=\"guidropdown\">int64</code> | <code class=\"guidropdown\">uint64</code> | <code class=\"guidropdown\">boolean</code> | <code class=\"guidropdown\">fixdt(1,16,0)</code> | <code class=\"guidropdown\">Inherit: Inherit via back propagation</code> | <code class=\"guidropdown\">&lt;data type expression&gt;</code></span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">SampleTime</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | scalar</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/expandscalar.html"
    },
    {
        "block_name": "IsHermitian",
        "libraries": [
            "Simulink/Matrix Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Mode</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Hermitian'</code> | <code class=\"literal\">'Skew-Hermitian'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Hermitian'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/ishermitian.html"
    },
    {
        "block_name": "Identity Matrix",
        "libraries": [
            "Simulink/Matrix Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InheritOutputPortAttributes</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutputDimensions</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | two-element vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'5'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                  <code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Inherit: Inherit via back\n                  propagation'</code> | <code class=\"literal\">'double'</code> | <code class=\"literal\">'single'</code>\n                | <code class=\"literal\">'half'</code> | <code class=\"literal\">'int8'</code> | <code class=\"literal\">'uint8'</code>\n                | <code class=\"literal\">'int16'</code> | <code class=\"literal\">'uint16'</code> |\n                  <code class=\"literal\">'int32'</code> | <code class=\"literal\">'uint32'</code> |\n                  <code class=\"literal\">'int64'</code> | <code class=\"literal\">'uint64'</code> | |\n                  <code class=\"literal\">'fixdt(1,16,0)'</code> | <code class=\"literal\">'&lt;data type\n                  expression&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'double'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar or vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/identitymatrix.html"
    },
    {
        "block_name": "Hermitian Transpose",
        "libraries": [
            "Simulink/Matrix Operations"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/hermitiantranspose.html"
    },
    {
        "block_name": "IsSymmetric",
        "libraries": [
            "Simulink/Matrix Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Mode</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Symmetric'</code> | <code class=\"literal\">'Skew-Symmetric'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Symmetric'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/issymmetric.html"
    },
    {
        "block_name": "IsTriangular",
        "libraries": [
            "Simulink/Matrix Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Mode</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Upper'</code> | <code class=\"literal\">'Lower'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Upper'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/istriangular.html"
    },
    {
        "block_name": "Matrix Concatenate",
        "libraries": [
            "Simulink/Math Operations",
            "Simulink/Matrix Operations",
            "DSP System Toolbox/Math Functions/Matrices and Linear Algebra/Matrix Operations",
            "HDL Coder/Math Operations",
            "Simulink/Commonly Used Blocks",
            "Simulink/Math Operations",
            "Simulink/Signal Routing",
            "HDL Coder/Math Operations",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">NumInputs</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'2'</code> (default) | positive integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><th><strong class=\"guilabel\">Mode</strong> Setting</th><th>Input Signals</th><th>Output Signal</th></tr>",
                "<tr><td><code class=\"guidropdown\">Vector</code></td><td><p></p>\n<div class=\"itemizedlist\"><ul><li><p>Vectors</p></li><li><p>Row vectors (1-by-<em class=\"varname\">M</em> matrices)</p></li><li><p>Column vectors (<em class=\"varname\">M</em>-by-1 matrices)</p></li><li><p>Combination of vectors and either row or column vectors</p></li></ul></div><p>\n</p></td><td><p>When all inputs are vectors, the output is a vector.</p><p>If any of the inputs are row or column vectors, the output is a row or column vector, respectively.</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Multidimensional array</code></td><td><p>Signals of any dimensionality (scalars, vectors, and matrices)</p></td><td><p> The output is always an array.</p><p>Trailing dimensions are assumed to be <code class=\"literal\">1</code> for lower dimensionality inputs. For example, if the output is 4-D and the input is <code class=\"literal\">[2x3]</code> (2-D), this block treats the input as <code class=\"literal\">[2x3x1x1]</code>.</p><p>Concatenation is on the dimension that you specify with the <strong class=\"guilabel\">Concatenate dimension</strong> parameter.</p></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ConcatenateDimension</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\">scalar integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/matrixconcatenate.html"
    },
    {
        "block_name": "Matrix Square",
        "libraries": [
            "Simulink/Matrix Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">OutMin</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'[\n\t\t\t\t\t\t\t\t\t]'</code>| scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[\n\t\t\t\t\t\t\t\t\t]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">OutMax</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'[\n\t\t\t\t\t\t\t\t\t]'</code>| scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[\n\t\t\t\t\t\t\t\t\t]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Inherit: Same\n\t\t\t\t\t\t\t\t\tas input'</code> | <code class=\"literal\">'Inherit: Inherit via internal\n\t\t\t\t\t\t\t\t\trule'</code>| <code class=\"literal\">'Inherit: Inherit via back\n\t\t\t\t\t\t\t\t\tpropagation'</code> | <code class=\"literal\">'double'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'single'</code> | <code class=\"literal\">'int8'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'uint8'</code> | <code class=\"literal\">int16</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'uint16'</code> | <code class=\"literal\">'int32'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'uint32'</code> | <code class=\"literal\">'int64'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'uint64'</code> | <code class=\"literal\">fixdt(1,16,0)</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'&lt;data type expression&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Inherit:\n\t\t\t\t\t\t\t\t\tInherit via internal rule'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LockScale</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">RndMeth</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Ceiling' | 'Convergent' | 'Floor' | 'Nearest' | 'Round' |\n\t\t\t\t\t\t\t\t\t'Simplest' | 'Zero'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Floor'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">SaturateOnIntegerOverflow</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: <code class=\"literal\">'off'</code>\n\t\t\t\t\t\t\t\t| <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/matrixsquare.html"
    },
    {
        "block_name": "Neighborhood Processing Subsystem",
        "libraries": [
            "Simulink/Matrix Operations"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/neighborhoodprocessingsubsystem.html"
    },
    {
        "block_name": "Permute Matrix",
        "libraries": [
            "Simulink/Matrix Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mode</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector,\n                                string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:<code class=\"literal\">'\n                                    Columns'</code> | <code class=\"literal\">'Rows'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'\n                                    Columns'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ZeroOneIdxMode</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector,\n                                string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:<code class=\"literal\">'\n                                    Zero-based'</code> | <code class=\"literal\">'One-based'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'One-based'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">errmode</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector,\n                                string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Clip\n                                    index'</code> | <code class=\"literal\">'Clip and warn'</code> |\n                                    <code class=\"literal\">'Generate error'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Clip\n                                    index'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">checkDims</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector,\n                                string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/permutematrix.html"
    },
    {
        "block_name": "Pixel Processing Subsystem",
        "libraries": [
            "Simulink/Matrix Operations"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/pixelprocessingsubsystem.html"
    },
    {
        "block_name": "Product, Matrix Multiply",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Math Operations",
            "Simulink/Matrix Operations",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/HDL Floating Point Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Inputs</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'2' | '**' | '*/' | '*/*' | ...</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'2'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/product.html"
    },
    {
        "block_name": "Transpose",
        "libraries": [
            "Simulink/Matrix Operations"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/transpose.html"
    },
    {
        "block_name": "Submatrix",
        "libraries": [
            "Simulink/Matrix Operations"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/submatrix.html"
    },
    {
        "block_name": "Hit Crossing",
        "libraries": [
            "Simulink/Discontinuities",
            "Simulink/Messages & Events",
            "HDL Coder/Discontinuities",
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">HitCrossingOffset</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: real values</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">HitCrossingDirection</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'either'</code> | <code class=\"literal\">'rising'</code>\n\t\t\t\t\t\t\t\t\t|<code class=\"literal\">'falling'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'either'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">ShowOutputPort</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">HitCrossingOutputType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Signal'</code> | <code class=\"literal\">'Message'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Function-Call'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Signal'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/hitcrossing.html"
    },
    {
        "block_name": "Hit Scheduler",
        "libraries": [
            "Simulink/Messages & Events"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">HitSchedulerOutputType</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Signal'</code> | <code class=\"literal\">'Function-Call'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Signal'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InitialBufferSize</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> positive, whole, numeric scalar</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'256'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FixedBuffer</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/hitscheduler.html"
    },
    {
        "block_name": "Message Merge",
        "libraries": [
            "Simulink/Messages & Events"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                  <code class=\"literal\">NumberInputPorts</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'2'</code> |\n                scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'2'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/messagemerge.html"
    },
    {
        "block_name": "Message Triggered Subsystem",
        "libraries": [
            "Simulink/Messages & Events"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/messagetriggeredsubsystem.html"
    },
    {
        "block_name": "Send",
        "libraries": [
            "Simulink/Messages & Events",
            "SimEvents",
            "Simulink/Messages & Events",
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ShowEnablePort</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/send.html"
    },
    {
        "block_name": "Queue",
        "libraries": [
            "Simulink/Messages & Events",
            "SimEvents",
            "Simulink/Messages & Events",
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">QueueOverwriting</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code> (for Simulink) and <code class=\"literal\">'off'</code> (for SimEvents)</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Capacity</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'25'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'25'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">QueueType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'FIFO'</code> | <code class=\"literal\">'LIFO'</code> |\n                                    <code class=\"literal\">'Priority'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'FIFO'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">MulticastTag</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'A'</code>\n                                | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'A'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">PrioritySource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'PriorityAttribute'</code> | character\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'PriorityAttribute'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SortingDirection</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Ascending'</code> | <code class=\"literal\">'Descending'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Ascending'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntityArrivalSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Input\n                                    port'</code> | <code class=\"literal\">'Multicast'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Input\n                                    port'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntryAction, ExitAction,\n                                BlockedAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB code </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesDeparted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesInBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AverageWait</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AverageQueueLength</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumEntitiesExtracted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/queue.html"
    },
    {
        "block_name": "Receive",
        "libraries": [
            "Simulink/Messages & Events",
            "SimEvents",
            "Simulink/Messages & Events",
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">UseInternalQueue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">QueueOverwriting</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code> (for Simulink) and <code class=\"literal\">'off'</code> (for SimEvents)</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">QueueLength</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'16'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'16'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">QueueType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'FIFO'</code> | <code class=\"literal\">'LIFO'</code> |\n                                    <code class=\"literal\">'Priority'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'FIFO'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">PriorityOrder</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Ascending'</code> | <code class=\"literal\">'Descending'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Ascending'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ShowQueueStatus</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">InitialValue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'[]'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'[]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ValueSourceWhenQueueIsEmpty</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Hold last\n                                    value'</code> | <code class=\"literal\">'Use initial value'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Hold last\n                                    value'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'-1'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'-1'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/receive.html"
    },
    {
        "block_name": "Sequence Viewer",
        "libraries": [
            "Simulink/Messages & Events",
            "Simulink Test",
            "SimEvents",
            "Stateflow"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">VariableStepTimePrecision</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string scalar or\n                                character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">\"3\"</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">\"3\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">History</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string scalar or\n                                character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">\"1000\"</code> | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">\"1000\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/sequenceviewer.html"
    },
    {
        "block_name": "Assertion",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/assertion.html"
    },
    {
        "block_name": "Check Dynamic Range",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">icon</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"graphic\"</code> | <code class=\"literal\">\"text\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"graphic\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkdynamicrange.html"
    },
    {
        "block_name": "Check Dynamic Gap",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">icon</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"graphic\"</code> | <code class=\"literal\">\"text\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"graphic\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkdynamicgap.html"
    },
    {
        "block_name": "Check Static Gap",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">max</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"0\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">max_included</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">min</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"0\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">min_included</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">icon</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"graphic\"</code> | <code class=\"literal\">\"text\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"graphic\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkstaticgap.html"
    },
    {
        "block_name": "Check Discrete Gradient",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">gradient</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> real scalar</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"1\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">icon</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"graphic\"</code> | <code class=\"literal\">\"text\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"graphic\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkdiscretegradient.html"
    },
    {
        "block_name": "Check Static Range",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">max</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"0\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">min_included</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">min</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"0\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">min_included</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">icon</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"graphic\"</code> | <code class=\"literal\">\"text\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"graphic\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkstaticrange.html"
    },
    {
        "block_name": "Check Dynamic Lower Bound",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">icon</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"graphic\"</code> | <code class=\"literal\">\"text\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"graphic\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkdynamiclowerbound.html"
    },
    {
        "block_name": "Check Dynamic Upper Bound",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">icon</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"graphic\"</code> | <code class=\"literal\">\"text\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"graphic\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkdynamicupperbound.html"
    },
    {
        "block_name": "Check Static Lower Bound",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">min</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"0\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">min_included</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar character\n\t\t\t\t\t\t\t\tvector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">icon</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"graphic\"</code> | <code class=\"literal\">\"text\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"graphic\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkstaticlowerbound.html"
    },
    {
        "block_name": "Check Static Upper Bound",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">max</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"0\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">max_included</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">icon</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"graphic\"</code> | <code class=\"literal\">\"text\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"graphic\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkstaticupperbound.html"
    },
    {
        "block_name": "Check Input Resolution",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">resolution</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"1\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkinputresolution.html"
    },
    {
        "block_name": "Block Support Table",
        "libraries": [
            "Simulink/Model-Wide Utilities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/blocksupporttable.html"
    },
    {
        "block_name": "Model Info",
        "libraries": [
            "Simulink/Model-Wide Utilities",
            "HDL Coder/Model-Wide Utilities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/modelinfo.html"
    },
    {
        "block_name": "DocBlock",
        "libraries": [
            "Simulink/Model-Wide Utilities",
            "HDL Coder/Model-Wide Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ECoderFlag</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">Abstract | Description | History | Modified History |\n\t\t\t\t\t\t\t\t\tNotes</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DocumentType</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">Text | RTF | HTML</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Text'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/docblock.html"
    },
    {
        "block_name": "Timed-Based Linearization",
        "libraries": [
            "Simulink/Model-Wide Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LinearizationTime</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar | vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar | vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/timedbasedlinearization.html"
    },
    {
        "block_name": "Trigger-Based Linearization",
        "libraries": [
            "Simulink/Model-Wide Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TriggerType</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'rising'</code> | <code class=\"literal\">'falling'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'either'</code> |\n\t\t\t\t\t\t\t\t<code class=\"literal\">'function-call'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'rising'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar | vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/triggerbasedlinearization.html"
    },
    {
        "block_name": "Enabled Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/enabledsubsystem.html"
    },
    {
        "block_name": "Enabled and Triggered Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/enabledandtriggeredsubsystem.html"
    },
    {
        "block_name": "Enable",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">StatesWhenEnabling</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'held'</code> | <code class=\"literal\">'reset'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'held'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">PropagateVarSize</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Only when enabling'</code> | <code class=\"literal\">'During\n                                    execution'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Only when enabling'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">ShowOutputPort</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">PortDimensions</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'1'</code> | <code class=\"literal\">'[n]'</code> | <code class=\"literal\">'[m\n                                    n]'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'-1'</code> | <code class=\"literal\">'Ts'</code>| <code class=\"literal\">'[Ts,\n                                    To]'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">OutMin</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'[]'</code> | <code class=\"literal\">'&lt;real\n                                scalar&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'[]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">OutMax</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'[]'</code> | <code class=\"literal\">'&lt;real\n                                scalar&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'[]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'double'</code> | <code class=\"literal\">'single'</code> |\n                                    <code class=\"literal\">'int8'</code> | <code class=\"literal\">'uint8'</code> |\n                                    <code class=\"literal\">'int16'</code> | <code class=\"literal\">'uint16'</code> |\n                                    <code class=\"literal\">'int32'</code> | <code class=\"literal\">'uint32'</code> |\n                                    <code class=\"literal\">'int64'</code> | <code class=\"literal\">'uint64'</code> |\n                                    <code class=\"literal\">'boolean'</code> |\n                                    <code class=\"literal\">'&lt;fixdt(1,16)'</code> |\n                                    <code class=\"literal\">'fixdt(1,16,0)'</code> |\n                                    <code class=\"literal\">'fixdt(1,16,2^0,0)'</code> | <code class=\"literal\">'&lt;data type\n                                    expression&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'double'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">Interpolate</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/enable.html"
    },
    {
        "block_name": "Configurable Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MemberBlocks</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> cell array of character\n\t\t\t\t\t\t\t\tvectors</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> cell array of block names\n\t\t\t\t\t\t\t\tas character vectors</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">{''}</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/configurablesubsystem.html"
    },
    {
        "block_name": "For Each Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/foreachsubsystem.html"
    },
    {
        "block_name": "For Iterator Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/foriteratorsubsystem.html"
    },
    {
        "block_name": "Function Element",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">PortName</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'server'</code> (default) | port name in quotes</span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">BackgroundColor</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'black'</code> (default) | <code class=\"literal\">'white</code> | <code class=\"literal\">'red'</code> | <code class=\"literal\">'green'</code> | <code class=\"literal\">'blue'</code> | <code class=\"literal\">'cyan'</code> | <code class=\"literal\">'magenta'</code> | <code class=\"literal\">'yellow'</code> | <code class=\"literal\">'gray'</code> | <code class=\"literal\">'lightBlue'</code> | <code class=\"literal\">'orange'</code> | <code class=\"literal\">'darkGreen'</code> | <code class=\"literal\">'[r,g,b]'</code> where <code class=\"literal\">r</code>,\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">g</code>, and <code class=\"literal\">b</code>, are the red,\n\t\t\t\t\t\t\t\t\tgreen, blue values of the color in the range 0.0 to 1.0</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/functionelement.html"
    },
    {
        "block_name": "Function Element Call",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">PortName</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'client'</code> (default) | port name in quotes</span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">BackgroundColor</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'black'</code> (default) | <code class=\"literal\">'white</code> | <code class=\"literal\">'red'</code> | <code class=\"literal\">'green'</code> | <code class=\"literal\">'blue'</code> | <code class=\"literal\">'cyan'</code> | <code class=\"literal\">'magenta'</code> | <code class=\"literal\">'yellow'</code> | <code class=\"literal\">'gray'</code> | <code class=\"literal\">'lightBlue'</code> | <code class=\"literal\">'orange'</code> | <code class=\"literal\">'darkGreen'</code> | <code class=\"literal\">'[r,g,b]'</code> where <code class=\"literal\">r</code>,\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">g</code>, and <code class=\"literal\">b</code>, are the red,\n\t\t\t\t\t\t\t\t\tgreen, blue values of the color in the range 0.0 to 1.0</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/functionelementcall.html"
    },
    {
        "block_name": "Function-Call Feedback Latch",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/functioncallfeedbacklatch.html"
    },
    {
        "block_name": "Function-Call Generator",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">sample_time</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code>\n                                | scalar expression | vector expression |\n                                <code class=\"literal\">'-1'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">numberOfIterations</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code>\n                                | <code class=\"literal\">'&lt;integer&gt;'</code><code class=\"literal\">'&lt;vector of\n                                    integers&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">DisallowWideOutput</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ShowEnablePort</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/functioncallgenerator.html"
    },
    {
        "block_name": "Function-Call Split",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">IconShape</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'distinctive'</code> |\n                                <code class=\"literal\">'round'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'distinctive'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumOutputPorts</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'2'</code>\n                                | <code class=\"literal\">'&lt;integer&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'2'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">OutputPortLayout</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'default'</code> |\n                                <code class=\"literal\">'reverse'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'default'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/functioncallsplit.html"
    },
    {
        "block_name": "Function-Call Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/functioncallsubsystem.html"
    },
    {
        "block_name": "If",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumInputs</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code>\n                                | <code class=\"literal\">'&lt;integer&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">IfExpression</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'u1 &gt; 0'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'&lt;logical expression&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'u1 &gt; 0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ElseIfExpressions</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">''</code> |\n                                    <code class=\"literal\">'&lt;list of logical expressions&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ShowElse</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/if.html"
    },
    {
        "block_name": "If Action Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/ifactionsubsystem.html"
    },
    {
        "block_name": "In Bus Element",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "Simulink/Sources",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sources",
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">PortName</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'InBus'</code> (default) | port name in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">BackgroundColor</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'black'</code> (default) | <code class=\"literal\">'white</code> | <code class=\"literal\">'red'</code> | <code class=\"literal\">'green'</code> | <code class=\"literal\">'blue'</code> | <code class=\"literal\">'cyan'</code> | <code class=\"literal\">'magenta'</code> | <code class=\"literal\">'yellow'</code> | <code class=\"literal\">'gray'</code> | <code class=\"literal\">'lightBlue'</code> | <code class=\"literal\">'orange'</code> | <code class=\"literal\">'darkGreen'</code> | <code class=\"literal\">'[r,g,b]'</code> where <code class=\"literal\">r</code>, <code class=\"literal\">g</code>, and\n\t\t\t\t\t\t\t<code class=\"literal\">b</code>, are the red, green, blue values of the color in the range 0.0 to\n\t\t\t\t\t\t1.0</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/inbuselement.html"
    },
    {
        "block_name": "Inport",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Ports & Subsystems",
            "Simulink/Sources",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sources"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/inport.html"
    },
    {
        "block_name": "Model",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ModelNameDialog</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">''</code> (default) | filename in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/model.html"
    },
    {
        "block_name": "Out Bus Element",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "Simulink/Sinks",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sinks",
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">PortName</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'OutBus'</code> (default) | port name in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">BackgroundColor</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'black'</code> (default) | <code class=\"literal\">'white</code> | <code class=\"literal\">'red'</code> | <code class=\"literal\">'green'</code> | <code class=\"literal\">'blue'</code> | <code class=\"literal\">'cyan'</code> | <code class=\"literal\">'magenta'</code> | <code class=\"literal\">'yellow'</code> | <code class=\"literal\">'gray'</code> | <code class=\"literal\">'lightBlue'</code> | <code class=\"literal\">'orange'</code> | <code class=\"literal\">'darkGreen'</code> | <code class=\"literal\">'[r,g,b]'</code> where <code class=\"literal\">r</code>, <code class=\"literal\">g</code>, and\n\t\t\t\t\t\t\t<code class=\"literal\">b</code>, are the red, green, blue values of the color in the range 0.0 to\n\t\t\t\t\t\t1.0</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/outbuselement.html"
    },
    {
        "block_name": "Outport",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Ports & Subsystems",
            "Simulink/Sinks",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sinks"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/outport.html"
    },
    {
        "block_name": "Resettable Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/resettablesubsystem.html"
    },
    {
        "block_name": "Subsystem",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Messages & Events",
            "Simulink/Messages & Events",
            "Simulink/Ports & Subsystems",
            "Simulink/Matrix Operations"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/subsystem.html"
    },
    {
        "block_name": "Switch Case",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">CaseConditions</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'{1}'</code> | <code class=\"literal\">'&lt;list of\n                                    cases&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'{1}'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ShowDefaultCase</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/switchcase.html"
    },
    {
        "block_name": "Switch Case Action Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/switchcaseactionsubsystem.html"
    },
    {
        "block_name": "Trigger",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TriggerType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n                                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'rising'</code> | <code class=\"literal\">'falling'</code> |\n                                        <code class=\"literal\">'either'</code> |\n                                        <code class=\"literal\">'function-call'</code> |\n                                        <code class=\"literal\">'message'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'rising'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/trigger.html"
    },
    {
        "block_name": "Triggered Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/triggeredsubsystem.html"
    },
    {
        "block_name": "Unit System Configuration",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">UnitSystems</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> cell array of character\n\t\t\t\t\t\t\t\tvectors</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> cell array of the following\n\t\t\t\t\t\t\t\tcharacter vectors: <code class=\"literal\">'SI'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'English'</code> | <code class=\"literal\">'SI\n\t\t\t\t\t\t\t\t\t(extended)'</code> | <code class=\"literal\">'CGS'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">{'SI', 'English', 'SI (extended)', 'CGS'}</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">AllowAllUnitSystems</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on' | 'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/unitsystemconfiguration.html"
    },
    {
        "block_name": "Variant Subsystem, Variant Model, Variant Assembly Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td><strong class=\"guilabel\">Variant control mode</strong></td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td> <strong class=\"guilabel\">Variant control mode</strong> </td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VariantControlVariable</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"object\">Simulink.VariantControl</code>, scalar variable,\n                                <code class=\"object\">Simulink.Parameter</code>,\n                            <code class=\"function\">struct</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VariantChoicesEnumeration</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> enumeration class defined using\n                                <code class=\"function\">classdef</code> or\n                                <code class=\"function\">Simulink.defineIntEnumType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">VariantChoicesSpecifier</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> Any MATLAB expression that evaluate to a one-dimensional cell array\n                            of file names or file name patterns.</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><th>To...</th><th>Click...</th></tr>",
                "<tr><td><strong class=\"guilabel\">Create and add a new subsystem choice</strong>:\n                                    Create a new <span class=\"block\">Subsystem</span> block as a variant choice\n                                    and add an entry for the new choice in the table.</td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Create and add a new subsystem choice button\" height=\"22\" src=\"ssvar_add_ss_choice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><strong class=\"guilabel\">Create and add a new model variant\n                                        choice</strong>: Create a new <span class=\"block\">Model</span> block\n                                    as a variant choice and add an entry for the new choice in the\n                                    table.</td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Create and add a new model variant choice button\" height=\"22\" src=\"ssvar_add_mod_choice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><strong class=\"guilabel\">Delete selected variant choices</strong>: Delete\n                                    variant choices permanently.</td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e379513\"><p><img alt=\"the Delete selected variant choices button\" height=\"32\" src=\"ssvar_delete.png\" width=\"31\"/></p></div></div>\n</td></tr>",
                "<tr><td><p><strong class=\"guilabel\">Create/Edit selected variant\n                                            object</strong>: Create or edit a\n                                            <code class=\"object\">Simulink.VariantExpression</code> object in\n                                        the global workspace and specify the variant condition using\n                                        the <code class=\"object\">Simulink.VariantExpression</code> object\n                                        parameter dialog box.</p><div class=\"alert alert-info\"><span class=\"alert_icon icon-alert-info-reverse\"></span><p class=\"alert_heading\"><strong>Note</strong></p><p>For a model that uses the base workspace, this\n                                            operation creates the\n                                                <code class=\"object\">Simulink.VariantExpression</code> object\n                                            in the base workspace and the object is available only\n                                            for the current MATLAB session. To permanently store the\n                                            data, save the object in a MAT file or MATLAB\n                                            script.</p></div></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Create or Edit selected variant object button\" height=\"28\" src=\"ssvar_edit_var_object.png\" width=\"32\"/></span></span></td></tr>",
                "<tr><td><strong class=\"guilabel\">Open selected variant choice block</strong>: Open\n                                    the Subsystem block for the selected row.</td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Open selected variant choice block button\" height=\"28\" src=\"ssvar_open_ssvar_choice.png\" width=\"32\"/></span></span></td></tr>",
                "<tr><td><strong class=\"guilabel\">Refresh dialog information from Variant Subsystem\n                                        contents</strong>: Update the <strong class=\"guilabel\">Variant\n                                        choices</strong> table according to the variant choices\n                                    and values of the variant control in the global\n                                    workspace.</td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Refresh dialog information from Variant Subsystem contents button\" height=\"28\" src=\"ssvar_refresh.png\" width=\"32\"/></span></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Structure field:</strong> Represented by the\n                    read-only <code class=\"literal\">variant.Name</code> field in the\n                        <code class=\"literal\">Variant</code> parameter structure</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> variant control that is associated\n                    with the variant choice</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'variant'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong> <code class=\"literal\">LabelModeActivechoice</code> </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> if no label mode active choice is specified, the value is empty. If label mode active choice is specified, the value is the name of the label mode active choice.</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">AllowZeroVariantControls</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">PropagateVariantConditions</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">AllowFlexibleInterface</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/variantsubsystemvariantmodelvariantassemblysubsystem.html"
    },
    {
        "block_name": "While Iterator Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/whileiteratorsubsystem.html"
    },
    {
        "block_name": "Bus to Vector",
        "libraries": [
            "Simulink/Signal Attributes",
            "HDL Coder/Signal Attributes"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/bustovector.html"
    },
    {
        "block_name": "Data Type Duplicate",
        "libraries": [
            "Simulink/Signal Attributes",
            "HDL Coder/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">NumInputPorts</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> real-valued positive\n\t\t\t\t\t\t\t\tinteger</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'2'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/datatypeduplicate.html"
    },
    {
        "block_name": "Data Type Conversion Inherited",
        "libraries": [
            "Simulink/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ConvertRealWorld</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Real World Value (RWV)' | 'Stored Integer\n\t\t\t\t\t\t\t\t(SI)'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Real World Value (RWV)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">RndMeth</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n                                                  character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Ceiling' | 'Convergent' | 'Floor' |\n                                                  'Nearest' | 'Round' | 'Simplest' |\n                                                  'Zero'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Floor'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DoSatur</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/datatypeconversioninherited.html"
    },
    {
        "block_name": "Data Type Conversion",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Signal Attributes",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/HDL Floating Point Operations",
            "HDL Coder/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                    <code class=\"literal\">OutMin</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'[ ]'</code>|\n                    scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[ ]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                    <code class=\"literal\">OutMax</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'[ ]'</code>|\n                    scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[ ]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Inherit: Inherit via back propagation'</code> |\n                        <code class=\"literal\">'double'</code> | <code class=\"literal\">'single'</code> |\n                        <code class=\"literal\">'half'</code> | <code class=\"literal\">'int8'</code> |\n                        <code class=\"literal\">'uint8'</code> | <code class=\"literal\">'int16'</code> |\n                        <code class=\"literal\">'uint16'</code> | <code class=\"literal\">'int32'</code> |\n                        <code class=\"literal\">'uint32'</code> | <code class=\"literal\">'int64'</code> |\n                        <code class=\"literal\">'uint64'</code> | <code class=\"literal\">'fixdt(1,16)'</code> |\n                        <code class=\"literal\">'fixdt(1,16,0)'</code> | <code class=\"literal\">'fixdt(1,16,2^0,0)'</code>\n                    | <code class=\"literal\">'Enum: &lt;class name&gt;'</code><code class=\"literal\">'&lt;data type\n                        expression&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Inherit: Inherit via back propagation'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LockScale</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ConvertRealWorld</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Real World Value (RWV)' | 'Stored Integer\n\t\t\t\t\t\t\t\t(SI)'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Real World Value (RWV)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                                  <code class=\"literal\">RndMeth</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character\n                                                  vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                                  <code class=\"literal\">'Ceiling'</code> |\n                                                  <code class=\"literal\">'Convergent'</code> |\n                                                  <code class=\"literal\">'Floor'</code> |\n                                                  <code class=\"literal\">'Nearest'</code> |\n                                                  <code class=\"literal\">'Round'</code> |\n                                                  <code class=\"literal\">'Simplest'</code> |\n                                                  <code class=\"literal\">'Zero'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                                  <code class=\"literal\">'Floor'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">SaturateOnIntegerOverflow</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/datatypeconversion.html"
    },
    {
        "block_name": "Data Type Scaling Strip",
        "libraries": [
            "Simulink/Signal Attributes"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/datatypescalingstrip.html"
    },
    {
        "block_name": "IC",
        "libraries": [
            "Simulink/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Value</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n\t\t\t\t\t\t\t\tmatrix | N-D array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/ic.html"
    },
    {
        "block_name": "Rate Transition",
        "libraries": [
            "Simulink/Signal Attributes",
            "HDL Coder/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Integrity</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Deterministic</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InitialCondition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> finite scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutPortSampleTimeOpt</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Specify' | 'Inherit' | 'Multiple of input port sample\n                time'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Specify'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutPortSampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutPortSampleTimeMultiple</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/ratetransition.html"
    },
    {
        "block_name": "Probe",
        "libraries": [
            "Simulink/Signal Attributes",
            "HDL Coder/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ProbeWidth</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/probe.html"
    },
    {
        "block_name": "Signal Specification",
        "libraries": [
            "Simulink/Signal Attributes",
            "HDL Coder/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">OutMin</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[\n\t\t\t\t\t\t\t\t\t]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">OutMax</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[\n\t\t\t\t\t\t\t\t\t]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'Inherit: auto' | 'double' | 'single' | 'half' | 'int8' |\n\t\t\t\t\t\t\t\t\t'uint8' | 'int16' | 'uint16' | 'int32' | 'uint32' | 'int64' |\n\t\t\t\t\t\t\t\t\t'uint64' | 'boolean' | 'fixdt(1,16,0)' | 'fixdt(1,16,2^0,0)' |\n\t\t\t\t\t\t\t\t\t'string' | 'Enum: &lt;class name&gt;' | 'Bus: &lt;object\n\t\t\t\t\t\t\t\t\tname&gt;' | 'ValueType: &lt;object name&gt;' | &lt;data type\n\t\t\t\t\t\t\t\t\texpression&gt; | Simulink.ImageType(480,640,3)</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Inherit: auto'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t<code class=\"literal\">LockScale</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off'</code> |\n\t\t\t\t\t\t<code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">BusOutputAsStruct</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Unit</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'inherit'</code> | <code class=\"literal\">'&lt;Enter unit&gt;'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'inherit'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Dimensions</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'-1'</code> | <code class=\"literal\">n</code> | <code class=\"literal\">[m\n\t\t\t\t\t\t\t\t\tn]</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-1'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VarSizeSig</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Inherit'</code> | <code class=\"literal\">'No'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Yes'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Inherit'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">SampleTime</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> Any valid sample time </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-1'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">SignalType</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'auto'</code> | <code class=\"literal\">'real'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'complex'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'auto'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/signalspecification.html"
    },
    {
        "block_name": "Signal Conversion",
        "libraries": [
            "Simulink/Signal Attributes",
            "HDL Coder/Signal Attributes",
            "Simulink/Quick Insert/Signal Attributes",
            "Simulink/Quick Insert/Signal Attributes",
            "Simulink/Quick Insert/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><th>Modeling Goal</th><th>Option</th></tr>",
                "<tr><td><p>Reduce generated code for a muxed signal. </p><p>For an example\n\t\t\t\t\t\t\t\t\t\t\tinvolving <span class=\"entity\">Simulink\n            Coder\u2122</span> software, see <a class=\"a\" href=\"../../rtw/ug/generate-reentrant-code-from-subsystems-0c8c534ae90b.html\">Generate Reentrant Code from Subsystems</a><span role=\"cross_prod\"> (Simulink Coder)</span>.</p></td><td><code class=\"guidropdown\">Signal copy</code></td></tr>",
                "<tr><td><p>Connect a block with a constant sample time to an output port of an\n\t\t\t\t\t\t\t\t\t\t\tenabled subsystem.</p></td><td><code class=\"guidropdown\">Signal copy</code></td></tr>",
                "<tr><td><p>Save memory by converting a nonvirtual bus to a virtual\n\t\t\t\t\t\t\t\t\t\tbus.</p></td><td><code class=\"guidropdown\">Virtual bus</code></td></tr>",
                "<tr><td><p>Pass a virtual bus to a modeling construct that requires a nonvirtual\n\t\t\t\t\t\t\t\t\t\t\tbus.</p></td><td><code class=\"guidropdown\">Nonvirtual bus</code></td></tr>",
                "<tr><td><p>Create a copy of an array of buses.</p><p>The block cannot\n\t\t\t\t\t\t\t\t\t\t\tconvert an array of buses to a nonvirtual or virtual bus. To extract a bus\n\t\t\t\t\t\t\t\t\t\t\tfrom an array of buses, use a <span class=\"block\">Selector</span> block.</p></td><td><code class=\"guidropdown\">Signal copy</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">OutDataTypeStr</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'Inherit: auto'</code> (default) | <code class=\"literal\">'Bus: &lt;object name&gt;'</code> | <code class=\"literal\">'&lt;data type expression&gt;'</code></span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">OverrideOpt</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'off'</code> (default) | <code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/signalconversion.html"
    },
    {
        "block_name": "Unit Conversion",
        "libraries": [
            "Simulink/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Inherit via internal rule' | 'Inherit via back\n\t\t\t\t\t\t\t\t\tpropagation'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Inherit via internal rule'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/unitconversion.html"
    },
    {
        "block_name": "Weighted Sample Time",
        "libraries": [
            "Simulink/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TsamMathOp</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'+' | '-' | '*' | '/' | 'Ts Only' | '1/Ts\n\t\t\t\t\t\t\t\t\t\tOnly'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Ts Only'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/weightedsampletime.html"
    },
    {
        "block_name": "Bus Assignment",
        "libraries": [
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">InputSignals</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\">list of element names in a cell array or cell array of cell arrays</span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">AssignedSignals</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'signal1'</code> (default) | comma-separated list of element names in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/busassignment.html"
    },
    {
        "block_name": "Bus Creator",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Inputs</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'2'</code> (default) | integer in quotes | comma-separated list of element names in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Inputs</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'2'</code> (default) | integer in quotes | comma-separated list of element names in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">OutDataTypeStr</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'Inherit: auto'</code> (default) | <code class=\"literal\">'Bus: &lt;object name&gt;'</code></span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">InheritFromInputs</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'on'</code> (default) | <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">NonVirtualBus</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'off'</code> (default) | <code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/buscreator.html"
    },
    {
        "block_name": "Width",
        "libraries": [
            "Simulink/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutputDataTypeScalingMode</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Choose intrinsic data type' | 'Inherit via back\n\t\t\t\t\t\t\t\t\tpropagation' | 'All ports same datatype'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Choose intrinsic data type'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DataType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'double' | 'single' | 'int8' | 'uint8' | 'int16' | 'uint16'\n\t\t\t\t\t\t\t\t\t| 'int32' | 'uint32'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'double'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">AlwaysUseConstantSampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/width.html"
    },
    {
        "block_name": "Bus Selector",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">InputSignals</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\">cell array of element names</span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">OutputSignals</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'signal1,signal2'</code> (default) | comma-separated list of element names in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">OutputAsBus</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'off'</code> (default) | <code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/busselector.html"
    },
    {
        "block_name": "Data Store Memory",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">DataStoreName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'A' |\n\t\t\t\t\t\t\t\t\t\t...</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">'A'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/datastorememory.html"
    },
    {
        "block_name": "Data Store Write",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                        <code class=\"literal\">DataStoreName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string | character\n                                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: data store\n                                    name</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                        <code class=\"literal\">'A'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/datastorewrite.html"
    },
    {
        "block_name": "Data Type Propagation",
        "libraries": [
            "Simulink/Signal Attributes",
            "HDL Coder/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">PropDataTypeMode</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Specify via dialog' | 'Inherit via propagation\n\t\t\t\t\t\t\t\t\t\trule'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Inherit via propagation rule'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/datatypepropagation.html"
    },
    {
        "block_name": "Data Store Read",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                        <code class=\"literal\">DataStoreName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string | character\n                                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: data store\n                                    name</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                        <code class=\"literal\">'A'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/datastoreread.html"
    },
    {
        "block_name": "Demux",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Signal Routing",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><th>Parameter Value</th><th>Block Output</th><th>Examples and Comments</th></tr>",
                "<tr><td><p><code class=\"literal\">p = n</code></p></td><td><p><code class=\"literal\">p</code> scalar signals </p></td><td><p>If the input is a three-element vector and you specify three outputs,\n\t\t\t\t\t\t\t\t\t\t\tthe block outputs three scalar signals.</p></td></tr>",
                "<tr><td><p><code class=\"literal\">p &gt; n</code></p></td><td><p>Error</p></td><td>This value is not supported.</td></tr>",
                "<tr><td><p><code class=\"literal\">p &lt; n</code></p><p><code class=\"literal\">n mod p =\n\t\t\t\t\t\t\t\t\t\t\t\t0</code></p></td><td><p><code class=\"literal\">p</code> vector signals each having\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">n/p</code> elements</p></td><td><p>If the input is a six-element vector and you specify three outputs,\n\t\t\t\t\t\t\t\t\t\t\tthe block outputs three two-element vectors.</p></td></tr>",
                "<tr><td><p><code class=\"literal\">p &lt; n</code></p><p><code class=\"literal\">n mod p =\n\t\t\t\t\t\t\t\t\t\t\t\tm</code></p></td><td><p><code class=\"literal\">m</code> vector signals each having\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">(n/p)+1</code> elements and <code class=\"literal\">p-m</code> signals\n\t\t\t\t\t\t\t\t\t\t\thaving <code class=\"literal\">n/p </code>elements</p></td><td><p>If the input is a five-element vector and you specify three outputs,\n\t\t\t\t\t\t\t\t\t\t\tthe block outputs two two-element vector signals and one scalar\n\t\t\t\t\t\t\t\t\t\tsignal.</p></td></tr>",
                "<tr><td><p><code class=\"literal\">[p</code><sub>1</sub><code class=\"literal\">\n\t\t\t\t\t\t\t\t\t\t\t\tp</code><sub>2</sub><code class=\"literal\"> ...\n\t\t\t\t\t\t\t\t\t\t\t\tp</code><sub>m</sub><code class=\"literal\">]</code></p><p><code class=\"literal\">p</code><sub>1</sub><code class=\"literal\">+p</code><sub>2</sub><code class=\"literal\">+...+p</code><sub>m</sub><code class=\"literal\">=n</code></p><p><code class=\"literal\">p</code><sub>i</sub><code class=\"literal\">\n\t\t\t\t\t\t\t\t\t\t\t\t&gt; 0</code></p></td><td><p><code class=\"literal\">m</code> vector signals having widths\n\t\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">p<sub>1</sub></code>,\n\t\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">p<sub>2</sub></code>, ...\n\t\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">p<sub>m</sub></code></p></td><td><p>If the input is a five-element vector and you specify <code class=\"literal\">[3,\n\t\t\t\t\t\t\t\t\t\t\t\t2]</code> as the output, the block outputs three of the input elements on\n\t\t\t\t\t\t\t\t\t\t\tone port and the other two elements on the other port. </p></td></tr>",
                "<tr><td><p>An array that has one or more of <code class=\"literal\">m</code> elements with a value of\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal remove_text_wrapping\">-1</code>, which specifies that the software infers the size for\n\t\t\t\t\t\t\t\t\t\t\tthe element.</p><p>For example, suppose that you have a four-element\n\t\t\t\t\t\t\t\t\t\t\tarray with a total width of 14 and you specify the parameter to be\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">[p</code><sub>1</sub><code class=\"literal\">\n\t\t\t\t\t\t\t\t\t\t\t\tp</code><sub>2</sub><code class=\"literal\"> -1</code><code class=\"literal\">\n\t\t\t\t\t\t\t\t\t\t\t\tp</code><sub>4</sub><code class=\"literal\">]</code>.</p><p>The\n\t\t\t\t\t\t\t\t\t\t\tvalue for the third element (the <code class=\"literal remove_text_wrapping\">-1</code> element) is <code class=\"literal\">14\n\t\t\t\t\t\t\t\t\t\t\t\t- </code><code class=\"literal\">(p<sub>1</sub> + p<sub>2</sub>\n\t\t\t\t\t\t\t\t\t\t\t\t+ p<sub>4</sub>)</code></p></td><td><p><code class=\"literal\">m</code> vector signals</p></td><td><p>If <code class=\"literal\">p</code><sub>i</sub> is greater than zero,\n\t\t\t\t\t\t\t\t\t\t\tthe corresponding output has width\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">p</code><sub>i</sub>. If\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">p</code><sub>i</sub> is -1, the width of the\n\t\t\t\t\t\t\t\t\t\t\tcorresponding output is computed dynamically.</p></td></tr>",
                "<tr><td><p><code class=\"literal\">[p</code><sub>1</sub><code class=\"literal\">\n\t\t\t\t\t\t\t\t\t\t\t\tp</code><sub>2</sub><code class=\"literal\"> ...\n\t\t\t\t\t\t\t\t\t\t\t\tp</code><sub>m</sub><code class=\"literal\">]</code></p><p><code class=\"literal\">p</code><sub>1</sub><code class=\"literal\">+p</code><sub>2</sub><code class=\"literal\">+...+p</code><sub>m</sub><code class=\"literal\">!=n</code></p><p><code class=\"literal\">p</code><sub>i</sub><code class=\"literal\">\n\t\t\t\t\t\t\t\t\t\t\t\t= &gt; 0</code></p></td><td><p>Error</p></td><td>This value is not supported.</td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">DisplayOption</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'bar'</code> (default) | <code class=\"literal\">'none'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/demux.html"
    },
    {
        "block_name": "From",
        "libraries": [
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">GotoTag</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'A'</code> | <code class=\"literal\">...</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'A'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">IconDisplay</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Signal name' | 'Tag' | 'Tag and signal\n\t\t\t\t\t\t\t\tname'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Tag'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/from.html"
    },
    {
        "block_name": "Goto",
        "libraries": [
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">GotoTag</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'A'</code> | <code class=\"literal\">...</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'A'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TagVisibility</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'local' | 'scoped' | 'global'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'local'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">IconDisplay</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Signal name' | 'Tag' | 'Tag and signal\n\t\t\t\t\t\t\t\tname'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Tag'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/goto.html"
    },
    {
        "block_name": "Environment Controller",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/environmentcontroller.html"
    },
    {
        "block_name": "Goto Tag Visibility",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/gototagvisibility.html"
    },
    {
        "block_name": "Index Vector",
        "libraries": [
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><th>If the block has unused data\n\t\t\t\t\t\t\t\t\t\t\t\tports and data port order is:</th><th>The block produces:</th></tr>",
                "<tr><td>\n<code class=\"guidropdown\">Zero-based contiguous</code>\n\t\t\t\t\t\t\t\t\t\t\t\tor <code class=\"guidropdown\">One-based contiguous</code>\n</td><td>A\n\t\t\t\t\t\t\t\t\t\t\t\twarning</td></tr>",
                "<tr><td>\n<code class=\"guidropdown\">Specify indices</code>\n</td><td>An\n\t\t\t\t\t\t\t\t\t\t\t\terror</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/indexvector.html"
    },
    {
        "block_name": "Manual Switch",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">varsize</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/manualswitch.html"
    },
    {
        "block_name": "Merge",
        "libraries": [
            "Simulink/Signal Routing",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Inputs</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> integer</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'2'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InitialOutput</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar |\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'[ ]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">AllowUnequalInputPortWidths</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InputPortOffsets</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar  |\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'[ ]'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/merge.html"
    },
    {
        "block_name": "Manual Variant Sink",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">NumChoices</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">integer</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'2'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/manualvariantsink.html"
    },
    {
        "block_name": "Manual Variant Source",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">NumChoices</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">integer</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'2'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/manualvariantsource.html"
    },
    {
        "block_name": "Multiport Switch",
        "libraries": [
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><th>If the Block Has Unused Data\n\t\t\t\t\t\t\t\t\t\t\t\tPorts and Data Port Order Is:</th><th>The Block Produces:</th></tr>",
                "<tr><td>\n<code class=\"guidropdown\">Zero-based contiguous</code>\n\t\t\t\t\t\t\t\t\t\t\t\tor <code class=\"guidropdown\">One-based contiguous</code>\n</td><td>A\n\t\t\t\t\t\t\t\t\t\t\t\twarning</td></tr>",
                "<tr><td>\n<code class=\"guidropdown\">Specify indices</code>\n</td><td>An\n\t\t\t\t\t\t\t\t\t\t\t\terror</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/multiportswitch.html"
    },
    {
        "block_name": "Mux",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Signal Routing",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><th>Format</th><th>Block Behavior</th></tr>",
                "<tr><td><p>Scalar</p></td><td><p>The number of inputs to the <span class=\"block\">Mux</span>\n\t\t\t\t\t\t\t\t\t\t\tblock.</p><p>When you use this format, the block accepts scalar or\n\t\t\t\t\t\t\t\t\t\t\tvector signals of any size. The software assigns each input the name\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">signalN</code>, where <code class=\"literal\">N</code> is the input port\n\t\t\t\t\t\t\t\t\t\t\tnumber.</p></td></tr>",
                "<tr><td><p>Vector</p></td><td><p>The length of the vector specifies the number of\n                                            inputs. Each element specifies the size of the\n                                            corresponding input.</p><p>A positive value\n                                            specifies that the corresponding port can accept only\n                                            vectors of that size. For example, <code class=\"literal\">[2\n                                                3]</code> specifies two input ports of sizes\n                                                <code class=\"literal\">2</code> and <code class=\"literal\">3</code>,\n                                            respectively. If an input signal width does not match\n                                            the expected width, an error message appears. A value of\n                                                <code class=\"literal remove_text_wrapping\">-1</code> specifies that the\n                                            corresponding port can accept scalars or vectors of any\n                                            size.</p></td></tr>",
                "<tr><td><p>Cell array</p></td><td><p>The length of the cell array specifies the number\n                                            of inputs. The value of each cell specifies the size of\n                                            the corresponding input.</p><p>A scalar value\n                                                <code class=\"literal\">N</code> specifies a vector of size\n                                                <code class=\"literal\">N</code>. A value of\n                                                <code class=\"literal remove_text_wrapping\">-1</code> means that the corresponding\n                                            port can accept scalar or vector signals of any\n                                            size.</p></td></tr>",
                "<tr><td><p>Comma-separated list of signal names</p></td><td><p>A list of signal names separated by commas. The\n\t\t\t\t\t\t\t\t\t\t\tsoftware assigns each name to the corresponding port and signal. For example,\n\t\t\t\t\t\t\t\t\t\t\tif you enter <code class=\"literal\">position,velocity</code>, the <span class=\"block\">Mux</span>\n\t\t\t\t\t\t\t\t\t\t\tblock has two inputs, named <code class=\"literal\">position</code> and\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">velocity</code>.</p></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">DisplayOption</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'bar'</code> (default) | <code class=\"literal\">'signals'</code> | <code class=\"literal\">'none'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/mux.html"
    },
    {
        "block_name": "Selector",
        "libraries": [
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">NumberOfDimensions</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">integer</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">IndexMode</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'One-based' | 'Zero-based'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'One-based'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">IndexOptionArray</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Select all'</code> | <code class=\"literal\">'Index vector\n                                    (dialog)'</code> | <code class=\"literal\">'Index option (port)'</code> |\n                                    <code class=\"literal\">'Starting index (dialog)'</code> |\n                                    <code class=\"literal\">'Starting index (port)'</code> | <code class=\"literal\">Starting\n                                    and ending indices (port)</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Index vector (dialog)'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">IndexParamArray</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> cell array</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'{ }'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutputSizeArray</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> cell array</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'{ }'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InputPortWidth</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">integer</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'3'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">RuntimeRangeChecks</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Off'</code> | <code class=\"literal\">'On'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Off'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/selector.html"
    },
    {
        "block_name": "Parameter Writer",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">IsParameterValidationOn</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'on'</code> (default) | <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Destination</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'Block parameter'</code> (default) | <code class=\"literal\">'Model workspace variable'</code> | <code class=\"literal\">'Base workspace variable'</code></span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">WorkspaceVariableName</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">''</code> (default) | character vector | string scalar</span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ParameterOwnerBlock</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">''</code> (default) | character vector | string scalar</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/parameterwriter.html"
    },
    {
        "block_name": "State Reader",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">StateOwnerBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">''</code> | <code class=\"literal\">'&lt;model path/block\n                                    name&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">''</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/statereader.html"
    },
    {
        "block_name": "State Writer",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">StateOwnerBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">''</code> | <code class=\"literal\">'&lt;model path/block\n                                    name&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">''</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/statewriter.html"
    },
    {
        "block_name": "Switch",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Signal Routing",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Criteria</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'u2 &gt;= Threshold'</code> | <code class=\"literal\">'u2 &gt;\n\t\t\t\t\t\t\t\t\t\tThreshold'</code> | <code class=\"literal\">'u2 ~= 0'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'u2 &gt; Threshold'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/switch.html"
    },
    {
        "block_name": "Variant End",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VariantStartEndTag</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'A'</code> | valid MATLAB identifier</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'A'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VariantPairedBlock</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/variantend.html"
    },
    {
        "block_name": "Variant Start",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VariantStartEndTag</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'A'</code> | valid MATLAB identifier</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'A'</code>\n</span></td></tr>"
            ],
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td><strong class=\"guilabel\">Variant control mode</strong></td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td> <strong class=\"guilabel\">Variant control mode</strong> </td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><th>To...</th><th>Click...</th></tr>",
                "<tr><td><p><strong class=\"guilabel\">Add a new output port</strong>: Create a new output port\n                      as a variant choice and add an entry for the new choice in the\n                    table.</p></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the add a new output port button\" height=\"22\" src=\"addportvariantchoice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><p><strong class=\"guilabel\">Delete selected port</strong>: Delete the selected\n                      variant choice from the block and its entry from the table.</p></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the delete selected port button\" height=\"22\" src=\"deleteportvariantchoice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><p><strong class=\"guilabel\">Create/Edit selected variant object</strong>: Create or\n                      edit a <a href=\"simulink.variantexpression-class.html\"><code class=\"object\">Simulink.VariantExpression</code></a>\n                      object for the selected variant choice in the global workspace and specify the\n                      variant condition using the <code class=\"object\">Simulink.VariantExpression</code> object\n                      parameter dialog box.</p><div class=\"alert alert-info\"><span class=\"alert_icon icon-alert-info-reverse\"></span><p class=\"alert_heading\"><strong>Note</strong></p><p>For a model that uses the base workspace, this operation creates the\n                          <code class=\"object\">Simulink.VariantExpression</code> object in the base workspace,\n                        and the object is available only for the current MATLAB session. To\n                        permanently store the data, save the object in a MAT file or MATLAB\n                        script.</p></div></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Create or Edit selected variant object button\" height=\"28\" src=\"ssvar_edit_var_object.png\" width=\"32\"/></span></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Structure field:</strong> Represented by the\n                    read-only <code class=\"literal\">variant.Name</code> field in the\n                        <code class=\"literal\">Variant</code> parameter structure</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> variant control that is associated\n                    with the variant choice</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'variant'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong> <code class=\"literal\">LabelModeActivechoice</code> </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> if no label mode active choice is specified, the value is empty. If label mode active choice is specified, the value is the name of the label mode active choice.</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowConditionOnBlock</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/variantstart.html"
    },
    {
        "block_name": "Variant Sink",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td><strong class=\"guilabel\">Variant control mode</strong></td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td> <strong class=\"guilabel\">Variant control mode</strong> </td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><th>To...</th><th>Click...</th></tr>",
                "<tr><td><p><strong class=\"guilabel\">Add a new output port</strong>: Create\n\t\t\t\t\t\t\t\t\t\t\ta new output port as a variant choice and add an entry\n\t\t\t\t\t\t\t\t\t\t\tfor the new choice in the table.</p></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the add a new output port button\" height=\"22\" src=\"addportvariantchoice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><p><strong class=\"guilabel\">Delete selected port</strong>: Delete\n\t\t\t\t\t\t\t\t\t\t\tthe selected variant choice from the block and its entry\n\t\t\t\t\t\t\t\t\t\t\tfrom the table.</p></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the delete selected port button\" height=\"22\" src=\"deleteportvariantchoice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><p><strong class=\"guilabel\">Create/Edit selected variant object</strong>: Create or edit a\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"simulink.variantexpression-class.html\"><code class=\"object\">Simulink.VariantExpression</code></a> object for the\n\t\t\t\t\t\t\t\t\t\t\tselected variant choice in the global workspace and\n\t\t\t\t\t\t\t\t\t\t\tspecify the variant condition using the\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"object\">Simulink.VariantExpression</code> object\n\t\t\t\t\t\t\t\t\t\t\tparameter dialog box.</p><div class=\"alert alert-info\"><span class=\"alert_icon icon-alert-info-reverse\"></span><p class=\"alert_heading\"><strong>Note</strong></p><p>For a model that uses the base workspace, this\n\t\t\t\t\t\t\t\t\t\t\t\toperation creates the\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"object\">Simulink.VariantExpression</code> object\n\t\t\t\t\t\t\t\t\t\t\t\tin the base workspace, and the object is available\n\t\t\t\t\t\t\t\t\t\t\t\tonly for the current MATLAB session. To permanently\n\t\t\t\t\t\t\t\t\t\t\t\tstore the data, save the object in a MAT file or\n\t\t\t\t\t\t\t\t\t\t\t\tMATLAB script.</p></div></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Create or Edit selected variant object button\" height=\"28\" src=\"ssvar_edit_var_object.png\" width=\"32\"/></span></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Structure field:</strong> Represented by the\n                    read-only <code class=\"literal\">variant.Name</code> field in the\n                        <code class=\"literal\">Variant</code> parameter structure</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> variant control that is associated\n                    with the variant choice</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'variant'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong> <code class=\"literal\">LabelModeActivechoice</code> </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> if no label mode active choice is specified, the value is empty. If label mode active choice is specified, the value is the name of the label mode active choice.</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><th>Generated code without <strong class=\"guilabel\">Allow zero active\n\t\t\t\t\t\t\t\t\t\t\t\tvariant controls</strong></th><th>Generated code with <strong class=\"guilabel\">Allow zero active\n\t\t\t\t\t\t\t\t\t\t\t\tvariant controls</strong></th></tr>",
                "<tr><td>\n<div class=\"code_responsive\"><pre class=\"programlisting\">/* If none of the conditions Mode == 1 or Mode == 2\n evaluate to true, the output of Gain remains unused which\nresuls in an error.*/\n\n/* logic for Gain; */\n\n# if Mode == 1\n  /* logic for wiper motor; */\n# elif Mode == 2\n  /* logic for digital to analog conversion; */\n# endif\n</pre></div>\n</td><td>\n<div class=\"code_responsive\"><pre class=\"programlisting\"># if Mode == 1\n  /* logic for wiper motor; */\n# elif Mode == 2\n  /* logic digital to analog conversion; */\n# endif\n\n/* The logic for Gain is executed only if \neither of the conditions evaluate to true. \nGain is removed from code compilation if none of the\ncondition evaluates to true. */\n\n# if (Mode == 1) \u2225 (Mode == 2)\n  /* logic for Gain; */\n# endif\n</pre></div>\n</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowConditionOnBlock</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/variantsink.html"
    },
    {
        "block_name": "Vector Concatenate",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Math Operations",
            "Simulink/Signal Routing",
            "HDL Coder/Math Operations",
            "HDL Coder/Signal Routing",
            "Simulink/Math Operations",
            "Simulink/Matrix Operations",
            "DSP System Toolbox/Math Functions/Matrices and Linear Algebra/Matrix Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">NumInputs</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'2'</code> (default) | positive integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><th><strong class=\"guilabel\">Mode</strong> Setting</th><th>Input Signals</th><th>Output Signal</th></tr>",
                "<tr><td><code class=\"guidropdown\">Vector</code></td><td><p></p>\n<div class=\"itemizedlist\"><ul><li><p>Vectors</p></li><li><p>Row vectors (1-by-<em class=\"varname\">M</em> matrices)</p></li><li><p>Column vectors (<em class=\"varname\">M</em>-by-1 matrices)</p></li><li><p>Combination of vectors and either row or column vectors</p></li></ul></div><p>\n</p></td><td><p>When all inputs are vectors, the output is a vector.</p><p>If any of the inputs are row or column vectors, the output is a row or column vector, respectively.</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Multidimensional array</code></td><td><p>Signals of any dimensionality (scalars, vectors, and matrices)</p></td><td><p> The output is always an array.</p><p>Trailing dimensions are assumed to be <code class=\"literal\">1</code> for lower dimensionality inputs. For example, if the output is 4-D and the input is <code class=\"literal\">[2x3]</code> (2-D), this block treats the input as <code class=\"literal\">[2x3x1x1]</code>.</p><p>Concatenation is on the dimension that you specify with the <strong class=\"guilabel\">Concatenate dimension</strong> parameter.</p></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ConcatenateDimension</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\">scalar integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/vectorconcatenate.html"
    },
    {
        "block_name": "Variant Source",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td><strong class=\"guilabel\">Variant control mode</strong></td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td> <strong class=\"guilabel\">Variant control mode</strong> </td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><th>To...</th><th>Click...</th></tr>",
                "<tr><td><p><strong class=\"guilabel\">Add a new input port</strong>: Create a\n\t\t\t\t\t\t\t\t\t\t\tnew input port as a variant choice and add an entry for\n\t\t\t\t\t\t\t\t\t\t\tthe new choice in the table.</p></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the add a new input port button\" height=\"22\" src=\"addportvariantchoice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><p><strong class=\"guilabel\">Delete selected port</strong>: Delete\n\t\t\t\t\t\t\t\t\t\t\tthe selected variant choice from the block and its entry\n\t\t\t\t\t\t\t\t\t\t\tfrom the table.</p></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the delete selected port button\" height=\"22\" src=\"deleteportvariantchoice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><p><strong class=\"guilabel\">Create/Edit selected variant object</strong>: Create or edit a\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"simulink.variantexpression-class.html\"><code class=\"object\">Simulink.VariantExpression</code></a> object for the\n\t\t\t\t\t\t\t\t\t\t\tselected variant choice in the global workspace and\n\t\t\t\t\t\t\t\t\t\t\tspecify the variant condition using the\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"object\">Simulink.VariantExpression</code> object\n\t\t\t\t\t\t\t\t\t\t\tparameter dialog box.</p><div class=\"alert alert-info\"><span class=\"alert_icon icon-alert-info-reverse\"></span><p class=\"alert_heading\"><strong>Note</strong></p><p>For a model that uses the base workspace, this\n\t\t\t\t\t\t\t\t\t\t\t\toperation creates the\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"object\">Simulink.VariantExpression</code> object\n\t\t\t\t\t\t\t\t\t\t\t\tin the base workspace, and the object is available\n\t\t\t\t\t\t\t\t\t\t\t\tonly for the current MATLAB session. To permanently\n\t\t\t\t\t\t\t\t\t\t\t\tstore the data, save the object in a MAT file or\n\t\t\t\t\t\t\t\t\t\t\t\tMATLAB script.</p></div></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Create or Edit selected variant object button\" height=\"28\" src=\"ssvar_edit_var_object.png\" width=\"32\"/></span></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Structure field:</strong> Represented by the\n                    read-only <code class=\"literal\">variant.Name</code> field in the\n                        <code class=\"literal\">Variant</code> parameter structure</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> variant control that is associated\n                    with the variant choice</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'variant'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong> <code class=\"literal\">LabelModeActivechoice</code> </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> if no label mode active choice is specified, the value is empty. If label mode active choice is specified, the value is the name of the label mode active choice.</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><th>Generated code without <strong class=\"guilabel\">Allow zero active\n\t\t\t\t\t\t\t\t\t\t\t\tvariant controls</strong></th><th>Generated code with <strong class=\"guilabel\">Allow zero active\n\t\t\t\t\t\t\t\t\t\t\t\tvariant controls</strong></th></tr>",
                "<tr><td>\n<div class=\"code_responsive\"><pre class=\"programlisting\"># if R == 1\n  /* logic for Rain Sensor Model 1; */\n# elif R == 2\n  /* logic for Rain Sensor Model 2; */\n# endif\n\n/* If none of the conditions R == 1 or R == 2 evaluate to true, \nthe filter F1 receives an invalid input which\nresuls in an error.*/\n\n/* logic for filter F1; */\n</pre></div>\n</td><td>\n<div class=\"code_responsive\"><pre class=\"programlisting\"># if R == 1\n  /* logic for Rain Sensor Model 1; */\n# elif R == 2\n  /* logic for Rain Sensor Model 2; */\n# endif\n\n/* The logic for filter F1 is executed only if \neither of the conditions evaluate to true. \nF1 is removed from code compilation if none of the\ncondition evaluates to true. */\n\n# if (R == 1) \u2225 (R == 2)\n  /* logic for filter F1; */ \n# endif</pre></div>\n</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutputFunctionCall</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowConditionOnBlock</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/variantsource.html"
    },
    {
        "block_name": "Display",
        "libraries": [
            "Simulink/Sinks",
            "HDL Coder/Sinks"
        ],
        "parameters": [
            [
                "<tr><th>If You Select...</th><th>The Block Displays...</th></tr>",
                "<tr><td>\n<code class=\"literal\">short</code>\n</td><td>A 5-digit scaled value with fixed decimal point</td></tr>",
                "<tr><td>\n<code class=\"literal\">long</code>\n</td><td>A 15-digit scaled value with fixed decimal point</td></tr>",
                "<tr><td>\n<code class=\"literal\">short_e</code>\n</td><td>A 5-digit value with a floating decimal point</td></tr>",
                "<tr><td>\n<code class=\"literal\">long_e</code>\n</td><td>A 16-digit value with a floating decimal point</td></tr>",
                "<tr><td>\n<code class=\"literal\">bank</code>\n</td><td>A value in fixed dollars and cents format (but with no $\n\t\t\t\t\t\t\t\t\t\tor commas)</td></tr>",
                "<tr><td>\n<code class=\"literal\">hex (Stored Integer)</code>\n</td><td>The stored integer value of a fixed-point input in\n\t\t\t\t\t\t\t\t\t\thexadecimal format</td></tr>",
                "<tr><td>\n<code class=\"literal\">binary (Stored Integer)</code>\n</td><td>The stored integer value of a fixed-point input in binary\n\t\t\t\t\t\t\t\t\t\tformat</td></tr>",
                "<tr><td>\n<code class=\"literal\">decimal (Stored Integer)</code>\n</td><td>The stored integer value of a fixed-point input in\n\t\t\t\t\t\t\t\t\t\tdecimal format</td></tr>",
                "<tr><td>\n<code class=\"literal\">octal (Stored Integer)</code>\n</td><td>The stored integer value of a fixed-point input in octal\n\t\t\t\t\t\t\t\t\t\tformat</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Decimation</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'1'</code> | integer</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">Floating</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n\t\t\t\t\t\t\t\t| <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/display.html"
    },
    {
        "block_name": "Floating Scope and Scope Viewer",
        "libraries": [
            "Simulink/Sinks",
            "HDL Coder/Sinks"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/scopeviewer.html"
    },
    {
        "block_name": "Out Bus Element",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "Simulink/Sinks",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sinks",
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">PortName</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'OutBus'</code> (default) | port name in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">BackgroundColor</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'black'</code> (default) | <code class=\"literal\">'white</code> | <code class=\"literal\">'red'</code> | <code class=\"literal\">'green'</code> | <code class=\"literal\">'blue'</code> | <code class=\"literal\">'cyan'</code> | <code class=\"literal\">'magenta'</code> | <code class=\"literal\">'yellow'</code> | <code class=\"literal\">'gray'</code> | <code class=\"literal\">'lightBlue'</code> | <code class=\"literal\">'orange'</code> | <code class=\"literal\">'darkGreen'</code> | <code class=\"literal\">'[r,g,b]'</code> where <code class=\"literal\">r</code>, <code class=\"literal\">g</code>, and\n\t\t\t\t\t\t\t<code class=\"literal\">b</code>, are the red, green, blue values of the color in the range 0.0 to\n\t\t\t\t\t\t1.0</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/outbuselement.html"
    },
    {
        "block_name": "Record",
        "libraries": [
            "Simulink/Sinks",
            "Simulink/Sinks",
            "HDL Coder/Sinks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">'NumPorts'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">integer</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> integer in the range\n                    [<code class=\"literal\">1</code>,<code class=\"literal\">100</code>]</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">1</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/record.html"
    },
    {
        "block_name": "Outport",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Ports & Subsystems",
            "Simulink/Sinks",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sinks"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/outport.html"
    },
    {
        "block_name": "Stop Simulation",
        "libraries": [
            "Simulink/Sinks",
            "HDL Coder/Sinks"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/stopsimulation.html"
    },
    {
        "block_name": "Terminator",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Sinks",
            "HDL Coder/Sinks"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/terminator.html"
    },
    {
        "block_name": "To File",
        "libraries": [
            "Simulink/Sinks",
            "HDL Coder/Sinks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter: </strong>\n<code class=\"literal\">FileName</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> MAT-file path or\n                                name</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'untitled.mat'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter: </strong>\n<code class=\"literal\">MatrixName</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> character\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'ans'</code>\n</span></td></tr>"
            ],
            [
                "<tr><th>Simulation Mode</th><th><code class=\"guidropdown\">Timeseries</code></th><th><code class=\"guidropdown\">Array</code></th></tr>",
                "<tr><td>Normal</td><td>Supported</td><td>Supported</td></tr>",
                "<tr><td>Accelerator</td><td>Supported</td><td>Supported</td></tr>",
                "<tr><td>Rapid Accelerator</td><td>Supported</td><td>Supported</td></tr>",
                "<tr><td>Software-in-the-loop (SIL) </td><td>Not supported</td><td>Supported if MAT-file logging is enabled</td></tr>",
                "<tr><td>Processor-in-the-loop (PIL)</td><td>Not supported</td><td>Supported if MAT-file logging is available and\n                                        enabled</td></tr>",
                "<tr><td>External</td><td>Not supported</td><td>Supported if MAT-file logging is enabled</td></tr>",
                "<tr><td>RSim target</td><td>Supported</td><td>Supported if MAT-file logging is enabled</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Decimation</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar |\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar |\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-1'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/tofile.html"
    },
    {
        "block_name": "To Workspace",
        "libraries": [
            "Simulink/Sinks",
            "DSP System Toolbox/Sinks",
            "HDL Coder/Sinks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VariableName</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> Valid MATLAB variable name</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'simout'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaxDataPoints</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'inf'</code> | positive integer greater than\n                                zero</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'inf'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Decimation</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code>\n</span></td></tr>"
            ],
            [
                "<tr><th><strong class=\"guilabel\">Save Format</strong> Value</th><th>Workspace Data Format</th><th>Simulation Workflow Support</th></tr>",
                "<tr><td><code class=\"guidropdown\">Timeseries</code></td><td><p>Nonbus input logged as a <a href=\"../../matlab/ref/timeseries.html\"><code class=\"object\">timeseries</code></a> object.</p><p>Bus input\n                                            logged as a structure of <code class=\"object\">timeseries</code>\n                                            objects. The hierarchy and names for fields in the\n                                            structure matches the hierarchy and names specified in\n                                            the <a href=\"simulink.bus.html\"><code class=\"object\">Simulink.Bus</code></a> object that defines the\n                                            bus.</p><p>Array of buses input logged as an array\n                                            of structures of <code class=\"object\">timeseries</code>\n                                            objects.</p></td><td><p>Supported:</p>\n<div class=\"itemizedlist\"><ul><li><p>Normal mode simulation</p></li><li><p>Accelerator mode simulation</p></li><li><p>Rapid\n                                                  accelerator mode simulation<em> (since R2022a)</em></p></li><li><p>External mode simulation that uses XCP\n                                                  communication provided\n                                                  <code class=\"literal\">StreamToWks</code> is set to\n                                                  <code class=\"literal\">'on'</code> and\n                                                  <code class=\"literal\">MATFileLogging</code> is set to\n                                                  <code class=\"literal\">'off'</code></p></li></ul></div><p>\n</p><p>Not supported:</p>\n<div class=\"itemizedlist\"><ul><li><p>External mode simulation that uses TCP/IP or\n                                                  serial communication</p></li><li><p>Software-in-the-loop (SIL) simulation</p></li><li><p>Processor-in-the-loop (PIL)\n                                                  simulation</p></li><li><p>Code generation for <span class=\"entity\">Simulink\n            Coder\u2122</span> targets</p></li></ul></div><p>\n</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Structure With Time</code></td><td><p>Nonbus input logged as a structure that contains\n                                            these fields:</p>\n<div class=\"itemizedlist\"><ul><li><p><code class=\"literal\">time</code> \u2014 Column vector of\n                                                  simulation time hits for which input value was\n                                                  logged.</p></li><li><p><code class=\"literal\">signals</code> \u2014 Structure with\n                                                  sample values that contains the fields:</p>\n<div class=\"itemizedlist\"><ul><li><p><code class=\"literal\">values</code> \u2014 Array of sample\n                                                  values.</p></li><li><p><code class=\"literal\">dimensions</code> \u2014 Sample\n                                                  dimensions.</p></li><li><p><code class=\"literal\">label</code> \u2014 Name of signal\n                                                  line in model.</p></li></ul></div><p>\n</p></li><li><p><code class=\"literal\">blockName</code> \u2014 Name of the\n                                                  <span class=\"block\">To Workspace</span> block.</p></li></ul></div><p>\n</p></td><td rowspan=\"3\"><p>Always supported:</p>\n<div class=\"itemizedlist\"><ul><li><p>Normal mode simulation.</p></li><li><p>External mode simulation that uses XCP\n                                                  communication provided\n                                                  <code class=\"literal\">StreamToWks</code> is set to\n                                                  <code class=\"literal\">'on'</code> and\n                                                  <code class=\"literal\">MATFileLogging</code> is set to\n                                                  <code class=\"literal\">'off'</code></p></li></ul></div><p>\n</p><p>Supported except when the\n                                                <span class=\"block\">To Workspace</span> block is in a referenced model:</p>\n<div class=\"itemizedlist\"><ul><li><p>Accelerator mode simulation</p></li><li><p>Rapid accelerator mode simulation</p></li><li><p>External mode simulation that uses TCP/IP or\n                                                  serial communication</p></li></ul></div><p>\n</p><p>Supported if <strong class=\"configparam\"><a href=\"../../rtw/ref/matfilelogging.html\">MAT-file\n                                                logging</a><span role=\"cross_prod\"> (Simulink Coder)</span></strong> is enabled for generated code,\n                                            except when the <span class=\"block\">To Workspace</span> block is in\n                                            a referenced model:</p>\n<div class=\"itemizedlist\"><ul><li><p>Software-in-the-loop (SIL) simulation</p></li><li><p>Processor-in-the-loop (PIL)\n                                                  simulation</p></li><li><p>Code generation for <span class=\"entity\">Simulink\n            Coder</span> targets</p></li></ul></div><p>\n</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Structure</code></td><td><p>Nonbus input logged as a structure that matches the\n                                                <code class=\"guidropdown\">Structure With Time</code>\n                                            format, but the <code class=\"literal\">time</code> field of the\n                                            structure is empty.</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Array</code></td><td><p>Sample values for nonbus input saved as\n                                                <em class=\"varname\">N</em>-dimensional array, where\n                                                <em class=\"varname\">N</em> is one greater than the\n                                            dimensions of the input. For example:</p>\n<div class=\"itemizedlist\"><ul><li><p>Scalar signal data is logged as a column\n                                                  vector.</p></li><li><p>Vector signal data is logged as a\n                                                  matrix.</p></li><li><p>Matrix signal data is logged as a 3-D\n                                                  array.</p></li></ul></div><p>\n</p><p>The structure of the values\n                                            in the array depends on the dimensions of the input\n                                            signal data:</p>\n<div class=\"itemizedlist\"><ul><li><p>For scalar and vector signals, each sample\n                                                  value is a row in the output array. The first\n                                                  dimension of the array aligns with time such that\n                                                  <code class=\"literal\">simout(1,:)</code> returns the first\n                                                  logged signal value.</p></li><li><p>For matrix signals, the third dimension of\n                                                  the output array aligns with time such that\n                                                  <code class=\"literal\">simout(:,:,1)</code> returns the first\n                                                  logged signal value.</p></li><li><p>For <em class=\"varname\">N</em>-dimensional\n                                                  signals, the last dimension aligns with time, such\n                                                  that the number of elements in the last dimension\n                                                  is equal to the number of samples logged from\n                                                  simulation.</p></li></ul></div><p>\n</p><p>The output array contains\n                                            only signal values and does not contain time\n                                            data.</p></td></tr>"
            ],
            [
                "<tr><th>Input Data Dimensions</th><th>Save 2-D Signal As...</th><th>Workspace Data Dimensions</th></tr>",
                "<tr><td rowspan=\"2\"><em class=\"varname\">M</em>-by-<em class=\"varname\">N</em></td><td><code class=\"guidropdown\">2-D array (concatenate along first\n                                            dimension)</code></td><td><p><em class=\"varname\">K</em>-by-<em class=\"varname\">N</em>\n                                            matrix, where <em class=\"varname\">K</em> is equal to\n                                                <em class=\"varname\">M</em> times the number of samples\n                                            logged from simulation.</p><p>For example, logging\n                                            ten samples of a\n                                                <code class=\"literal\">2</code>-by-<code class=\"literal\">4</code> matrix\n                                            input creates a\n                                                <code class=\"literal\">20</code>-by-<code class=\"literal\">4</code>\n                                            matrix.</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">3-D array (concatenate along first\n                                            dimension)</code></td><td><p><em class=\"varname\">M</em>-by-<em class=\"varname\">N</em>-by-<em class=\"varname\">K</em>\n                                            array, where <em class=\"varname\">K</em> is equal to the number\n                                            of samples logged from simulation.</p><p>For\n                                            example, logging ten samples of a\n                                                <code class=\"literal\">2</code>-by-<code class=\"literal\">4</code> matrix\n                                            input creates a\n                                                <code class=\"literal\">2</code>-by-<code class=\"literal\">4</code>-by-<code class=\"literal\">10</code>\n                                            array.</p></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FixptAsFi</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-1'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/toworkspace.html"
    },
    {
        "block_name": "Scope",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Sinks",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Sinks"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/scope.html"
    },
    {
        "block_name": "Chirp Signal",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">f1</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n\t\t\t\t\t\t\t\tmatrix | N-D array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0.1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">T</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector | matrix | N-D\n\t\t\t\t\t\t\t\tarray</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'100'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">f2</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n\t\t\t\t\t\t\t\tmatrix | N-D array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VectorParams1D</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on' | 'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/chirpsignal.html"
    },
    {
        "block_name": "Band-Limited White Noise",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Cov</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">scalar | vector | matrix | N-D array</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'[0.1]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Ts</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">scalar | vector</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0.1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">seed</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">scalar | vector | matrix | N-D array</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'[23341]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VectorParams1D</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on' | 'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/bandlimitedwhitenoise.html"
    },
    {
        "block_name": "Clock",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DisplayTime</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Decimation</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'10'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/clock.html"
    },
    {
        "block_name": "Counter Free-Running",
        "libraries": [
            "Simulink/Sources",
            "HDL Coder/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">NumBits</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'16'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">tsamp</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar |\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-1'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/counterfreerunning.html"
    },
    {
        "block_name": "Constant",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Sources",
            "DSP System Toolbox/Sources",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Sources"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Value</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | scalar in quotes | vector in quotes | matrix in quotes | array in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/constant.html"
    },
    {
        "block_name": "Digital Clock",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar | vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/digitalclock.html"
    },
    {
        "block_name": "Counter Limited",
        "libraries": [
            "Simulink/Sources",
            "HDL Coder/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">uplimit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'7'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">tsamp</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-1'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/counterlimited.html"
    },
    {
        "block_name": "Enumerated Constant",
        "libraries": [
            "Simulink/Sources",
            "HDL Coder/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Enum:&lt;ClassName&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Enum:\n\t\t\t\t\t\t\t\t\tSlDemoSign'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Value</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Enum:&lt;ClassName.Value&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'SlDemoSign.Positive'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar |\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'inf'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/enumeratedconstant.html"
    },
    {
        "block_name": "From File",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">FileName</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'untitled.mat'</code> (default) | MAT file name | path to MAT file</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">OutDataTypeStr</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'Inherit (auto)'</code> (default) | <code class=\"literal\">'double'</code> | <code class=\"literal\">'single'</code> | <code class=\"literal\">'int8'</code> | <code class=\"literal\">'uint8'</code> | <code class=\"literal\">'int16'</code> | <code class=\"literal\">'uint16'</code> | <code class=\"literal\">'int32'</code> | <code class=\"literal\">'uint32'</code> | <code class=\"literal\">'boolean'</code> | <code class=\"literal\">'fixdt(1,16,0)'</code> | <code class=\"literal\">'fixdt(1,16,2^0,0)'</code> | <code class=\"literal\">'Enum: &lt;class name&gt;'</code> | <code class=\"literal\">'Bus: &lt;object name&gt;'</code> | <code class=\"literal\">'&lt;data type expression&gt;'</code></span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">SampleTime</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'0'</code> (default) | scalar | <code class=\"literal\">1</code>-by-<code class=\"literal\">2</code> vector</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><th>Method</th><th>Description</th><th>Example</th></tr>",
                "<tr><td><code class=\"guidropdown\">Linear extrapolation</code></td><td><p>How the block determines the output value depends on the type of data in the\n\t\t\t\t\t\t\t\t\t\t\tMAT file.</p><div class=\"itemizedlist\"><ul><li><p>For <code class=\"literal\">double</code> data, the\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"block\">From File</span> block linearly\n\t\t\t\t\t\t\t\t\t\t\t\textrapolates the output value using the first two\n\t\t\t\t\t\t\t\t\t\t\t\tsamples.</p></li><li><p>For <code class=\"literal\">Boolean</code> data, the\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"block\">From File</span> block uses the first\n\t\t\t\t\t\t\t\t\t\t\t\tvalue in MAT file data for the output\n\t\t\t\t\t\t\t\t\t\t\t\tvalue.</p></li><li><p>For all other built-in data types, the\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"block\">From File</span> block:</p><div class=\"orderedlist\"><ol style=\"list-style: decimal;\"><li><p>Upcasts the data to\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">double</code>.</p></li><li><p>Linearly extrapolates the output value using\n\t\t\t\t\t\t\t\t\t\t\t\tthe first two samples in the MAT file data.</p></li><li><p>Downcasts the extrapolated data value to the\n\t\t\t\t\t\t\t\t\t\t\t\toriginal data type.</p></li></ol></div></li></ul></div><p>If the MAT file data only contains one\n\t\t\t\t\t\t\t\t\t\t\tsample, the <span class=\"block\">From File</span> block provides that\n\t\t\t\t\t\t\t\t\t\t\tvalue at the output.</p><p>Do not use the\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Linear extrapolation</code>\n\t\t\t\t\t\t\t\t\t\t\toption when the <span class=\"block\">From File</span> block loads\n\t\t\t\t\t\t\t\t\t\t\tenumerated or fixed-point data.</p><p>The\n\t\t\t\t\t\t\t\t\t\t\textrapolation setting is applied to all signals in a\n\t\t\t\t\t\t\t\t\t\t\tbus. If any signal in the bus contains enumerated or\n\t\t\t\t\t\t\t\t\t\t\tfixed-point data, do not use the <code class=\"guidropdown\">Linear\n\t\t\t\t\t\t\t\t\t\t\t\textrapolation</code> option.</p></td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e127467\"><p><img alt=\"Plot that shows the output for a From File block configured to linearly extrapolate the output value for simulation times before the first sample in the loaded data. The block loads data that starts 2 seconds into the simulation.\" height=\"230\" src=\"from_file_linear_first.png\" width=\"268\"/></p></div></div>\n</td></tr>",
                "<tr><td><code class=\"guidropdown\">Hold first value</code></td><td><p>The <span class=\"block\">From File</span> block uses the first\n\t\t\t\t\t\t\t\t\t\t\tdata value in the MAT file as the output\n\t\t\t\t\t\t\t\t\t\tvalue.</p></td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e127483\"><p><img alt=\"Plot that shows the output for a From File block configured to hold the first value in the loaded data for simulation times before the first sample in the loaded data. The block loads data that starts 2 seconds into the simulation.\" height=\"229\" src=\"from_file_hold_first.png\" width=\"279\"/></p></div></div>\n</td></tr>",
                "<tr><td><code class=\"guidropdown\">Ground value</code></td><td><p>The <span class=\"block\">From File</span> block output value\n\t\t\t\t\t\t\t\t\t\t\tdepends on the type of data in the MAT file.</p><div class=\"itemizedlist\"><ul><li><p>Built-in numeric types \u2014\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">0</code></p></li><li><p><code class=\"literal\">Boolean</code> \u2014\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">false</code></p></li><li><p>Fixed-point data types \u2014 Representation for\n\t\t\t\t\t\t\t\t\t\t\t\tvalue of <code class=\"literal\">0</code>, which may not be\n\t\t\t\t\t\t\t\t\t\t\t\texactly <code class=\"literal\">0</code> due to scaling and\n\t\t\t\t\t\t\t\t\t\t\t\tlimited precision.</p></li><li><p>Enumerated data types \u2014 Default value</p></li></ul></div></td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e127518\"><p><img alt=\"Plot that shows the output for a From File block configured to use the ground value as the output value for simulation times before the first sample in the loaded data. The block loads data that starts 2 seconds into the simulation.\" height=\"229\" src=\"from_file_ground_first.png\" width=\"275\"/></p></div></div>\n</td></tr>"
            ],
            [
                "<tr><th>Method</th><th>Description</th><th>Example</th></tr>",
                "<tr><td><code class=\"guidropdown\">Linear interpolation</code></td><td><p>How the block determines the output value depends on the type of data in the\n\t\t\t\t\t\t\t\t\t\t\tMAT file.</p><div class=\"itemizedlist\"><ul><li><p>For <code class=\"literal\">double</code> data, the\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"block\">From File</span> block linearly\n\t\t\t\t\t\t\t\t\t\t\t\tinterpolates the output value using data values\n\t\t\t\t\t\t\t\t\t\t\t\tbefore and after the simulation time that needs an\n\t\t\t\t\t\t\t\t\t\t\t\toutput value.</p></li><li><p>For all other built-in numeric data types, the\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"block\">From File</span> block:</p><div class=\"orderedlist\"><ol style=\"list-style: decimal;\"><li><p>Upcasts the data to\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">double</code>.</p></li><li><p>Linearly interpolates the output value using\n\t\t\t\t\t\t\t\t\t\t\t\tthe MAT file data values before and after the\n\t\t\t\t\t\t\t\t\t\t\t\tsimulation time that needs an output value.</p></li><li><p>Downcasts the extrapolated data value to the\n\t\t\t\t\t\t\t\t\t\t\t\toriginal data type.</p></li></ol></div></li><li><p>For <code class=\"literal\">Boolean</code> data, if the\n\t\t\t\t\t\t\t\t\t\t\t\tsimulation time is between two workspace data\n\t\t\t\t\t\t\t\t\t\t\t\tpoints with different values, the <span class=\"block\">From\n\t\t\t\t\t\t\t\t\t\t\t\tFile</span> block positions the value transition\n\t\t\t\t\t\t\t\t\t\t\t\thalfway between the MAT file data points. For\n\t\t\t\t\t\t\t\t\t\t\t\texample, if the data transitions from\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">true</code> to\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">false</code>, the <span class=\"block\">From\n\t\t\t\t\t\t\t\t\t\t\t\tFile</span> block provides an output value of\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">true</code> for simulation times in\n\t\t\t\t\t\t\t\t\t\t\t\tthe first half of the interval between the MAT\n\t\t\t\t\t\t\t\t\t\t\t\tfile data points and an output value of\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">false</code> for simulation times in\n\t\t\t\t\t\t\t\t\t\t\t\tthe latter half of the interval.</p></li></ul></div><p>If the MAT file data only contains one\n\t\t\t\t\t\t\t\t\t\t\tsample, the <span class=\"block\">From File</span> block provides that\n\t\t\t\t\t\t\t\t\t\t\tvalue at the output.</p><p>Do not use the\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Linear interpolation</code>\n\t\t\t\t\t\t\t\t\t\t\toption when the <span class=\"block\">From File</span> block loads\n\t\t\t\t\t\t\t\t\t\t\tenumerated or fixed-point data.</p><p>The\n\t\t\t\t\t\t\t\t\t\t\tinterpolation setting is applied to all signals in a\n\t\t\t\t\t\t\t\t\t\t\tbus. If any signal in the bus contains enumerated data,\n\t\t\t\t\t\t\t\t\t\t\tdo not use the <code class=\"guidropdown\">Linear\n\t\t\t\t\t\t\t\t\t\t\t\tinterpolation</code> option.</p></td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e127689\"><p><img alt=\"Plot that shows the output for a From File block configured to linearly interpolate the output value for simulation times between the samples in the loaded data.\" height=\"228\" src=\"from_file_lin_interp.png\" width=\"278\"/></p></div></div>\n</td></tr>",
                "<tr><td><code class=\"guidropdown\">Zero order hold</code></td><td><p>The <span class=\"block\">From File</span> block holds each data\n\t\t\t\t\t\t\t\t\t\t\tvalue from one sample to the next. The output value for\n\t\t\t\t\t\t\t\t\t\t\ta simulation time between two samples in the MAT file\n\t\t\t\t\t\t\t\t\t\t\tdata is the value of the sample that precedes the\n\t\t\t\t\t\t\t\t\t\t\tsimulation time.</p></td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e127705\"><p><img alt=\"Plot that shows the output for a From File block configured to use zero-order-hold interpolation for simulation times between the samples in the loaded data.\" height=\"230\" src=\"from_file_zoh_interp.png\" width=\"278\"/></p></div></div>\n</td></tr>"
            ],
            [
                "<tr><th>Method</th><th>Description</th><th>Example</th></tr>",
                "<tr><td><code class=\"guidropdown\">Linear extrapolation</code></td><td><p>How the block determines the output value depends on the type of data in the\n\t\t\t\t\t\t\t\t\t\t\tMAT file.</p><div class=\"itemizedlist\"><ul><li><p>For <code class=\"literal\">double</code> data, the\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"block\">From File</span> block linearly\n\t\t\t\t\t\t\t\t\t\t\t\textrapolates the output value using the last two\n\t\t\t\t\t\t\t\t\t\t\t\tsamples in the MAT file.</p></li><li><p>For <code class=\"literal\">Boolean</code> data, the\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"block\">From File</span> block uses the sample\n\t\t\t\t\t\t\t\t\t\t\t\tvalue in MAT file for the output value.</p></li><li><p>For all other built-in data types, the\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"block\">From File</span> block:</p><div class=\"orderedlist\"><ol style=\"list-style: decimal;\"><li><p>Upcasts the data to\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">double</code>.</p></li><li><p>Linearly extrapolates the output value using\n\t\t\t\t\t\t\t\t\t\t\t\tthe last two samples in the MAT file data.</p></li><li><p>Downcasts the extrapolated data value to the\n\t\t\t\t\t\t\t\t\t\t\t\toriginal data type.</p></li></ol></div></li></ul></div><p>If the MAT file data only contains one\n\t\t\t\t\t\t\t\t\t\t\tsample, the <span class=\"block\">From File</span> block uses that\n\t\t\t\t\t\t\t\t\t\t\tvalue as the output.</p><p>Do not use the\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Linear extrapolation</code>\n\t\t\t\t\t\t\t\t\t\t\toption when the <span class=\"block\">From File</span> block loads\n\t\t\t\t\t\t\t\t\t\t\tenumerated or fixed-point data.</p><p>The\n\t\t\t\t\t\t\t\t\t\t\textrapolation setting is applied to all signals in a\n\t\t\t\t\t\t\t\t\t\t\tbus. If any signal in the bus contains enumerated data,\n\t\t\t\t\t\t\t\t\t\t\tdo not use the <code class=\"guidropdown\">Linear\n\t\t\t\t\t\t\t\t\t\t\t\textrapolation</code> option.</p></td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e127866\"><p><img alt=\"Plot that shows the output for a From File block configured to linearly interpolate the output value for simulation times after the last sample in the loaded data. The block loads data that ends 2 seconds before the end of the simulation.\" height=\"229\" src=\"from_file_linear_last.png\" width=\"268\"/></p></div></div>\n</td></tr>",
                "<tr><td><code class=\"guidropdown\">Hold last value</code></td><td><p>The <span class=\"block\">From File</span> block uses the last\n\t\t\t\t\t\t\t\t\t\t\tdata value in the MAT file as the output\n\t\t\t\t\t\t\t\t\t\tvalue.</p></td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e127882\"><p><img alt=\"Plot that shows the output for a From File block configured to hold the last output value for simulation times after the last sample in the loaded data. The block loads data that ends 2 seconds before the end of the simulation.\" height=\"228\" src=\"from_file_hold_last.png\" width=\"275\"/></p></div></div>\n</td></tr>",
                "<tr><td><code class=\"guidropdown\">Ground value</code></td><td><p>The <span class=\"block\">From File</span> block output value\n\t\t\t\t\t\t\t\t\t\t\tdepends on the type of data in the MAT file.</p><div class=\"itemizedlist\"><ul><li><p>Built-in numeric types \u2014\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">0</code></p></li><li><p><code class=\"literal\">Boolean</code> \u2014\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">false</code></p></li><li><p>Fixed-point data types \u2014 Representation for\n\t\t\t\t\t\t\t\t\t\t\t\tvalue of <code class=\"literal\">0</code>, which may not be\n\t\t\t\t\t\t\t\t\t\t\t\texactly <code class=\"literal\">0</code> due to scaling and\n\t\t\t\t\t\t\t\t\t\t\t\tlimited precision.</p></li><li><p>Enumerated data types \u2014 Default value</p></li></ul></div></td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e127917\"><p><img alt=\"Plot that shows the output for a From File block configured to use the ground value as the output value for simulation times after the last sample in the loaded data. The block loads data that ends 2 seconds before the end of the simulation.\" height=\"228\" src=\"from_file_ground_last.png\" width=\"275\"/></p></div></div>\n</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/fromfile.html"
    },
    {
        "block_name": "From Workspace",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><th>Type of Output</th><th>Data Formats</th><th>Tips</th></tr>",
                "<tr><td><p>Scalar or vector signal</p></td><td><p>\n</p>\n<div class=\"itemizedlist\"><ul><li><p><span><a href=\"../../matlab/ref/timetable.html\"><code class=\"function\">timetable</code></a> that contains a single\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn<em> (since R2020a)</em></span></p></li><li><p><a href=\"../../matlab/ref/timeseries.html\"><code class=\"class\">timeseries</code></a> object</p></li><li><p><a href=\"simulink.simulationdata.signal.html\"><code class=\"object\">Simulink.SimulationData.Signal</code></a>\n\t\t\t\t\t\t\t\t\t\t\t\tobject</p></li><li><p>Structure with fields and hierarchy that\n\t\t\t\t\t\t\t\t\t\t\t\tmatch the <code class=\"guidropdown\">Structure</code> or\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Structure with time</code>\n\t\t\t\t\t\t\t\t\t\t\t\tlogging format.</p></li><li><p>Two-dimensional array in which the first\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn is time and one or more additional columns\n\t\t\t\t\t\t\t\t\t\t\t\tcontain the signal value for each timestamp</p></li></ul></div><p>\n</p></td><td><p>\n</p>\n<div class=\"itemizedlist\"><ul><li><p>For scalar and vector signals, the number of\n\t\t\t\t\t\t\t\t\t\t\t\trows in the signal data must match the number of\n\t\t\t\t\t\t\t\t\t\t\t\trows in the time vector.</p></li><li><p>To create a <code class=\"object\">timetable</code>, the\n\t\t\t\t\t\t\t\t\t\t\t\ttime values must be a <a href=\"../../matlab/ref/duration.html\"><code class=\"object\">duration</code></a> vector.</p><p>Simulation time always uses units of\n\t\t\t\t\t\t\t\t\t\t\t\tseconds. When you create a duration vector that\n\t\t\t\t\t\t\t\t\t\t\t\tuses units other than seconds, the software\n\t\t\t\t\t\t\t\t\t\t\t\tconverts the value to seconds for use in the\n\t\t\t\t\t\t\t\t\t\t\t\tsimulation.</p></li><li><p>Array format does not support signal values\n\t\t\t\t\t\t\t\t\t\t\t\tthat are complex or that have a data type other\n\t\t\t\t\t\t\t\t\t\t\t\tthan <code class=\"literal\">double</code>.</p></li></ul></div><p>\n</p></td></tr>",
                "<tr><td><p>Multidimensional signal</p></td><td><p>\n</p>\n<div class=\"itemizedlist\"><ul><li><p><code class=\"object\">timeseries</code> object</p></li><li><p><span><code class=\"object\">timetable</code> that contains a single\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn<em> (since R2020a)</em></span></p></li><li><p><code class=\"object\">Simulink.SimulationData.Signal</code>\n\t\t\t\t\t\t\t\t\t\t\t\tobject</p></li><li><p>Structure with fields and hierarchy that\n\t\t\t\t\t\t\t\t\t\t\t\tmatch the <code class=\"guidropdown\">Structure</code> or\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Structure with time</code>\n\t\t\t\t\t\t\t\t\t\t\t\tlogging format</p></li></ul></div><p>\n</p></td><td><p>\n</p>\n<div class=\"itemizedlist\"><ul><li><p>For a multidimensional signal with values\n\t\t\t\t\t\t\t\t\t\t\t\tthat have two or more dimensions, the length of\n\t\t\t\t\t\t\t\t\t\t\t\tthe last dimension must match the length of the\n\t\t\t\t\t\t\t\t\t\t\t\ttime vector.</p><p>For example, input data for 10 samples of a\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">2</code>-by-<code class=\"literal\">2</code>\n\t\t\t\t\t\t\t\t\t\t\t\tmatrix signal has a time vector that contains 10\n\t\t\t\t\t\t\t\t\t\t\t\trows and an array of signal values that has\n\t\t\t\t\t\t\t\t\t\t\t\tdimensions\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">2</code>-by-<code class=\"literal\">2</code>-by-<code class=\"literal\">10</code>.</p></li><li><p>To create a <code class=\"object\">timetable</code>, the\n\t\t\t\t\t\t\t\t\t\t\t\ttime values must be a <code class=\"object\">duration</code>\n\t\t\t\t\t\t\t\t\t\t\t\tvector.</p><p>Simulation time always uses units of\n\t\t\t\t\t\t\t\t\t\t\t\tseconds. When you create a duration vector that\n\t\t\t\t\t\t\t\t\t\t\t\tuses units other than seconds, the software\n\t\t\t\t\t\t\t\t\t\t\t\tconverts the value to seconds for use in the\n\t\t\t\t\t\t\t\t\t\t\t\tsimulation.</p></li></ul></div><p>\n</p></td></tr>",
                "<tr><td>Variable-size signal</td><td><p>Structure with fields and hierarchy that match the\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Structure</code> or\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Structure with time</code>\n\t\t\t\t\t\t\t\t\t\t\tlogging format</p></td><td><p>To log a variable-size signal in a format you can\n\t\t\t\t\t\t\t\t\t\t\tload using the <span class=\"block\">From Workspace</span> block,\n\t\t\t\t\t\t\t\t\t\t\tconnect the signal to a top-level <span class=\"block\">Outport</span>\n\t\t\t\t\t\t\t\t\t\t\tblock and set the <strong class=\"configparam\"><a href=\"../gui/format.html\">Format</a></strong> configuration parameter for\n\t\t\t\t\t\t\t\t\t\t\tthe model to <code class=\"guidropdown\">Structure</code> or\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Structure with\n\t\t\t\t\t\t\t\t\t\t\ttime</code>.</p></td></tr>",
                "<tr><td>Bus</td><td><p>Structure of <span><code class=\"object\">timetable</code><em> (since R2020a)</em></span>\n\t\t\t\t\t\t\t\t\t\t\tor <code class=\"object\">timeseries</code> objects:</p><p>\n</p>\n<div class=\"itemizedlist\"><ul><li><p>Specify the <strong class=\"guilabel\">Output data\n\t\t\t\t\t\t\t\t\t\t\t\ttype</strong> parameter as the <a href=\"simulink.bus.html\"><code class=\"object\">Simulink.Bus</code></a> object that defines the\n\t\t\t\t\t\t\t\t\t\t\t\tbus.</p></li><li><p>The hierarchy and field names of the\n\t\t\t\t\t\t\t\t\t\t\t\tstructure must match the hierarchy and element\n\t\t\t\t\t\t\t\t\t\t\t\tnames of the bus.</p></li><li><p>Each <code class=\"object\">timetable</code> or\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"object\">timeseries</code> object contains data\n\t\t\t\t\t\t\t\t\t\t\t\tfor a leaf signal in the bus.</p></li><li><p>Each <code class=\"object\">timetable</code> must contain\n\t\t\t\t\t\t\t\t\t\t\t\tonly one column.</p></li></ul></div><p>\n</p></td><td><p>To partially specify input data for a bus, set bus\n\t\t\t\t\t\t\t\t\t\t\telements for which you do not need to load data to\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">[]</code> in the input data\n\t\t\t\t\t\t\t\t\t\t\tstructure.</p></td></tr>",
                "<tr><td><p><span>Array of buses<em> (since R2021a)</em></span></p></td><td>Array of structures that each represent data for a bus\n\t\t\t\t\t\t\t\t\t\twithin the array of buses</td><td>\n<div class=\"itemizedlist\"><ul><li><p>Loading data for an array of buses is not\n\t\t\t\t\t\t\t\t\t\t\t\tsupported for rapid accelerator\n\t\t\t\t\t\t\t\t\t\t\t\tsimulations.</p></li><li><p><span class=\"block\">From Workspace</span> blocks in the\n\t\t\t\t\t\t\t\t\t\t\t\ttop model support loading data for an array of\n\t\t\t\t\t\t\t\t\t\t\t\tbuses in normal and accelerator mode\n\t\t\t\t\t\t\t\t\t\t\t\tsimulations.</p></li><li><p><span class=\"block\">From Workspace</span> blocks in\n\t\t\t\t\t\t\t\t\t\t\t\treferenced models support loading data for an\n\t\t\t\t\t\t\t\t\t\t\t\tarray of buses only when the referenced model\n\t\t\t\t\t\t\t\t\t\t\t\texecutes in normal mode.</p></li><li><p>To partially specify input data for an array\n\t\t\t\t\t\t\t\t\t\t\t\tof buses, set bus elements for which you do not\n\t\t\t\t\t\t\t\t\t\t\t\tneed to load data to <code class=\"literal\">[]</code> in the\n\t\t\t\t\t\t\t\t\t\t\t\tstructure that represents the data for that\n\t\t\t\t\t\t\t\t\t\t\t\tbus.</p></li></ul></div>\n</td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">OutDataTypeStr</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'Inherit: auto'</code> (default) | <code class=\"literal\">'double'</code> | <code class=\"literal\">'single'</code> | <code class=\"literal\">'half'</code> | <code class=\"literal\">'int8'</code> | <code class=\"literal\">'uint8'</code> | <code class=\"literal\">'int16'</code> | <code class=\"literal\">'uint16'</code> | <code class=\"literal\">'int32'</code> | <code class=\"literal\">'uint32'</code> | <code class=\"literal\">'boolean'</code> | <code class=\"literal\">'fixdt(1,16,0)'</code> | <code class=\"literal\">'fixdt(1,16,2^0,0)'</code> | <code class=\"literal\">'Enum: &lt;class name&gt;'</code> | <code class=\"literal\">'Bus: &lt;object name&gt;'</code> | data type expression</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">SampleTime</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'0'</code> (default) | scalar | vector</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Interpolate</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'on'</code> (default) | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ZeroCross</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'on'</code> (default) | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><th>Setting for Form output after final data value by</th><th>Setting for Interpolate data</th><th>Block Output After Final Data</th></tr>",
                "<tr><td rowspan=\"2\"><p><strong class=\"emphasis bold\">Extrapolation</strong></p></td><td><p>On</p></td><td><p>Extrapolated from final data value</p></td></tr>",
                "<tr><td><p>Off</p></td><td><p>Error</p></td></tr>",
                "<tr><td rowspan=\"2\"><p><strong class=\"emphasis bold\">Setting to zero</strong></p></td><td><p>On</p></td><td rowspan=\"2\"><p>Zero</p></td></tr>",
                "<tr><td><p>Off</p></td></tr>",
                "<tr><td rowspan=\"2\"><p><strong class=\"emphasis bold\">Holding final value</strong></p></td><td><p>On</p></td><td rowspan=\"2\"><p>Final value from\n\t\t\t\t\t\t\t\t\t\tworkspace</p></td></tr>",
                "<tr><td><p>Off</p></td></tr>",
                "<tr><td rowspan=\"2\"><p><strong class=\"emphasis bold\">Cyclic repetition</strong></p></td><td><p>On</p></td><td><p>Error</p></td></tr>",
                "<tr><td><p>Off</p></td><td><p>When the loaded workspace data uses the structure\n\t\t\t\t\t\t\t\t\t\t\twithout time format, repeats workspace data from the\n\t\t\t\t\t\t\t\t\t\t\tfirst value.</p><p>Errors for workspace data\n\t\t\t\t\t\t\t\t\t\t\tformats other than structure with time.</p></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/fromworkspace.html"
    },
    {
        "block_name": "From Spreadsheet",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">FileName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: full path and file\n\t\t\t\t\t\t\t\tname</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'untitled.xlsx'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">SheetName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: Sheet name</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Sheet1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Range</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: entire range of used cells in sheet |\n\t\t\t\t\t\t\t\tcomma-separated list of\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\"><em class=\"replaceable\"><code>column</code></em>:<em class=\"replaceable\"><code>row</code></em></code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Inherit: auto' | 'double' |\n\t\t\t\t\t\t\t\t\t'single' | 'int8' | 'uint8' | 'int16' | 'uint16' | 'int32' |\n\t\t\t\t\t\t\t\t\t'uint32' | 'int64' | 'uint64' | 'boolean' | 'fixdt(1,16,0)' |\n\t\t\t\t\t\t\t\t\t'fixdt(1,16,2^0,0)' | 'Enum: &lt;class name&gt;' | '&lt;data type\n\t\t\t\t\t\t\t\t\texpression&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Inherit: auto'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">TreatFirstColumnAs</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: <code class=\"literal\">'Time' | 'Data'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Time'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">SampleTime</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar | vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code>\n</span></td></tr>"
            ],
            [
                "<tr><th>Method</th><th>Description</th></tr>",
                "<tr><td><code class=\"guidropdown\">Linear extrapolation</code></td><td><p>(Default)</p><p>If the spreadsheet contains\n\t\t\t\t\t\t\t\t\t\t\tonly one sample, the <span class=\"block\">From Spreadsheet</span>\n\t\t\t\t\t\t\t\t\t\t\tblock outputs the corresponding data\n\t\t\t\t\t\t\t\t\t\t\tvalue.</p><p>If the spreadsheet contains more than\n\t\t\t\t\t\t\t\t\t\t\tone sample, the <span class=\"block\">From Spreadsheet</span> block\n\t\t\t\t\t\t\t\t\t\t\tlinearly extrapolates using the first two\n\t\t\t\t\t\t\t\t\t\t\tsamples:</p><div class=\"itemizedlist\"><ul><li><p>For <code class=\"literal\">double</code> data, linearly\n\t\t\t\t\t\t\t\t\t\t\t\textrapolates the value using the first two\n\t\t\t\t\t\t\t\t\t\t\t\tsamples</p></li><li><p>For <code class=\"literal\">Boolean</code> data, outputs\n\t\t\t\t\t\t\t\t\t\t\t\tthe first data value</p></li><li><p>For a built-in data type other than\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">double</code> or\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">Boolean</code>:</p><div class=\"itemizedlist\"><ul><li><p>Upcasts the data to\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">double</code></p></li><li><p>Performs linear extrapolation (as described\n\t\t\t\t\t\t\t\t\t\t\t\tabove for <code class=\"literal\">double</code> data)</p></li><li><p>Downcasts the extrapolated data value to the\n\t\t\t\t\t\t\t\t\t\t\t\toriginal data type</p></li></ul></div></li></ul></div><p>You cannot use the <code class=\"guidropdown\">Linear\n\t\t\t\t\t\t\t\t\t\t\t\textrapolation</code> option with enumerated\n\t\t\t\t\t\t\t\t\t\t\t\t(<code class=\"literal\">enum</code>) data. </p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Hold first value</code></td><td><p>Uses the first data value in the\n\t\t\t\t\t\t\t\t\t\tfile</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Ground value</code></td><td><p>Uses a value that depends on the data type of\n\t\t\t\t\t\t\t\t\t\t\tspreadsheet sample data values:</p><div class=\"itemizedlist\"><ul><li><p>Fixed-point data types \u2014 Uses the\n\t\t\t\t\t\t\t\t\t\t\t\tground value</p></li><li><p>Numeric types other than fixed\u2013point \u2014\n\t\t\t\t\t\t\t\t\t\t\t\tUses <code class=\"literal\">0</code></p></li><li><p><code class=\"literal\">Boolean</code> \u2014 Uses\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">false</code></p></li><li><p>Enumerated data types \u2014 Uses default\n\t\t\t\t\t\t\t\t\t\t\t\tvalue</p></li></ul></div></td></tr>"
            ],
            [
                "<tr><th>Method</th><th>Description</th></tr>",
                "<tr><td><code class=\"guidropdown\">Linear interpolation</code></td><td><p>(Default)</p><p>The <span class=\"block\">From\n\t\t\t\t\t\t\t\t\t\t\t\tSpreadsheet</span> block interpolates using the two\n\t\t\t\t\t\t\t\t\t\t\tcorresponding spreadsheet samples:</p><div class=\"itemizedlist\"><ul><li><p>For <code class=\"literal\">double</code> data, linearly\n\t\t\t\t\t\t\t\t\t\t\t\tinterpolates the value using the two corresponding\n\t\t\t\t\t\t\t\t\t\t\t\tsamples</p></li><li><p>For Boolean data, if the simulation time is\n\t\t\t\t\t\t\t\t\t\t\t\tbetween two spreadsheet data points with different\n\t\t\t\t\t\t\t\t\t\t\t\tvalues, the <span class=\"block\">From Spreadsheet</span> block\n\t\t\t\t\t\t\t\t\t\t\t\tpositions the value transition halfway between the\n\t\t\t\t\t\t\t\t\t\t\t\tspreadsheet data points. For example, if the\n\t\t\t\t\t\t\t\t\t\t\t\tspreadsheet data transitions from true to false,\n\t\t\t\t\t\t\t\t\t\t\t\tthe <span class=\"block\">From Spreadsheet</span> data provides\n\t\t\t\t\t\t\t\t\t\t\t\tan output value of true for simulation times in\n\t\t\t\t\t\t\t\t\t\t\t\tthe first half of the interval between the\n\t\t\t\t\t\t\t\t\t\t\t\tspreadsheet data points. It provides an output\n\t\t\t\t\t\t\t\t\t\t\t\tvalue of false for simulation times in the latter\n\t\t\t\t\t\t\t\t\t\t\t\thalf of the interval.</p></li><li><p>For a built-in data type other than\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">double</code> or\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">Boolean</code>:</p><div class=\"itemizedlist\"><ul><li><p>Upcasts the data to\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">double</code></p></li><li><p>Performs linear interpolation (as described\n\t\t\t\t\t\t\t\t\t\t\t\tabove for <code class=\"literal\">double</code> data)</p></li><li><p>Downcasts the interpolated value to the\n\t\t\t\t\t\t\t\t\t\t\t\toriginal data type</p></li></ul></div></li></ul></div><p>You cannot use the <code class=\"guidropdown\">Linear\n\t\t\t\t\t\t\t\t\t\t\t\tinterpolation</code> option with enumerated\n\t\t\t\t\t\t\t\t\t\t\t\t(<code class=\"literal\">enum</code>) data. </p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Zero order hold</code></td><td><p>Uses the data from the first of the two\n\t\t\t\t\t\t\t\t\t\t\tsamples</p></td></tr>"
            ],
            [
                "<tr><th>Method</th><th>Description</th></tr>",
                "<tr><td><code class=\"guidropdown\">Linear extrapolation</code></td><td><p>(Default)</p><p>If the spreadsheet contains\n\t\t\t\t\t\t\t\t\t\t\tonly one sample, the <span class=\"block\">From Spreadsheet</span>\n\t\t\t\t\t\t\t\t\t\t\tblock outputs the corresponding data\n\t\t\t\t\t\t\t\t\t\t\tvalue.</p><p>If the spreadsheet contains more than\n\t\t\t\t\t\t\t\t\t\t\tone sample, the <span class=\"block\">From Spreadsheet</span> block\n\t\t\t\t\t\t\t\t\t\t\tlinearly extrapolates using data values of the last two\n\t\t\t\t\t\t\t\t\t\t\tsamples:</p><div class=\"itemizedlist\"><ul><li><p>For <code class=\"literal\">double</code> data,\n\t\t\t\t\t\t\t\t\t\t\t\textrapolates the value using the last two\n\t\t\t\t\t\t\t\t\t\t\t\tsamples</p></li><li><p>For <code class=\"literal\">Boolean</code> data, outputs\n\t\t\t\t\t\t\t\t\t\t\t\tthe last data value</p></li><li><p>For a built-in data type other than\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">double</code> or\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">Boolean</code>:</p><div class=\"itemizedlist\"><ul><li><p>Upcasts the data to\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">double</code>.</p></li><li><p>Performs linear extrapolation (as described\n\t\t\t\t\t\t\t\t\t\t\t\tabove for <code class=\"literal\">double</code> data).</p></li><li><p>Downcasts the extrapolated value to the\n\t\t\t\t\t\t\t\t\t\t\t\toriginal data type.</p></li></ul></div></li></ul></div><p>You cannot use the <code class=\"guidropdown\">Linear\n\t\t\t\t\t\t\t\t\t\t\t\textrapolation</code> option with enumerated\n\t\t\t\t\t\t\t\t\t\t\t\t(<code class=\"literal\">enum</code>) data. </p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Hold last value</code></td><td><p>Uses the last data value in the file</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Ground value</code></td><td><p>Uses a value that depends on the data type of\n\t\t\t\t\t\t\t\t\t\t\tspreadsheet sample data values:</p><div class=\"itemizedlist\"><ul><li><p>Fixed-point data types \u2014 Uses the\n\t\t\t\t\t\t\t\t\t\t\t\tground value</p></li><li><p>Numeric types other than fixed\u2013point \u2014\n\t\t\t\t\t\t\t\t\t\t\t\tuses <code class=\"literal\">0</code></p></li><li><p><code class=\"literal\">Boolean</code> \u2014 Uses\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">false</code></p></li><li><p>Enumerated data types \u2014 Uses default\n\t\t\t\t\t\t\t\t\t\t\t\tvalue</p></li></ul></div></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter: </strong>\n<code class=\"literal\">OutputAfterLastPoint</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type: </strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Repeating sequence' | 'Hold final value' | 'Ground\n\t\t\t\t\t\t\t\t\tvalue'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Repeating sequence'</code>\n</span></td></tr>"
            ],
            [
                "<tr><th>Time Stamp</th><th>When Zero-Crossing Detection Occurs</th></tr>",
                "<tr><td><p>First</p></td><td><p><strong class=\"guilabel\">Data extrapolation before first data\n\t\t\t\t\t\t\t\t\t\t\t\tpoint</strong> is set to <code class=\"guidropdown\">Ground\n\t\t\t\t\t\t\t\t\t\t\t\tvalue</code>.</p></td></tr>",
                "<tr><td><p>Between first and last</p></td><td><p><strong class=\"guilabel\">Data interpolation within time\n\t\t\t\t\t\t\t\t\t\t\t\trange</strong> is set to <code class=\"guidropdown\">Zero-order\n\t\t\t\t\t\t\t\t\t\t\t\thold</code>.</p></td></tr>",
                "<tr><td><p>Last</p></td><td><p>One or both of these settings occur:</p><div class=\"itemizedlist\"><ul><li><p><strong class=\"guilabel\">Data extrapolation after last data\n\t\t\t\t\t\t\t\t\t\t\t\tpoint</strong> is set to <code class=\"guidropdown\">Ground\n\t\t\t\t\t\t\t\t\t\t\t\tvalue</code>.</p></li><li><p><strong class=\"guilabel\">Data interpolation within time\n\t\t\t\t\t\t\t\t\t\t\t\trange</strong> is set to <code class=\"guidropdown\">Zero-order\n\t\t\t\t\t\t\t\t\t\t\t\thold</code>.</p></li></ul></div></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/fromspreadsheet.html"
    },
    {
        "block_name": "Ground",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Sources",
            "HDL Coder/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/ground.html"
    },
    {
        "block_name": "In Bus Element",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "Simulink/Sources",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sources",
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">PortName</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'InBus'</code> (default) | port name in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">BackgroundColor</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'black'</code> (default) | <code class=\"literal\">'white</code> | <code class=\"literal\">'red'</code> | <code class=\"literal\">'green'</code> | <code class=\"literal\">'blue'</code> | <code class=\"literal\">'cyan'</code> | <code class=\"literal\">'magenta'</code> | <code class=\"literal\">'yellow'</code> | <code class=\"literal\">'gray'</code> | <code class=\"literal\">'lightBlue'</code> | <code class=\"literal\">'orange'</code> | <code class=\"literal\">'darkGreen'</code> | <code class=\"literal\">'[r,g,b]'</code> where <code class=\"literal\">r</code>, <code class=\"literal\">g</code>, and\n\t\t\t\t\t\t\t<code class=\"literal\">b</code>, are the red, green, blue values of the color in the range 0.0 to\n\t\t\t\t\t\t1.0</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/inbuselement.html"
    },
    {
        "block_name": "Inport",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Ports & Subsystems",
            "Simulink/Sources",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sources"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/inport.html"
    },
    {
        "block_name": "Pulse Generator",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">PulseType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Time\n\t\t\t\t\t\t\t\t\tbased'</code> | <code class=\"literal\">'Sample based'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Time\n\t\t\t\t\t\t\t\t\tbased'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">TimeSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Use\n\t\t\t\t\t\t\t\t\tsimulation time'</code> | <code class=\"literal\">'Use external\n\t\t\t\t\t\t\t\t\tsignal'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Use\n\t\t\t\t\t\t\t\t\tsimulation time'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Amplitude</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Period</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'10'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">PulseWidth</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'5'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">PhaseDelay</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VectorParams1D</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on' | 'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/pulsegenerator.html"
    },
    {
        "block_name": "Playback",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter: </strong>\n<code class=\"literal\">NumPorts</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> integer</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> integer in the range\n\t\t\t\t\t\t\t\t\t\t[<code class=\"literal\">0,100</code>]</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">0</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/playback.html"
    },
    {
        "block_name": "Ramp",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">slope</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">start</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InitialOutput</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VectorParams1D</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on' | 'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/ramp.html"
    },
    {
        "block_name": "Random Number",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Mean</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar | array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Variance</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar | array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Seed</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar | array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'0.1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VectorParams1D</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on' | 'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/randomnumber.html"
    },
    {
        "block_name": "Repeating Sequence",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">rep_seq_t</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">[0\n\t\t\t\t\t\t\t\t\t2]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">rep_seq_y</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">[0\n\t\t\t\t\t\t\t\t\t2]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/repeatingsequence.html"
    },
    {
        "block_name": "Signal Generator",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">WaveForm</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'sine'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'square'</code> | <code class=\"literal\">'sawtooth'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'random'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'sine'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">TimeSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Use\n\t\t\t\t\t\t\t\t\tsimulation time'</code> | <code class=\"literal\">'Use external\n\t\t\t\t\t\t\t\t\tsignal'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Use\n\t\t\t\t\t\t\t\t\tsimulation time'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Amplitude</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: real scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Frequency</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: real scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Units</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'rad/sec'</code> |\n\t\t\t\t\t\t\t\t<code class=\"literal\">'Hertz'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'rad/sec'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VectorParams1D</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'on' | 'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'on'</code> </span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/signalgenerator.html"
    },
    {
        "block_name": "Repeating Sequence Interpolated",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">OutValues</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">[3 1 4 2\n\t\t\t\t\t\t\t\t\t\t1].'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/repeatingsequenceinterpolated.html"
    },
    {
        "block_name": "Repeating Sequence Stair",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">OutValues</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">[3 1 4 2\n\t\t\t\t\t\t\t\t\t\t1].'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/repeatingsequencestair.html"
    },
    {
        "block_name": "Signal Editor",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Filename</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:  character\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'untitled.mat'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ActiveScenario</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector |\n                                numeric</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: character vector |\n                                index value</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Scenario'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ActiveSignal</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector |\n                                numeric</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: character vector |\n                                index vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Signal\n                                    1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ApplySigPropsToAllScenarios</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ApplySigPropsToAllSignals</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">IsBus</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">OutputBusObjectStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: bus object\n                                name</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Bus:\n                                    BusObject'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Unit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'inherit'</code> | supported physical unit</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'inherit'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal remove_text_wrapping\">-1</code> |\n                                sample time in seconds</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Interpolate</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><th>Setting for Form Output After Final Data Value By</th><th>Setting for Interpolate Data</th><th>Block Output After Final Data</th></tr>",
                "<tr><td rowspan=\"2\">\n<p><strong class=\"emphasis bold\">Extrapolation</strong></p>\n</td><td>\n<p>On</p>\n</td><td>\n<p>Extrapolated from final data value</p>\n</td></tr>",
                "<tr><td>\n<p>Off</p>\n</td><td>\n<p>Error</p>\n</td></tr>",
                "<tr><td rowspan=\"2\">\n<p><strong class=\"emphasis bold\">Setting to\n                                            zero</strong></p>\n</td><td>\n<p>On</p>\n</td><td>\n<p>Zero</p>\n</td></tr>",
                "<tr><td>\n<p>Off</p>\n</td><td>\n<p>Zero</p>\n</td></tr>",
                "<tr><td rowspan=\"2\">\n<p><strong class=\"emphasis bold\">Holding final\n                                            value</strong></p>\n</td><td>\n<p>On</p>\n</td><td>\n<p>Final value from workspace</p>\n</td></tr>",
                "<tr><td>\n<p>Off</p>\n</td><td>\n<p>Final value from workspace</p>\n</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/signaleditorblock.html"
    },
    {
        "block_name": "Sine Wave",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">SineType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Time\n\t\t\t\t\t\t\t\t\tbased'</code> | <code class=\"literal\">'Sample based'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Time\n\t\t\t\t\t\t\t\t\tbased'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">TimeSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Use\n\t\t\t\t\t\t\t\t\tsimulation time'</code> | <code class=\"literal\">'Use external\n\t\t\t\t\t\t\t\t\tsignal'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Use\n\t\t\t\t\t\t\t\t\tsimulation time'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Amplitude</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Bias</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">Frequency</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Phase</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Samples</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'10'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Offset</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">VectorParams1D</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/sinewave.html"
    },
    {
        "block_name": "Step",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Time</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'1' | real- or complex-valued scalar, vector, or\n\t\t\t\t\t\t\t\t\tmatrix</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Before</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'1' | real- or complex-valued scalar, vector, or\n\t\t\t\t\t\t\t\t\tmatrix</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">After</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'1' | real- or complex-valued scalar, vector, or\n\t\t\t\t\t\t\t\t\tmatrix</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VectorParams1D</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'on' | 'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'on'</code> </span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                        <code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector | string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off'</code> |\n                        <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Inherit: Inherit via internal rule'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'double'</code> | <code class=\"literal\">'single'</code> |\n\t\t\t\t\t\t\t\t&lt;data type expression&gt;</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'double'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/step.html"
    },
    {
        "block_name": "Waveform Generator",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">SelectedSignal</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">'1'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/waveformgenerator.html"
    },
    {
        "block_name": "ASCII to String",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/asciitostring.html"
    },
    {
        "block_name": "Compose String",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Format</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'&lt;filename&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'\"%d %f\"'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'string'</code> | <em class=\"replaceable\"><code>&lt;data type\n                                    expression&gt;</code></em></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'string'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/composestring.html"
    },
    {
        "block_name": "Uniform Random Number",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Minimum</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'-1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Maximum</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">See</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'0.1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VectorParams1D</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'on' | 'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"> <strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'on'</code> </span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/uniformrandomnumber.html"
    },
    {
        "block_name": "Scan String",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Format</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'&lt;filename&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'\"%d %f\"'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/scanstring.html"
    },
    {
        "block_name": "String Compare",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">CaseSensitive</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">CompareOption</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Entire string'</code> | <code class=\"literal\">'First N\n                                    characters'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Entire string'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">CompareOption</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringcompare.html"
    },
    {
        "block_name": "String Constant",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">String</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'\"Hello!\"'</code> | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'\"Hello!\"'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'string'</code> | <em class=\"replaceable\"><code>&lt;data type\n                                    expression&gt;</code></em></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'string'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringconstant.html"
    },
    {
        "block_name": "String Concatenate",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Inputs</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar from\n                                    <code class=\"literal\">2</code> to <code class=\"literal\">512</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'2'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'string'</code> | <em class=\"replaceable\"><code>&lt;data type\n                                    expression&gt;</code></em></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'string'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringconcatenate.html"
    },
    {
        "block_name": "String Contains",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                  <code class=\"literal\">CaseSensitive</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                <code class=\"literal\">Function</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Contains'</code> | <code class=\"literal\">'Starts with'</code> | <code class=\"literal\">'Ends\n                  with'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Contains'</code> for\n                  <span class=\"block\">String Contains</span> block, <code class=\"literal\">'Starts with'</code> for\n                  <span class=\"block\">String Starts With</span> block, <code class=\"literal\">'Ends with'</code> for\n                  <span class=\"block\">String Ends With</span> block</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringcontains.html"
    },
    {
        "block_name": "String Find",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Inherit: Inherit via internal rule'</code> |\n                                    <code class=\"literal\">'Inherit: Inherit via back propagation'</code> |\n                                    <code class=\"literal\">'int8'</code> | <code class=\"literal\">'int16'</code> |\n                                    <code class=\"literal\">'int32'</code> | <em class=\"replaceable\"><code>&lt;data type\n                                    expression&gt;</code></em></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Inherit: Inherit via internal rule'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringfind.html"
    },
    {
        "block_name": "String Count",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                  <code class=\"literal\">CaseSensitive</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Inherit: Inherit via internal rule'</code> | <code class=\"literal\">'Inherit: Inherit\n                  via back propagation'</code> | <code class=\"literal\">'int8'</code> |\n                  <code class=\"literal\">'uint8'</code> | <code class=\"literal\">'int16'</code> |\n                  <code class=\"literal\">'uint16'</code> | <code class=\"literal\">'int32'</code> |\n                  <code class=\"literal\">'uint32'</code> | <em class=\"replaceable\"><code>&lt;data type\n                expression&gt;</code></em></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Inherit: Inherit via internal rule'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringcount.html"
    },
    {
        "block_name": "String Length",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Inherit: Inherit via internal rule'</code> |\n                                    <code class=\"literal\">'Inherit: Inherit via back propagation'</code> |\n                                    <code class=\"literal\">'int8'</code> | <code class=\"literal\">'uint8'</code> |\n                                    <code class=\"literal\">'int16'</code> | <code class=\"literal\">'uint16'</code> |\n                                    <code class=\"literal\">'int32'</code> | <code class=\"literal\">'uint32'</code> |\n                                    <em class=\"replaceable\"><code>&lt;data type expression&gt;</code></em></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Inherit: Inherit via internal rule'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringlength.html"
    },
    {
        "block_name": "String to Double",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Format</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'&lt;filename&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'\"%lf\"'</code> if the block is <span class=\"block\">String to\n                                    Double</span>, <code class=\"literal\">'\"%f\"'</code> if the block is\n                                    <span class=\"block\">String to Single</span></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringtodouble.html"
    },
    {
        "block_name": "String to ASCII",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutputVectorSize</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'31'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringtoascii.html"
    },
    {
        "block_name": "String to Single",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Format</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'&lt;filename&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'\"%f\"'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringtosingle.html"
    },
    {
        "block_name": "String to Enum",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Enum: SlDemoSign'</code> | <em class=\"replaceable\"><code>&lt;data type\n\t\t\t\t\t\t\t\t\texpression&gt;</code></em></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Enum: SlDemoSign'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringtoenum.html"
    },
    {
        "block_name": "Substring",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InheritMaximumLength</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'string'</code> | <em class=\"replaceable\"><code>&lt;data type\n\t\t\t\t\t\t\t\t\texpression&gt;</code></em></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'string'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">StringFromIdxToEnd</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/substring.html"
    },
    {
        "block_name": "To String",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/tostring.html"
    },
    {
        "block_name": "C Caller",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FunctionName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector or string\n                scalar</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FunctionPortSpecification</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.customcode.functionportspecification.html\"><code class=\"class\">FunctionPortSpecification</code></a> object</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">AvailableFunctions</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> cell array </span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                  <code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string scalar or character\n                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">\"-1\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/ccaller.html"
    },
    {
        "block_name": "Fcn",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Expr</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> mathematical\n                                expression</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'sin(u(1)*exp(2.3*(-u(2))))'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/fcn.html"
    },
    {
        "block_name": "C Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">CustomCodeSettingLocation</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong><code class=\"literal\">'BlockSettings'</code> |\n                  <code class=\"literal\">'ModelConfigurationParameters'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'BlockSettings'</code></span></td></tr>"
            ],
            [
                "<tr><th>Custom type</th><th>Specification in <strong class=\"guilabel\">Type</strong> field</th></tr>",
                "<tr><td>C++ class</td><td><code class=\"literal\">Class:\n                            </code><em class=\"replaceable\"><code>C++ClassName</code></em></td></tr>",
                "<tr><td><code class=\"literal\">Simulink.Bus</code></td><td><code class=\"literal\">Bus:\n                            </code><em class=\"replaceable\"><code>BusTypeName</code></em></td></tr>",
                "<tr><td><code class=\"literal\">Simulink.Enum</code></td><td><code class=\"literal\">Enum:\n                            </code><em class=\"replaceable\"><code>EnumTypeName</code></em></td></tr>",
                "<tr><td><code class=\"literal\">Simulink.AliasType</code></td><td><em class=\"replaceable\"><code>AliasTypeName</code></em></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                  <code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string scalar or character\n                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">\"-1\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                  <code class=\"literal\">CustomCodeIsMultiInstantiable</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string scalar or character\n                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/cfunction.html"
    },
    {
        "block_name": "Initialize Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/initializefunction.html"
    },
    {
        "block_name": "Function Caller",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FunctionPrototype</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'y=f(u)'</code> | <code class=\"literal\">'&lt;function\n                                    prototype&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'y=f(u)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InputArgumentSpecifications</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">''</code> | <code class=\"literal\">'&lt;MATLAB\n                                    expression&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutputArgumentSpecifications</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">''</code> | <code class=\"literal\">'&lt;MATLAB\n                                    expression&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'-1'</code>\n                                | <em class=\"replaceable\"><code>sample time</code></em>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'-1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AsynchronousCaller</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/functioncaller.html"
    },
    {
        "block_name": "Interpreted MATLAB Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/interpretedmatlabfunction.html"
    },
    {
        "block_name": "MATLAB Function",
        "libraries": [
            "Simulink/User-Defined Functions",
            "HDL Coder/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">\"FromPortIcon\"</code> (default) | <code class=\"literal\">\"none\"</code> | <code class=\"literal\">\"FromPortBlockName\"</code> | <code class=\"literal\">\"SignalName\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/matlabfunction.html"
    },
    {
        "block_name": "Level-2 MATLAB S-Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FunctionName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'matlabfile'</code> | S-Function name</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'matlabfile'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Parameters</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> values of block\n                                parameters</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">' '</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/level2matlabsfunction.html"
    },
    {
        "block_name": "MATLAB System",
        "libraries": [
            "Simulink/User-Defined Functions",
            "HDL Coder/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">System</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> name of the System object</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">' '</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                    Parameter:</strong><code class=\"literal\">SaturateOnIntegerOverflow</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/matlabsystem.html"
    },
    {
        "block_name": "Reinitialize Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/reinitializefunction.html"
    },
    {
        "block_name": "Reset Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/resetfunction.html"
    },
    {
        "block_name": "S-Function Builder",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/sfunctionbuilder.html"
    },
    {
        "block_name": "S-Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FunctionName</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> name of the\n                                S-function</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'system'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Parameters</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> S-function\n                                parameters</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">' '</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SFunctionModules</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> character vector of file\n                                names</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">' '</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/sfunction.html"
    },
    {
        "block_name": "Simulink Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/simulinkfunction.html"
    },
    {
        "block_name": "Terminate Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/terminatefunction.html"
    },
    {
        "block_name": "Fixed-Point State-Space",
        "libraries": [
            "Simulink/Additional Math & Discrete/Additional Discrete"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">A</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n\t\t\t\t\t\t\t\t\tmatrix</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'[2.6020 -2.2793 0.6708; 1 0 0; 0 1\n\t\t\t\t\t\t\t\t\t0]'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/fixedpointstatespace.html"
    },
    {
        "block_name": "Transfer Fcn Direct Form II",
        "libraries": [
            "Simulink/Additional Math & Discrete/Additional Discrete"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">NumCoefVec</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'[0.2 0.3 0.2]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DenCoeffVec</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'[-0.9 0.6]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">vinit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0.0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">RndMeth</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n                                                  character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Ceiling' | 'Convergent' | 'Floor' |\n                                                  'Nearest' | 'Round' | 'Simplest' |\n                                                  'Zero'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Floor'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DoSatur</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/transferfcndirectformii.html"
    },
    {
        "block_name": "Transfer Fcn Direct Form II Time Varying",
        "libraries": [
            "Simulink/Additional Math & Discrete/Additional Discrete"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">vinit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0.0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">RndMeth</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n                                                  character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Ceiling' | 'Convergent' | 'Floor' |\n                                                  'Nearest' | 'Round' | 'Simplest' |\n                                                  'Zero'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Floor'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DoSatur</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/transferfcndirectformiitimevarying.html"
    },
    {
        "block_name": "Decrement Real World",
        "libraries": [
            "Simulink/Additional Math & Discrete/Additional Math: Increment - Decrement",
            "HDL Coder/Math Operations"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/decrementrealworld.html"
    },
    {
        "block_name": "Decrement To Zero",
        "libraries": [
            "Simulink/Additional Math & Discrete/Additional Math: Increment - Decrement"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/decrementtozero.html"
    },
    {
        "block_name": "Decrement Stored Integer",
        "libraries": [
            "Simulink/Additional Math & Discrete/Additional Math: Increment - Decrement",
            "HDL Coder/Math Operations"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/decrementstoredinteger.html"
    },
    {
        "block_name": "Decrement Time To Zero",
        "libraries": [
            "Simulink/Additional Math & Discrete/Additional Math: Increment - Decrement"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/decrementtimetozero.html"
    },
    {
        "block_name": "Increment Stored Integer",
        "libraries": [
            "Simulink/Additional Math & Discrete/Additional Math: Increment - Decrement",
            "HDL Coder/Math Operations"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/incrementstoredinteger.html"
    },
    {
        "block_name": "Increment Real World",
        "libraries": [
            "Simulink/Additional Math & Discrete/Additional Math: Increment - Decrement",
            "HDL Coder/Math Operations"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/incrementrealworld.html"
    },
    {
        "block_name": "Subsystem",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Messages & Events",
            "Simulink/Messages & Events",
            "Simulink/Ports & Subsystems",
            "Simulink/Matrix Operations"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/subsystem.html"
    },
    {
        "block_name": "Model",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ModelNameDialog</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">''</code> (default) | filename in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/model.html"
    },
    {
        "block_name": "Variant Subsystem, Variant Model",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td><strong class=\"guilabel\">Variant control mode</strong></td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td> <strong class=\"guilabel\">Variant control mode</strong> </td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VariantControlVariable</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"object\">Simulink.VariantControl</code>, scalar variable,\n                                <code class=\"object\">Simulink.Parameter</code>,\n                            <code class=\"function\">struct</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VariantChoicesEnumeration</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> enumeration class defined using\n                                <code class=\"function\">classdef</code> or\n                                <code class=\"function\">Simulink.defineIntEnumType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">VariantChoicesSpecifier</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> Any MATLAB expression that evaluate to a one-dimensional cell array\n                            of file names or file name patterns.</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><th>To...</th><th>Click...</th></tr>",
                "<tr><td><strong class=\"guilabel\">Create and add a new subsystem choice</strong>:\n                                    Create a new <span class=\"block\">Subsystem</span> block as a variant choice\n                                    and add an entry for the new choice in the table.</td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Create and add a new subsystem choice button\" height=\"22\" src=\"ssvar_add_ss_choice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><strong class=\"guilabel\">Create and add a new model variant\n                                        choice</strong>: Create a new <span class=\"block\">Model</span> block\n                                    as a variant choice and add an entry for the new choice in the\n                                    table.</td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Create and add a new model variant choice button\" height=\"22\" src=\"ssvar_add_mod_choice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><strong class=\"guilabel\">Delete selected variant choices</strong>: Delete\n                                    variant choices permanently.</td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e379513\"><p><img alt=\"the Delete selected variant choices button\" height=\"32\" src=\"ssvar_delete.png\" width=\"31\"/></p></div></div>\n</td></tr>",
                "<tr><td><p><strong class=\"guilabel\">Create/Edit selected variant\n                                            object</strong>: Create or edit a\n                                            <code class=\"object\">Simulink.VariantExpression</code> object in\n                                        the global workspace and specify the variant condition using\n                                        the <code class=\"object\">Simulink.VariantExpression</code> object\n                                        parameter dialog box.</p><div class=\"alert alert-info\"><span class=\"alert_icon icon-alert-info-reverse\"></span><p class=\"alert_heading\"><strong>Note</strong></p><p>For a model that uses the base workspace, this\n                                            operation creates the\n                                                <code class=\"object\">Simulink.VariantExpression</code> object\n                                            in the base workspace and the object is available only\n                                            for the current MATLAB session. To permanently store the\n                                            data, save the object in a MAT file or MATLAB\n                                            script.</p></div></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Create or Edit selected variant object button\" height=\"28\" src=\"ssvar_edit_var_object.png\" width=\"32\"/></span></span></td></tr>",
                "<tr><td><strong class=\"guilabel\">Open selected variant choice block</strong>: Open\n                                    the Subsystem block for the selected row.</td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Open selected variant choice block button\" height=\"28\" src=\"ssvar_open_ssvar_choice.png\" width=\"32\"/></span></span></td></tr>",
                "<tr><td><strong class=\"guilabel\">Refresh dialog information from Variant Subsystem\n                                        contents</strong>: Update the <strong class=\"guilabel\">Variant\n                                        choices</strong> table according to the variant choices\n                                    and values of the variant control in the global\n                                    workspace.</td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Refresh dialog information from Variant Subsystem contents button\" height=\"28\" src=\"ssvar_refresh.png\" width=\"32\"/></span></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Structure field:</strong> Represented by the\n                    read-only <code class=\"literal\">variant.Name</code> field in the\n                        <code class=\"literal\">Variant</code> parameter structure</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> variant control that is associated\n                    with the variant choice</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'variant'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong> <code class=\"literal\">LabelModeActivechoice</code> </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> if no label mode active choice is specified, the value is empty. If label mode active choice is specified, the value is the name of the label mode active choice.</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">AllowZeroVariantControls</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">PropagateVariantConditions</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">AllowFlexibleInterface</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/variantsubsystemvariantmodelvariantassemblysubsystem.html"
    },
    {
        "block_name": "Out Bus Element",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "Simulink/Sinks",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sinks",
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">PortName</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'OutBus'</code> (default) | port name in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">BackgroundColor</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'black'</code> (default) | <code class=\"literal\">'white</code> | <code class=\"literal\">'red'</code> | <code class=\"literal\">'green'</code> | <code class=\"literal\">'blue'</code> | <code class=\"literal\">'cyan'</code> | <code class=\"literal\">'magenta'</code> | <code class=\"literal\">'yellow'</code> | <code class=\"literal\">'gray'</code> | <code class=\"literal\">'lightBlue'</code> | <code class=\"literal\">'orange'</code> | <code class=\"literal\">'darkGreen'</code> | <code class=\"literal\">'[r,g,b]'</code> where <code class=\"literal\">r</code>, <code class=\"literal\">g</code>, and\n\t\t\t\t\t\t\t<code class=\"literal\">b</code>, are the red, green, blue values of the color in the range 0.0 to\n\t\t\t\t\t\t1.0</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/outbuselement.html"
    },
    {
        "block_name": "In Bus Element",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "Simulink/Sources",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sources",
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">PortName</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'InBus'</code> (default) | port name in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">BackgroundColor</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'black'</code> (default) | <code class=\"literal\">'white</code> | <code class=\"literal\">'red'</code> | <code class=\"literal\">'green'</code> | <code class=\"literal\">'blue'</code> | <code class=\"literal\">'cyan'</code> | <code class=\"literal\">'magenta'</code> | <code class=\"literal\">'yellow'</code> | <code class=\"literal\">'gray'</code> | <code class=\"literal\">'lightBlue'</code> | <code class=\"literal\">'orange'</code> | <code class=\"literal\">'darkGreen'</code> | <code class=\"literal\">'[r,g,b]'</code> where <code class=\"literal\">r</code>, <code class=\"literal\">g</code>, and\n\t\t\t\t\t\t\t<code class=\"literal\">b</code>, are the red, green, blue values of the color in the range 0.0 to\n\t\t\t\t\t\t1.0</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/inbuselement.html"
    },
    {
        "block_name": "Model",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ModelNameDialog</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">''</code> (default) | filename in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/model.html"
    },
    {
        "block_name": "Subsystem",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Messages & Events",
            "Simulink/Messages & Events",
            "Simulink/Ports & Subsystems",
            "Simulink/Matrix Operations"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/subsystem.html"
    },
    {
        "block_name": "Subsystem",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Messages & Events",
            "Simulink/Messages & Events",
            "Simulink/Ports & Subsystems",
            "Simulink/Matrix Operations"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/subsystem.html"
    },
    {
        "block_name": "Variant Model",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td><strong class=\"guilabel\">Variant control mode</strong></td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td> <strong class=\"guilabel\">Variant control mode</strong> </td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VariantControlVariable</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"object\">Simulink.VariantControl</code>, scalar variable,\n                                <code class=\"object\">Simulink.Parameter</code>,\n                            <code class=\"function\">struct</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VariantChoicesEnumeration</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> enumeration class defined using\n                                <code class=\"function\">classdef</code> or\n                                <code class=\"function\">Simulink.defineIntEnumType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">VariantChoicesSpecifier</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> Any MATLAB expression that evaluate to a one-dimensional cell array\n                            of file names or file name patterns.</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><th>To...</th><th>Click...</th></tr>",
                "<tr><td><strong class=\"guilabel\">Create and add a new subsystem choice</strong>:\n                                    Create a new <span class=\"block\">Subsystem</span> block as a variant choice\n                                    and add an entry for the new choice in the table.</td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Create and add a new subsystem choice button\" height=\"22\" src=\"ssvar_add_ss_choice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><strong class=\"guilabel\">Create and add a new model variant\n                                        choice</strong>: Create a new <span class=\"block\">Model</span> block\n                                    as a variant choice and add an entry for the new choice in the\n                                    table.</td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Create and add a new model variant choice button\" height=\"22\" src=\"ssvar_add_mod_choice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><strong class=\"guilabel\">Delete selected variant choices</strong>: Delete\n                                    variant choices permanently.</td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e379513\"><p><img alt=\"the Delete selected variant choices button\" height=\"32\" src=\"ssvar_delete.png\" width=\"31\"/></p></div></div>\n</td></tr>",
                "<tr><td><p><strong class=\"guilabel\">Create/Edit selected variant\n                                            object</strong>: Create or edit a\n                                            <code class=\"object\">Simulink.VariantExpression</code> object in\n                                        the global workspace and specify the variant condition using\n                                        the <code class=\"object\">Simulink.VariantExpression</code> object\n                                        parameter dialog box.</p><div class=\"alert alert-info\"><span class=\"alert_icon icon-alert-info-reverse\"></span><p class=\"alert_heading\"><strong>Note</strong></p><p>For a model that uses the base workspace, this\n                                            operation creates the\n                                                <code class=\"object\">Simulink.VariantExpression</code> object\n                                            in the base workspace and the object is available only\n                                            for the current MATLAB session. To permanently store the\n                                            data, save the object in a MAT file or MATLAB\n                                            script.</p></div></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Create or Edit selected variant object button\" height=\"28\" src=\"ssvar_edit_var_object.png\" width=\"32\"/></span></span></td></tr>",
                "<tr><td><strong class=\"guilabel\">Open selected variant choice block</strong>: Open\n                                    the Subsystem block for the selected row.</td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Open selected variant choice block button\" height=\"28\" src=\"ssvar_open_ssvar_choice.png\" width=\"32\"/></span></span></td></tr>",
                "<tr><td><strong class=\"guilabel\">Refresh dialog information from Variant Subsystem\n                                        contents</strong>: Update the <strong class=\"guilabel\">Variant\n                                        choices</strong> table according to the variant choices\n                                    and values of the variant control in the global\n                                    workspace.</td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Refresh dialog information from Variant Subsystem contents button\" height=\"28\" src=\"ssvar_refresh.png\" width=\"32\"/></span></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Structure field:</strong> Represented by the\n                    read-only <code class=\"literal\">variant.Name</code> field in the\n                        <code class=\"literal\">Variant</code> parameter structure</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> variant control that is associated\n                    with the variant choice</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'variant'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong> <code class=\"literal\">LabelModeActivechoice</code> </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> if no label mode active choice is specified, the value is empty. If label mode active choice is specified, the value is the name of the label mode active choice.</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">AllowZeroVariantControls</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">PropagateVariantConditions</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">AllowFlexibleInterface</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/variantsubsystemvariantmodelvariantassemblysubsystem.html"
    },
    {
        "block_name": "Variant Subsystem, Variant Model, Variant Assembly Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td><strong class=\"guilabel\">Variant control mode</strong></td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td> <strong class=\"guilabel\">Variant control mode</strong> </td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VariantControlVariable</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"object\">Simulink.VariantControl</code>, scalar variable,\n                                <code class=\"object\">Simulink.Parameter</code>,\n                            <code class=\"function\">struct</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VariantChoicesEnumeration</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> enumeration class defined using\n                                <code class=\"function\">classdef</code> or\n                                <code class=\"function\">Simulink.defineIntEnumType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">VariantChoicesSpecifier</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> Any MATLAB expression that evaluate to a one-dimensional cell array\n                            of file names or file name patterns.</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><th>To...</th><th>Click...</th></tr>",
                "<tr><td><strong class=\"guilabel\">Create and add a new subsystem choice</strong>:\n                                    Create a new <span class=\"block\">Subsystem</span> block as a variant choice\n                                    and add an entry for the new choice in the table.</td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Create and add a new subsystem choice button\" height=\"22\" src=\"ssvar_add_ss_choice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><strong class=\"guilabel\">Create and add a new model variant\n                                        choice</strong>: Create a new <span class=\"block\">Model</span> block\n                                    as a variant choice and add an entry for the new choice in the\n                                    table.</td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Create and add a new model variant choice button\" height=\"22\" src=\"ssvar_add_mod_choice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><strong class=\"guilabel\">Delete selected variant choices</strong>: Delete\n                                    variant choices permanently.</td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e379513\"><p><img alt=\"the Delete selected variant choices button\" height=\"32\" src=\"ssvar_delete.png\" width=\"31\"/></p></div></div>\n</td></tr>",
                "<tr><td><p><strong class=\"guilabel\">Create/Edit selected variant\n                                            object</strong>: Create or edit a\n                                            <code class=\"object\">Simulink.VariantExpression</code> object in\n                                        the global workspace and specify the variant condition using\n                                        the <code class=\"object\">Simulink.VariantExpression</code> object\n                                        parameter dialog box.</p><div class=\"alert alert-info\"><span class=\"alert_icon icon-alert-info-reverse\"></span><p class=\"alert_heading\"><strong>Note</strong></p><p>For a model that uses the base workspace, this\n                                            operation creates the\n                                                <code class=\"object\">Simulink.VariantExpression</code> object\n                                            in the base workspace and the object is available only\n                                            for the current MATLAB session. To permanently store the\n                                            data, save the object in a MAT file or MATLAB\n                                            script.</p></div></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Create or Edit selected variant object button\" height=\"28\" src=\"ssvar_edit_var_object.png\" width=\"32\"/></span></span></td></tr>",
                "<tr><td><strong class=\"guilabel\">Open selected variant choice block</strong>: Open\n                                    the Subsystem block for the selected row.</td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Open selected variant choice block button\" height=\"28\" src=\"ssvar_open_ssvar_choice.png\" width=\"32\"/></span></span></td></tr>",
                "<tr><td><strong class=\"guilabel\">Refresh dialog information from Variant Subsystem\n                                        contents</strong>: Update the <strong class=\"guilabel\">Variant\n                                        choices</strong> table according to the variant choices\n                                    and values of the variant control in the global\n                                    workspace.</td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Refresh dialog information from Variant Subsystem contents button\" height=\"28\" src=\"ssvar_refresh.png\" width=\"32\"/></span></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Structure field:</strong> Represented by the\n                    read-only <code class=\"literal\">variant.Name</code> field in the\n                        <code class=\"literal\">Variant</code> parameter structure</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> variant control that is associated\n                    with the variant choice</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'variant'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong> <code class=\"literal\">LabelModeActivechoice</code> </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> if no label mode active choice is specified, the value is empty. If label mode active choice is specified, the value is the name of the label mode active choice.</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">AllowZeroVariantControls</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">PropagateVariantConditions</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">AllowFlexibleInterface</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/variantsubsystemvariantmodelvariantassemblysubsystem.html"
    },
    {
        "block_name": "Variant Start",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VariantStartEndTag</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'A'</code> | valid MATLAB identifier</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'A'</code>\n</span></td></tr>"
            ],
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td><strong class=\"guilabel\">Variant control mode</strong></td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td> <strong class=\"guilabel\">Variant control mode</strong> </td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><th>To...</th><th>Click...</th></tr>",
                "<tr><td><p><strong class=\"guilabel\">Add a new output port</strong>: Create a new output port\n                      as a variant choice and add an entry for the new choice in the\n                    table.</p></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the add a new output port button\" height=\"22\" src=\"addportvariantchoice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><p><strong class=\"guilabel\">Delete selected port</strong>: Delete the selected\n                      variant choice from the block and its entry from the table.</p></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the delete selected port button\" height=\"22\" src=\"deleteportvariantchoice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><p><strong class=\"guilabel\">Create/Edit selected variant object</strong>: Create or\n                      edit a <a href=\"simulink.variantexpression-class.html\"><code class=\"object\">Simulink.VariantExpression</code></a>\n                      object for the selected variant choice in the global workspace and specify the\n                      variant condition using the <code class=\"object\">Simulink.VariantExpression</code> object\n                      parameter dialog box.</p><div class=\"alert alert-info\"><span class=\"alert_icon icon-alert-info-reverse\"></span><p class=\"alert_heading\"><strong>Note</strong></p><p>For a model that uses the base workspace, this operation creates the\n                          <code class=\"object\">Simulink.VariantExpression</code> object in the base workspace,\n                        and the object is available only for the current MATLAB session. To\n                        permanently store the data, save the object in a MAT file or MATLAB\n                        script.</p></div></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Create or Edit selected variant object button\" height=\"28\" src=\"ssvar_edit_var_object.png\" width=\"32\"/></span></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Structure field:</strong> Represented by the\n                    read-only <code class=\"literal\">variant.Name</code> field in the\n                        <code class=\"literal\">Variant</code> parameter structure</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> variant control that is associated\n                    with the variant choice</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'variant'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong> <code class=\"literal\">LabelModeActivechoice</code> </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> if no label mode active choice is specified, the value is empty. If label mode active choice is specified, the value is the name of the label mode active choice.</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowConditionOnBlock</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/variantstart.html"
    },
    {
        "block_name": "Variant Source",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td><strong class=\"guilabel\">Variant control mode</strong></td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td> <strong class=\"guilabel\">Variant control mode</strong> </td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><th>To...</th><th>Click...</th></tr>",
                "<tr><td><p><strong class=\"guilabel\">Add a new input port</strong>: Create a\n\t\t\t\t\t\t\t\t\t\t\tnew input port as a variant choice and add an entry for\n\t\t\t\t\t\t\t\t\t\t\tthe new choice in the table.</p></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the add a new input port button\" height=\"22\" src=\"addportvariantchoice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><p><strong class=\"guilabel\">Delete selected port</strong>: Delete\n\t\t\t\t\t\t\t\t\t\t\tthe selected variant choice from the block and its entry\n\t\t\t\t\t\t\t\t\t\t\tfrom the table.</p></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the delete selected port button\" height=\"22\" src=\"deleteportvariantchoice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><p><strong class=\"guilabel\">Create/Edit selected variant object</strong>: Create or edit a\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"simulink.variantexpression-class.html\"><code class=\"object\">Simulink.VariantExpression</code></a> object for the\n\t\t\t\t\t\t\t\t\t\t\tselected variant choice in the global workspace and\n\t\t\t\t\t\t\t\t\t\t\tspecify the variant condition using the\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"object\">Simulink.VariantExpression</code> object\n\t\t\t\t\t\t\t\t\t\t\tparameter dialog box.</p><div class=\"alert alert-info\"><span class=\"alert_icon icon-alert-info-reverse\"></span><p class=\"alert_heading\"><strong>Note</strong></p><p>For a model that uses the base workspace, this\n\t\t\t\t\t\t\t\t\t\t\t\toperation creates the\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"object\">Simulink.VariantExpression</code> object\n\t\t\t\t\t\t\t\t\t\t\t\tin the base workspace, and the object is available\n\t\t\t\t\t\t\t\t\t\t\t\tonly for the current MATLAB session. To permanently\n\t\t\t\t\t\t\t\t\t\t\t\tstore the data, save the object in a MAT file or\n\t\t\t\t\t\t\t\t\t\t\t\tMATLAB script.</p></div></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Create or Edit selected variant object button\" height=\"28\" src=\"ssvar_edit_var_object.png\" width=\"32\"/></span></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Structure field:</strong> Represented by the\n                    read-only <code class=\"literal\">variant.Name</code> field in the\n                        <code class=\"literal\">Variant</code> parameter structure</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> variant control that is associated\n                    with the variant choice</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'variant'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong> <code class=\"literal\">LabelModeActivechoice</code> </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> if no label mode active choice is specified, the value is empty. If label mode active choice is specified, the value is the name of the label mode active choice.</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><th>Generated code without <strong class=\"guilabel\">Allow zero active\n\t\t\t\t\t\t\t\t\t\t\t\tvariant controls</strong></th><th>Generated code with <strong class=\"guilabel\">Allow zero active\n\t\t\t\t\t\t\t\t\t\t\t\tvariant controls</strong></th></tr>",
                "<tr><td>\n<div class=\"code_responsive\"><pre class=\"programlisting\"># if R == 1\n  /* logic for Rain Sensor Model 1; */\n# elif R == 2\n  /* logic for Rain Sensor Model 2; */\n# endif\n\n/* If none of the conditions R == 1 or R == 2 evaluate to true, \nthe filter F1 receives an invalid input which\nresuls in an error.*/\n\n/* logic for filter F1; */\n</pre></div>\n</td><td>\n<div class=\"code_responsive\"><pre class=\"programlisting\"># if R == 1\n  /* logic for Rain Sensor Model 1; */\n# elif R == 2\n  /* logic for Rain Sensor Model 2; */\n# endif\n\n/* The logic for filter F1 is executed only if \neither of the conditions evaluate to true. \nF1 is removed from code compilation if none of the\ncondition evaluates to true. */\n\n# if (R == 1) \u2225 (R == 2)\n  /* logic for filter F1; */ \n# endif</pre></div>\n</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutputFunctionCall</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowConditionOnBlock</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/variantsource.html"
    },
    {
        "block_name": "Variant Sink",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td><strong class=\"guilabel\">Variant control mode</strong></td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Variant activation time</strong></th></tr>",
                "<tr><td> <strong class=\"guilabel\">Variant control mode</strong> </td><td><code class=\"guidropdown\">update diagram</code></td><td><code class=\"guidropdown\">update diagram analyze all choices</code></td><td><code class=\"guidropdown\">code compile</code></td><td><code class=\"guidropdown\">startup</code></td></tr>",
                "<tr><td><code class=\"guidropdown\">expression</code></td><td>\u2713</td><td>\u2713</td><td>\u2713</td><td>\u2713</td></tr>",
                "<tr><td><code class=\"guidropdown\">label</code></td><td>\u2713</td><td>x</td><td>x</td><td>x</td></tr>",
                "<tr><td><code class=\"guidropdown\">sim codegen switching</code></td><td>\u2713</td><td>\u2713</td><td>x</td><td>x</td></tr>"
            ],
            [
                "<tr><th>To...</th><th>Click...</th></tr>",
                "<tr><td><p><strong class=\"guilabel\">Add a new output port</strong>: Create\n\t\t\t\t\t\t\t\t\t\t\ta new output port as a variant choice and add an entry\n\t\t\t\t\t\t\t\t\t\t\tfor the new choice in the table.</p></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the add a new output port button\" height=\"22\" src=\"addportvariantchoice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><p><strong class=\"guilabel\">Delete selected port</strong>: Delete\n\t\t\t\t\t\t\t\t\t\t\tthe selected variant choice from the block and its entry\n\t\t\t\t\t\t\t\t\t\t\tfrom the table.</p></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the delete selected port button\" height=\"22\" src=\"deleteportvariantchoice.png\" width=\"26\"/></span></span></td></tr>",
                "<tr><td><p><strong class=\"guilabel\">Create/Edit selected variant object</strong>: Create or edit a\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"simulink.variantexpression-class.html\"><code class=\"object\">Simulink.VariantExpression</code></a> object for the\n\t\t\t\t\t\t\t\t\t\t\tselected variant choice in the global workspace and\n\t\t\t\t\t\t\t\t\t\t\tspecify the variant condition using the\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"object\">Simulink.VariantExpression</code> object\n\t\t\t\t\t\t\t\t\t\t\tparameter dialog box.</p><div class=\"alert alert-info\"><span class=\"alert_icon icon-alert-info-reverse\"></span><p class=\"alert_heading\"><strong>Note</strong></p><p>For a model that uses the base workspace, this\n\t\t\t\t\t\t\t\t\t\t\t\toperation creates the\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"object\">Simulink.VariantExpression</code> object\n\t\t\t\t\t\t\t\t\t\t\t\tin the base workspace, and the object is available\n\t\t\t\t\t\t\t\t\t\t\t\tonly for the current MATLAB session. To permanently\n\t\t\t\t\t\t\t\t\t\t\t\tstore the data, save the object in a MAT file or\n\t\t\t\t\t\t\t\t\t\t\t\tMATLAB script.</p></div></td><td><span class=\"guiicon\"><span class=\"inlinemediaobject\"><img alt=\"the Create or Edit selected variant object button\" height=\"28\" src=\"ssvar_edit_var_object.png\" width=\"32\"/></span></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Structure field:</strong> Represented by the\n                    read-only <code class=\"literal\">variant.Name</code> field in the\n                        <code class=\"literal\">Variant</code> parameter structure</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> variant control that is associated\n                    with the variant choice</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'variant'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong> <code class=\"literal\">LabelModeActivechoice</code> </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong> if no label mode active choice is specified, the value is empty. If label mode active choice is specified, the value is the name of the label mode active choice.</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><th>Generated code without <strong class=\"guilabel\">Allow zero active\n\t\t\t\t\t\t\t\t\t\t\t\tvariant controls</strong></th><th>Generated code with <strong class=\"guilabel\">Allow zero active\n\t\t\t\t\t\t\t\t\t\t\t\tvariant controls</strong></th></tr>",
                "<tr><td>\n<div class=\"code_responsive\"><pre class=\"programlisting\">/* If none of the conditions Mode == 1 or Mode == 2\n evaluate to true, the output of Gain remains unused which\nresuls in an error.*/\n\n/* logic for Gain; */\n\n# if Mode == 1\n  /* logic for wiper motor; */\n# elif Mode == 2\n  /* logic for digital to analog conversion; */\n# endif\n</pre></div>\n</td><td>\n<div class=\"code_responsive\"><pre class=\"programlisting\"># if Mode == 1\n  /* logic for wiper motor; */\n# elif Mode == 2\n  /* logic digital to analog conversion; */\n# endif\n\n/* The logic for Gain is executed only if \neither of the conditions evaluate to true. \nGain is removed from code compilation if none of the\ncondition evaluates to true. */\n\n# if (Mode == 1) \u2225 (Mode == 2)\n  /* logic for Gain; */\n# endif\n</pre></div>\n</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowConditionOnBlock</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/variantsink.html"
    },
    {
        "block_name": "Variant End",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VariantStartEndTag</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'A'</code> | valid MATLAB identifier</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'A'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VariantPairedBlock</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/variantend.html"
    },
    {
        "block_name": "Initialize Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/initializefunction.html"
    },
    {
        "block_name": "Manual Variant Sink",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">NumChoices</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">integer</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'2'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/manualvariantsink.html"
    },
    {
        "block_name": "Reset Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/resetfunction.html"
    },
    {
        "block_name": "Terminate Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/terminatefunction.html"
    },
    {
        "block_name": "Manual Variant Source",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">NumChoices</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">integer</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'2'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/manualvariantsource.html"
    },
    {
        "block_name": "Data Store Memory",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">DataStoreName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'A' |\n\t\t\t\t\t\t\t\t\t\t...</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">'A'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/datastorememory.html"
    },
    {
        "block_name": "Simulink Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/simulinkfunction.html"
    },
    {
        "block_name": "In Bus Element",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "Simulink/Sources",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sources",
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">PortName</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'InBus'</code> (default) | port name in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">BackgroundColor</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'black'</code> (default) | <code class=\"literal\">'white</code> | <code class=\"literal\">'red'</code> | <code class=\"literal\">'green'</code> | <code class=\"literal\">'blue'</code> | <code class=\"literal\">'cyan'</code> | <code class=\"literal\">'magenta'</code> | <code class=\"literal\">'yellow'</code> | <code class=\"literal\">'gray'</code> | <code class=\"literal\">'lightBlue'</code> | <code class=\"literal\">'orange'</code> | <code class=\"literal\">'darkGreen'</code> | <code class=\"literal\">'[r,g,b]'</code> where <code class=\"literal\">r</code>, <code class=\"literal\">g</code>, and\n\t\t\t\t\t\t\t<code class=\"literal\">b</code>, are the red, green, blue values of the color in the range 0.0 to\n\t\t\t\t\t\t1.0</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/inbuselement.html"
    },
    {
        "block_name": "Data Store Read",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                        <code class=\"literal\">DataStoreName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string | character\n                                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: data store\n                                    name</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                        <code class=\"literal\">'A'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/datastoreread.html"
    },
    {
        "block_name": "Data Store Write",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                        <code class=\"literal\">DataStoreName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string | character\n                                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: data store\n                                    name</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                        <code class=\"literal\">'A'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/datastorewrite.html"
    },
    {
        "block_name": "Bus Assignment",
        "libraries": [
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">InputSignals</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\">list of element names in a cell array or cell array of cell arrays</span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">AssignedSignals</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'signal1'</code> (default) | comma-separated list of element names in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/busassignment.html"
    },
    {
        "block_name": "Out Bus Element",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "Simulink/Sinks",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sinks",
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">PortName</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'OutBus'</code> (default) | port name in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">BackgroundColor</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'black'</code> (default) | <code class=\"literal\">'white</code> | <code class=\"literal\">'red'</code> | <code class=\"literal\">'green'</code> | <code class=\"literal\">'blue'</code> | <code class=\"literal\">'cyan'</code> | <code class=\"literal\">'magenta'</code> | <code class=\"literal\">'yellow'</code> | <code class=\"literal\">'gray'</code> | <code class=\"literal\">'lightBlue'</code> | <code class=\"literal\">'orange'</code> | <code class=\"literal\">'darkGreen'</code> | <code class=\"literal\">'[r,g,b]'</code> where <code class=\"literal\">r</code>, <code class=\"literal\">g</code>, and\n\t\t\t\t\t\t\t<code class=\"literal\">b</code>, are the red, green, blue values of the color in the range 0.0 to\n\t\t\t\t\t\t1.0</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/outbuselement.html"
    },
    {
        "block_name": "Bus Selector",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">InputSignals</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\">cell array of element names</span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">OutputSignals</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'signal1,signal2'</code> (default) | comma-separated list of element names in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">OutputAsBus</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'off'</code> (default) | <code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/busselector.html"
    },
    {
        "block_name": "Bus Creator",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Inputs</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'2'</code> (default) | integer in quotes | comma-separated list of element names in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Inputs</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'2'</code> (default) | integer in quotes | comma-separated list of element names in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">OutDataTypeStr</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'Inherit: auto'</code> (default) | <code class=\"literal\">'Bus: &lt;object name&gt;'</code></span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">InheritFromInputs</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'on'</code> (default) | <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">NonVirtualBus</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'off'</code> (default) | <code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/buscreator.html"
    },
    {
        "block_name": "Demux",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Signal Routing",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><th>Parameter Value</th><th>Block Output</th><th>Examples and Comments</th></tr>",
                "<tr><td><p><code class=\"literal\">p = n</code></p></td><td><p><code class=\"literal\">p</code> scalar signals </p></td><td><p>If the input is a three-element vector and you specify three outputs,\n\t\t\t\t\t\t\t\t\t\t\tthe block outputs three scalar signals.</p></td></tr>",
                "<tr><td><p><code class=\"literal\">p &gt; n</code></p></td><td><p>Error</p></td><td>This value is not supported.</td></tr>",
                "<tr><td><p><code class=\"literal\">p &lt; n</code></p><p><code class=\"literal\">n mod p =\n\t\t\t\t\t\t\t\t\t\t\t\t0</code></p></td><td><p><code class=\"literal\">p</code> vector signals each having\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">n/p</code> elements</p></td><td><p>If the input is a six-element vector and you specify three outputs,\n\t\t\t\t\t\t\t\t\t\t\tthe block outputs three two-element vectors.</p></td></tr>",
                "<tr><td><p><code class=\"literal\">p &lt; n</code></p><p><code class=\"literal\">n mod p =\n\t\t\t\t\t\t\t\t\t\t\t\tm</code></p></td><td><p><code class=\"literal\">m</code> vector signals each having\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">(n/p)+1</code> elements and <code class=\"literal\">p-m</code> signals\n\t\t\t\t\t\t\t\t\t\t\thaving <code class=\"literal\">n/p </code>elements</p></td><td><p>If the input is a five-element vector and you specify three outputs,\n\t\t\t\t\t\t\t\t\t\t\tthe block outputs two two-element vector signals and one scalar\n\t\t\t\t\t\t\t\t\t\tsignal.</p></td></tr>",
                "<tr><td><p><code class=\"literal\">[p</code><sub>1</sub><code class=\"literal\">\n\t\t\t\t\t\t\t\t\t\t\t\tp</code><sub>2</sub><code class=\"literal\"> ...\n\t\t\t\t\t\t\t\t\t\t\t\tp</code><sub>m</sub><code class=\"literal\">]</code></p><p><code class=\"literal\">p</code><sub>1</sub><code class=\"literal\">+p</code><sub>2</sub><code class=\"literal\">+...+p</code><sub>m</sub><code class=\"literal\">=n</code></p><p><code class=\"literal\">p</code><sub>i</sub><code class=\"literal\">\n\t\t\t\t\t\t\t\t\t\t\t\t&gt; 0</code></p></td><td><p><code class=\"literal\">m</code> vector signals having widths\n\t\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">p<sub>1</sub></code>,\n\t\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">p<sub>2</sub></code>, ...\n\t\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">p<sub>m</sub></code></p></td><td><p>If the input is a five-element vector and you specify <code class=\"literal\">[3,\n\t\t\t\t\t\t\t\t\t\t\t\t2]</code> as the output, the block outputs three of the input elements on\n\t\t\t\t\t\t\t\t\t\t\tone port and the other two elements on the other port. </p></td></tr>",
                "<tr><td><p>An array that has one or more of <code class=\"literal\">m</code> elements with a value of\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal remove_text_wrapping\">-1</code>, which specifies that the software infers the size for\n\t\t\t\t\t\t\t\t\t\t\tthe element.</p><p>For example, suppose that you have a four-element\n\t\t\t\t\t\t\t\t\t\t\tarray with a total width of 14 and you specify the parameter to be\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">[p</code><sub>1</sub><code class=\"literal\">\n\t\t\t\t\t\t\t\t\t\t\t\tp</code><sub>2</sub><code class=\"literal\"> -1</code><code class=\"literal\">\n\t\t\t\t\t\t\t\t\t\t\t\tp</code><sub>4</sub><code class=\"literal\">]</code>.</p><p>The\n\t\t\t\t\t\t\t\t\t\t\tvalue for the third element (the <code class=\"literal remove_text_wrapping\">-1</code> element) is <code class=\"literal\">14\n\t\t\t\t\t\t\t\t\t\t\t\t- </code><code class=\"literal\">(p<sub>1</sub> + p<sub>2</sub>\n\t\t\t\t\t\t\t\t\t\t\t\t+ p<sub>4</sub>)</code></p></td><td><p><code class=\"literal\">m</code> vector signals</p></td><td><p>If <code class=\"literal\">p</code><sub>i</sub> is greater than zero,\n\t\t\t\t\t\t\t\t\t\t\tthe corresponding output has width\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">p</code><sub>i</sub>. If\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">p</code><sub>i</sub> is -1, the width of the\n\t\t\t\t\t\t\t\t\t\t\tcorresponding output is computed dynamically.</p></td></tr>",
                "<tr><td><p><code class=\"literal\">[p</code><sub>1</sub><code class=\"literal\">\n\t\t\t\t\t\t\t\t\t\t\t\tp</code><sub>2</sub><code class=\"literal\"> ...\n\t\t\t\t\t\t\t\t\t\t\t\tp</code><sub>m</sub><code class=\"literal\">]</code></p><p><code class=\"literal\">p</code><sub>1</sub><code class=\"literal\">+p</code><sub>2</sub><code class=\"literal\">+...+p</code><sub>m</sub><code class=\"literal\">!=n</code></p><p><code class=\"literal\">p</code><sub>i</sub><code class=\"literal\">\n\t\t\t\t\t\t\t\t\t\t\t\t= &gt; 0</code></p></td><td><p>Error</p></td><td>This value is not supported.</td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">DisplayOption</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'bar'</code> (default) | <code class=\"literal\">'none'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/demux.html"
    },
    {
        "block_name": "Selector",
        "libraries": [
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">NumberOfDimensions</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">integer</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">IndexMode</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'One-based' | 'Zero-based'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'One-based'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">IndexOptionArray</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Select all'</code> | <code class=\"literal\">'Index vector\n                                    (dialog)'</code> | <code class=\"literal\">'Index option (port)'</code> |\n                                    <code class=\"literal\">'Starting index (dialog)'</code> |\n                                    <code class=\"literal\">'Starting index (port)'</code> | <code class=\"literal\">Starting\n                                    and ending indices (port)</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Index vector (dialog)'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">IndexParamArray</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> cell array</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'{ }'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutputSizeArray</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> cell array</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'{ }'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InputPortWidth</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">integer</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'3'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">RuntimeRangeChecks</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Off'</code> | <code class=\"literal\">'On'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Off'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/selector.html"
    },
    {
        "block_name": "Mux",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Signal Routing",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><th>Format</th><th>Block Behavior</th></tr>",
                "<tr><td><p>Scalar</p></td><td><p>The number of inputs to the <span class=\"block\">Mux</span>\n\t\t\t\t\t\t\t\t\t\t\tblock.</p><p>When you use this format, the block accepts scalar or\n\t\t\t\t\t\t\t\t\t\t\tvector signals of any size. The software assigns each input the name\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">signalN</code>, where <code class=\"literal\">N</code> is the input port\n\t\t\t\t\t\t\t\t\t\t\tnumber.</p></td></tr>",
                "<tr><td><p>Vector</p></td><td><p>The length of the vector specifies the number of\n                                            inputs. Each element specifies the size of the\n                                            corresponding input.</p><p>A positive value\n                                            specifies that the corresponding port can accept only\n                                            vectors of that size. For example, <code class=\"literal\">[2\n                                                3]</code> specifies two input ports of sizes\n                                                <code class=\"literal\">2</code> and <code class=\"literal\">3</code>,\n                                            respectively. If an input signal width does not match\n                                            the expected width, an error message appears. A value of\n                                                <code class=\"literal remove_text_wrapping\">-1</code> specifies that the\n                                            corresponding port can accept scalars or vectors of any\n                                            size.</p></td></tr>",
                "<tr><td><p>Cell array</p></td><td><p>The length of the cell array specifies the number\n                                            of inputs. The value of each cell specifies the size of\n                                            the corresponding input.</p><p>A scalar value\n                                                <code class=\"literal\">N</code> specifies a vector of size\n                                                <code class=\"literal\">N</code>. A value of\n                                                <code class=\"literal remove_text_wrapping\">-1</code> means that the corresponding\n                                            port can accept scalar or vector signals of any\n                                            size.</p></td></tr>",
                "<tr><td><p>Comma-separated list of signal names</p></td><td><p>A list of signal names separated by commas. The\n\t\t\t\t\t\t\t\t\t\t\tsoftware assigns each name to the corresponding port and signal. For example,\n\t\t\t\t\t\t\t\t\t\t\tif you enter <code class=\"literal\">position,velocity</code>, the <span class=\"block\">Mux</span>\n\t\t\t\t\t\t\t\t\t\t\tblock has two inputs, named <code class=\"literal\">position</code> and\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">velocity</code>.</p></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">DisplayOption</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'bar'</code> (default) | <code class=\"literal\">'signals'</code> | <code class=\"literal\">'none'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/mux.html"
    },
    {
        "block_name": "Vector Concatenate",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Math Operations",
            "Simulink/Signal Routing",
            "HDL Coder/Math Operations",
            "HDL Coder/Signal Routing",
            "Simulink/Math Operations",
            "Simulink/Matrix Operations",
            "DSP System Toolbox/Math Functions/Matrices and Linear Algebra/Matrix Operations",
            "HDL Coder/Math Operations"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">NumInputs</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'2'</code> (default) | positive integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><th><strong class=\"guilabel\">Mode</strong> Setting</th><th>Input Signals</th><th>Output Signal</th></tr>",
                "<tr><td><code class=\"guidropdown\">Vector</code></td><td><p></p>\n<div class=\"itemizedlist\"><ul><li><p>Vectors</p></li><li><p>Row vectors (1-by-<em class=\"varname\">M</em> matrices)</p></li><li><p>Column vectors (<em class=\"varname\">M</em>-by-1 matrices)</p></li><li><p>Combination of vectors and either row or column vectors</p></li></ul></div><p>\n</p></td><td><p>When all inputs are vectors, the output is a vector.</p><p>If any of the inputs are row or column vectors, the output is a row or column vector, respectively.</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Multidimensional array</code></td><td><p>Signals of any dimensionality (scalars, vectors, and matrices)</p></td><td><p> The output is always an array.</p><p>Trailing dimensions are assumed to be <code class=\"literal\">1</code> for lower dimensionality inputs. For example, if the output is 4-D and the input is <code class=\"literal\">[2x3]</code> (2-D), this block treats the input as <code class=\"literal\">[2x3x1x1]</code>.</p><p>Concatenation is on the dimension that you specify with the <strong class=\"guilabel\">Concatenate dimension</strong> parameter.</p></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ConcatenateDimension</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\">scalar integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/vectorconcatenate.html"
    },
    {
        "block_name": "Matrix Concatenate",
        "libraries": [
            "Simulink/Math Operations",
            "Simulink/Matrix Operations",
            "DSP System Toolbox/Math Functions/Matrices and Linear Algebra/Matrix Operations",
            "HDL Coder/Math Operations",
            "Simulink/Commonly Used Blocks",
            "Simulink/Math Operations",
            "Simulink/Signal Routing",
            "HDL Coder/Math Operations",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">NumInputs</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'2'</code> (default) | positive integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><th><strong class=\"guilabel\">Mode</strong> Setting</th><th>Input Signals</th><th>Output Signal</th></tr>",
                "<tr><td><code class=\"guidropdown\">Vector</code></td><td><p></p>\n<div class=\"itemizedlist\"><ul><li><p>Vectors</p></li><li><p>Row vectors (1-by-<em class=\"varname\">M</em> matrices)</p></li><li><p>Column vectors (<em class=\"varname\">M</em>-by-1 matrices)</p></li><li><p>Combination of vectors and either row or column vectors</p></li></ul></div><p>\n</p></td><td><p>When all inputs are vectors, the output is a vector.</p><p>If any of the inputs are row or column vectors, the output is a row or column vector, respectively.</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Multidimensional array</code></td><td><p>Signals of any dimensionality (scalars, vectors, and matrices)</p></td><td><p> The output is always an array.</p><p>Trailing dimensions are assumed to be <code class=\"literal\">1</code> for lower dimensionality inputs. For example, if the output is 4-D and the input is <code class=\"literal\">[2x3]</code> (2-D), this block treats the input as <code class=\"literal\">[2x3x1x1]</code>.</p><p>Concatenation is on the dimension that you specify with the <strong class=\"guilabel\">Concatenate dimension</strong> parameter.</p></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ConcatenateDimension</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\">scalar integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/matrixconcatenate.html"
    },
    {
        "block_name": "Bus to Vector",
        "libraries": [
            "Simulink/Signal Attributes",
            "HDL Coder/Signal Attributes"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/bustovector.html"
    },
    {
        "block_name": "Signal Conversion",
        "libraries": [
            "Simulink/Signal Attributes",
            "HDL Coder/Signal Attributes",
            "Simulink/Quick Insert/Signal Attributes",
            "Simulink/Quick Insert/Signal Attributes",
            "Simulink/Quick Insert/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><th>Modeling Goal</th><th>Option</th></tr>",
                "<tr><td><p>Reduce generated code for a muxed signal. </p><p>For an example\n\t\t\t\t\t\t\t\t\t\t\tinvolving <span class=\"entity\">Simulink\n            Coder\u2122</span> software, see <a class=\"a\" href=\"../../rtw/ug/generate-reentrant-code-from-subsystems-0c8c534ae90b.html\">Generate Reentrant Code from Subsystems</a><span role=\"cross_prod\"> (Simulink Coder)</span>.</p></td><td><code class=\"guidropdown\">Signal copy</code></td></tr>",
                "<tr><td><p>Connect a block with a constant sample time to an output port of an\n\t\t\t\t\t\t\t\t\t\t\tenabled subsystem.</p></td><td><code class=\"guidropdown\">Signal copy</code></td></tr>",
                "<tr><td><p>Save memory by converting a nonvirtual bus to a virtual\n\t\t\t\t\t\t\t\t\t\tbus.</p></td><td><code class=\"guidropdown\">Virtual bus</code></td></tr>",
                "<tr><td><p>Pass a virtual bus to a modeling construct that requires a nonvirtual\n\t\t\t\t\t\t\t\t\t\t\tbus.</p></td><td><code class=\"guidropdown\">Nonvirtual bus</code></td></tr>",
                "<tr><td><p>Create a copy of an array of buses.</p><p>The block cannot\n\t\t\t\t\t\t\t\t\t\t\tconvert an array of buses to a nonvirtual or virtual bus. To extract a bus\n\t\t\t\t\t\t\t\t\t\t\tfrom an array of buses, use a <span class=\"block\">Selector</span> block.</p></td><td><code class=\"guidropdown\">Signal copy</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">OutDataTypeStr</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'Inherit: auto'</code> (default) | <code class=\"literal\">'Bus: &lt;object name&gt;'</code> | <code class=\"literal\">'&lt;data type expression&gt;'</code></span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">OverrideOpt</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'off'</code> (default) | <code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/signalconversion.html"
    },
    {
        "block_name": "If",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumInputs</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code>\n                                | <code class=\"literal\">'&lt;integer&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">IfExpression</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'u1 &gt; 0'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'&lt;logical expression&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'u1 &gt; 0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ElseIfExpressions</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">''</code> |\n                                    <code class=\"literal\">'&lt;list of logical expressions&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ShowElse</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/if.html"
    },
    {
        "block_name": "If Action Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/ifactionsubsystem.html"
    },
    {
        "block_name": "Switch Case",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">CaseConditions</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'{1}'</code> | <code class=\"literal\">'&lt;list of\n                                    cases&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'{1}'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ShowDefaultCase</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/switchcase.html"
    },
    {
        "block_name": "Switch Case Action Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/switchcaseactionsubsystem.html"
    },
    {
        "block_name": "Enabled Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/enabledsubsystem.html"
    },
    {
        "block_name": "Triggered Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/triggeredsubsystem.html"
    },
    {
        "block_name": "Enabled and Triggered Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/enabledandtriggeredsubsystem.html"
    },
    {
        "block_name": "Message Triggered Subsystem",
        "libraries": [
            "Simulink/Messages & Events"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/messagetriggeredsubsystem.html"
    },
    {
        "block_name": "Function-Call Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/functioncallsubsystem.html"
    },
    {
        "block_name": "Enable",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">StatesWhenEnabling</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'held'</code> | <code class=\"literal\">'reset'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'held'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">PropagateVarSize</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Only when enabling'</code> | <code class=\"literal\">'During\n                                    execution'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Only when enabling'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">ShowOutputPort</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">PortDimensions</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'1'</code> | <code class=\"literal\">'[n]'</code> | <code class=\"literal\">'[m\n                                    n]'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'-1'</code> | <code class=\"literal\">'Ts'</code>| <code class=\"literal\">'[Ts,\n                                    To]'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">OutMin</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'[]'</code> | <code class=\"literal\">'&lt;real\n                                scalar&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'[]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">OutMax</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'[]'</code> | <code class=\"literal\">'&lt;real\n                                scalar&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'[]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'double'</code> | <code class=\"literal\">'single'</code> |\n                                    <code class=\"literal\">'int8'</code> | <code class=\"literal\">'uint8'</code> |\n                                    <code class=\"literal\">'int16'</code> | <code class=\"literal\">'uint16'</code> |\n                                    <code class=\"literal\">'int32'</code> | <code class=\"literal\">'uint32'</code> |\n                                    <code class=\"literal\">'int64'</code> | <code class=\"literal\">'uint64'</code> |\n                                    <code class=\"literal\">'boolean'</code> |\n                                    <code class=\"literal\">'&lt;fixdt(1,16)'</code> |\n                                    <code class=\"literal\">'fixdt(1,16,0)'</code> |\n                                    <code class=\"literal\">'fixdt(1,16,2^0,0)'</code> | <code class=\"literal\">'&lt;data type\n                                    expression&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'double'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block parameter:</strong>\n<code class=\"literal\">Interpolate</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/enable.html"
    },
    {
        "block_name": "Trigger",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TriggerType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n                                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'rising'</code> | <code class=\"literal\">'falling'</code> |\n                                        <code class=\"literal\">'either'</code> |\n                                        <code class=\"literal\">'function-call'</code> |\n                                        <code class=\"literal\">'message'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'rising'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/trigger.html"
    },
    {
        "block_name": "Function-Call Generator",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">sample_time</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code>\n                                | scalar expression | vector expression |\n                                <code class=\"literal\">'-1'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">numberOfIterations</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code>\n                                | <code class=\"literal\">'&lt;integer&gt;'</code><code class=\"literal\">'&lt;vector of\n                                    integers&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">DisallowWideOutput</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ShowEnablePort</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/functioncallgenerator.html"
    },
    {
        "block_name": "Function-Call Split",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">IconShape</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'distinctive'</code> |\n                                <code class=\"literal\">'round'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'distinctive'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumOutputPorts</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'2'</code>\n                                | <code class=\"literal\">'&lt;integer&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'2'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">OutputPortLayout</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'default'</code> |\n                                <code class=\"literal\">'reverse'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'default'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/functioncallsplit.html"
    },
    {
        "block_name": "Trigger",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TriggerType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n                                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'rising'</code> | <code class=\"literal\">'falling'</code> |\n                                        <code class=\"literal\">'either'</code> |\n                                        <code class=\"literal\">'function-call'</code> |\n                                        <code class=\"literal\">'message'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'rising'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/trigger.html"
    },
    {
        "block_name": "Function-Call Feedback Latch",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/functioncallfeedbacklatch.html"
    },
    {
        "block_name": "Resettable Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/resettablesubsystem.html"
    },
    {
        "block_name": "While Iterator Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/whileiteratorsubsystem.html"
    },
    {
        "block_name": "For Iterator Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/foriteratorsubsystem.html"
    },
    {
        "block_name": "Neighborhood Processing Subsystem",
        "libraries": [
            "Simulink/Matrix Operations"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/neighborhoodprocessingsubsystem.html"
    },
    {
        "block_name": "For Each Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/foreachsubsystem.html"
    },
    {
        "block_name": "Pixel Processing Subsystem",
        "libraries": [
            "Simulink/Matrix Operations"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/pixelprocessingsubsystem.html"
    },
    {
        "block_name": "Array Processing Subsystem",
        "libraries": [
            "Simulink/Matrix Operations"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/arrayprocessingsubsystem.html"
    },
    {
        "block_name": "Simulink Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/simulinkfunction.html"
    },
    {
        "block_name": "MATLAB Function",
        "libraries": [
            "Simulink/User-Defined Functions",
            "HDL Coder/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">\"FromPortIcon\"</code> (default) | <code class=\"literal\">\"none\"</code> | <code class=\"literal\">\"FromPortBlockName\"</code> | <code class=\"literal\">\"SignalName\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/matlabfunction.html"
    },
    {
        "block_name": "Function Caller",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FunctionPrototype</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'y=f(u)'</code> | <code class=\"literal\">'&lt;function\n                                    prototype&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'y=f(u)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InputArgumentSpecifications</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">''</code> | <code class=\"literal\">'&lt;MATLAB\n                                    expression&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutputArgumentSpecifications</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">''</code> | <code class=\"literal\">'&lt;MATLAB\n                                    expression&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'-1'</code>\n                                | <em class=\"replaceable\"><code>sample time</code></em>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'-1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AsynchronousCaller</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/functioncaller.html"
    },
    {
        "block_name": "Inport",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Ports & Subsystems",
            "Simulink/Sources",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sources"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/inport.html"
    },
    {
        "block_name": "Outport",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Ports & Subsystems",
            "Simulink/Sinks",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sinks"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/outport.html"
    },
    {
        "block_name": "Function Element",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">PortName</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'server'</code> (default) | port name in quotes</span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">BackgroundColor</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'black'</code> (default) | <code class=\"literal\">'white</code> | <code class=\"literal\">'red'</code> | <code class=\"literal\">'green'</code> | <code class=\"literal\">'blue'</code> | <code class=\"literal\">'cyan'</code> | <code class=\"literal\">'magenta'</code> | <code class=\"literal\">'yellow'</code> | <code class=\"literal\">'gray'</code> | <code class=\"literal\">'lightBlue'</code> | <code class=\"literal\">'orange'</code> | <code class=\"literal\">'darkGreen'</code> | <code class=\"literal\">'[r,g,b]'</code> where <code class=\"literal\">r</code>,\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">g</code>, and <code class=\"literal\">b</code>, are the red,\n\t\t\t\t\t\t\t\t\tgreen, blue values of the color in the range 0.0 to 1.0</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/functionelement.html"
    },
    {
        "block_name": "Reinitialize Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/reinitializefunction.html"
    },
    {
        "block_name": "Initialize Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/initializefunction.html"
    },
    {
        "block_name": "Terminate Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/terminatefunction.html"
    },
    {
        "block_name": "Function Element Call",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">PortName</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'client'</code> (default) | port name in quotes</span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">BackgroundColor</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'black'</code> (default) | <code class=\"literal\">'white</code> | <code class=\"literal\">'red'</code> | <code class=\"literal\">'green'</code> | <code class=\"literal\">'blue'</code> | <code class=\"literal\">'cyan'</code> | <code class=\"literal\">'magenta'</code> | <code class=\"literal\">'yellow'</code> | <code class=\"literal\">'gray'</code> | <code class=\"literal\">'lightBlue'</code> | <code class=\"literal\">'orange'</code> | <code class=\"literal\">'darkGreen'</code> | <code class=\"literal\">'[r,g,b]'</code> where <code class=\"literal\">r</code>,\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">g</code>, and <code class=\"literal\">b</code>, are the red,\n\t\t\t\t\t\t\t\t\tgreen, blue values of the color in the range 0.0 to 1.0</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/functionelementcall.html"
    },
    {
        "block_name": "Reset Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/resetfunction.html"
    },
    {
        "block_name": "State Writer",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">StateOwnerBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">''</code> | <code class=\"literal\">'&lt;model path/block\n                                    name&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">''</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/statewriter.html"
    },
    {
        "block_name": "Parameter Writer",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">IsParameterValidationOn</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'on'</code> (default) | <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Destination</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'Block parameter'</code> (default) | <code class=\"literal\">'Model workspace variable'</code> | <code class=\"literal\">'Base workspace variable'</code></span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">WorkspaceVariableName</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">''</code> (default) | character vector | string scalar</span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ParameterOwnerBlock</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">''</code> (default) | character vector | string scalar</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/parameterwriter.html"
    },
    {
        "block_name": "State Reader",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">StateOwnerBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">''</code> | <code class=\"literal\">'&lt;model path/block\n                                    name&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">''</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/statereader.html"
    },
    {
        "block_name": "Data Store Read",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                        <code class=\"literal\">DataStoreName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string | character\n                                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: data store\n                                    name</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                        <code class=\"literal\">'A'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/datastoreread.html"
    },
    {
        "block_name": "Data Store Write",
        "libraries": [
            "Simulink/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                        <code class=\"literal\">DataStoreName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string | character\n                                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: data store\n                                    name</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                        <code class=\"literal\">'A'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/datastorewrite.html"
    },
    {
        "block_name": "Send",
        "libraries": [
            "Simulink/Messages & Events",
            "SimEvents",
            "Simulink/Messages & Events",
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ShowEnablePort</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/send.html"
    },
    {
        "block_name": "Hit Crossing Probe",
        "libraries": [
            "Simulink/Discontinuities",
            "Simulink/Messages & Events",
            "HDL Coder/Discontinuities",
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">HitCrossingOffset</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: real values</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">HitCrossingDirection</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'either'</code> | <code class=\"literal\">'rising'</code>\n\t\t\t\t\t\t\t\t\t|<code class=\"literal\">'falling'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'either'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">ShowOutputPort</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">HitCrossingOutputType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Signal'</code> | <code class=\"literal\">'Message'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Function-Call'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Signal'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/hitcrossing.html"
    },
    {
        "block_name": "Queue, Entity Queue",
        "libraries": [
            "Simulink/Messages & Events",
            "SimEvents",
            "Simulink/Messages & Events",
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">QueueOverwriting</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code> (for Simulink) and <code class=\"literal\">'off'</code> (for SimEvents)</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Capacity</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'25'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'25'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">QueueType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'FIFO'</code> | <code class=\"literal\">'LIFO'</code> |\n                                    <code class=\"literal\">'Priority'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'FIFO'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">MulticastTag</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'A'</code>\n                                | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'A'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">PrioritySource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'PriorityAttribute'</code> | character\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'PriorityAttribute'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SortingDirection</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Ascending'</code> | <code class=\"literal\">'Descending'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Ascending'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntityArrivalSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Input\n                                    port'</code> | <code class=\"literal\">'Multicast'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Input\n                                    port'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntryAction, ExitAction,\n                                BlockedAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB code </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesDeparted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesInBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AverageWait</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AverageQueueLength</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumEntitiesExtracted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/queue.html"
    },
    {
        "block_name": "Message Merge",
        "libraries": [
            "Simulink/Messages & Events"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                  <code class=\"literal\">NumberInputPorts</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'2'</code> |\n                scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'2'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/messagemerge.html"
    },
    {
        "block_name": "Receive",
        "libraries": [
            "Simulink/Messages & Events",
            "SimEvents",
            "Simulink/Messages & Events",
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">UseInternalQueue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">QueueOverwriting</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code> (for Simulink) and <code class=\"literal\">'off'</code> (for SimEvents)</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">QueueLength</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'16'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'16'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">QueueType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'FIFO'</code> | <code class=\"literal\">'LIFO'</code> |\n                                    <code class=\"literal\">'Priority'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'FIFO'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">PriorityOrder</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Ascending'</code> | <code class=\"literal\">'Descending'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Ascending'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ShowQueueStatus</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">InitialValue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'[]'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'[]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ValueSourceWhenQueueIsEmpty</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Hold last\n                                    value'</code> | <code class=\"literal\">'Use initial value'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Hold last\n                                    value'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'-1'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'-1'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/receive.html"
    },
    {
        "block_name": "Sequence Viewer",
        "libraries": [
            "Simulink/Messages & Events",
            "Simulink Test",
            "SimEvents",
            "Stateflow"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">VariableStepTimePrecision</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string scalar or\n                                character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">\"3\"</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">\"3\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">History</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string scalar or\n                                character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">\"1000\"</code> | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">\"1000\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/sequenceviewer.html"
    },
    {
        "block_name": "Message Triggered Subsystem",
        "libraries": [
            "Simulink/Messages & Events"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/messagetriggeredsubsystem.html"
    },
    {
        "block_name": "Function-Call Split",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">IconShape</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'distinctive'</code> |\n                                <code class=\"literal\">'round'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'distinctive'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumOutputPorts</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'2'</code>\n                                | <code class=\"literal\">'&lt;integer&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'2'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">OutputPortLayout</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'default'</code> |\n                                <code class=\"literal\">'reverse'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'default'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/functioncallsplit.html"
    },
    {
        "block_name": "Function-Call Subsystem",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/functioncallsubsystem.html"
    },
    {
        "block_name": "Trigger",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TriggerType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n                                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'rising'</code> | <code class=\"literal\">'falling'</code> |\n                                        <code class=\"literal\">'either'</code> |\n                                        <code class=\"literal\">'function-call'</code> |\n                                        <code class=\"literal\">'message'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'rising'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/trigger.html"
    },
    {
        "block_name": "Function-Call Feedback Latch",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/functioncallfeedbacklatch.html"
    },
    {
        "block_name": "Function-Call Generator",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">sample_time</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code>\n                                | scalar expression | vector expression |\n                                <code class=\"literal\">'-1'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">numberOfIterations</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code>\n                                | <code class=\"literal\">'&lt;integer&gt;'</code><code class=\"literal\">'&lt;vector of\n                                    integers&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">DisallowWideOutput</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ShowEnablePort</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/functioncallgenerator.html"
    },
    {
        "block_name": "Inport",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Ports & Subsystems",
            "Simulink/Sources",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sources"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/inport.html"
    },
    {
        "block_name": "Subsystem",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems",
            "Simulink/Messages & Events",
            "Simulink/Messages & Events",
            "Simulink/Ports & Subsystems",
            "Simulink/Matrix Operations"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/subsystem.html"
    },
    {
        "block_name": "1-D Lookup Table",
        "libraries": [
            "Simulink/Lookup Tables",
            "HDL Coder/Lookup Tables"
        ],
        "parameters": [
            [
                "<tr><th>To specify...</th><th>Do this...</th></tr>",
                "<tr><td>\n<p>1, 2, 3, or 4</p>\n</td><td>\n<p>Select the value from the drop-down list.</p>\n</td></tr>",
                "<tr><td>\n<p>A higher number of table dimensions</p>\n</td><td>\n<p>Enter a positive integer directly in the\n                                                field.</p>\n<p>The maximum number of table dimensions that this\n                                                block supports is 30.</p>\n</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/1dlookuptable.html"
    },
    {
        "block_name": "2-D Lookup Table",
        "libraries": [
            "Simulink/Lookup Tables",
            "HDL Coder/Lookup Tables"
        ],
        "parameters": [
            [
                "<tr><th>To specify...</th><th>Do this...</th></tr>",
                "<tr><td>\n<p>1, 2, 3, or 4</p>\n</td><td>\n<p>Select the value from the drop-down list.</p>\n</td></tr>",
                "<tr><td>\n<p>A higher number of table dimensions</p>\n</td><td>\n<p>Enter a positive integer directly in the\n                                                field.</p>\n<p>The maximum number of table dimensions that this\n                                                block supports is 30.</p>\n</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/2dlookuptable.html"
    },
    {
        "block_name": "Lookup Table Dynamic",
        "libraries": [
            "Simulink/Lookup Tables"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LookUpMeth</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Interpolation-Extrapolation' | 'Interpolation-Use End\n\t\t\t\t\t\t\t\t\t\tValues' | 'Use Input Nearest' | 'Use Input Below' | 'Use\n\t\t\t\t\t\t\t\t\t\tInput Above'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Interpolation-Use End Values'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/lookuptabledynamic.html"
    },
    {
        "block_name": "Interpolation Using Prelookup",
        "libraries": [
            "Simulink/Lookup Tables"
        ],
        "parameters": [
            [
                "<tr><th>To specify...</th><th>Do this...</th></tr>",
                "<tr><td>\n<p>1, 2, 3, or 4</p>\n</td><td>\n<p>Select the value from the drop-down list.</p>\n</td></tr>",
                "<tr><td>\n<p>A higher number of table dimensions</p>\n</td><td>\n<p>Enter a positive integer directly in the\n\t\t\t\t\t\t\t\t\t\t\t\tfield.</p>\n<p>The maximum number of table dimensions that this\n\t\t\t\t\t\t\t\t\t\t\t\tblock supports is 30.</p>\n</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/interpolationusingprelookup.html"
    },
    {
        "block_name": "Direct Lookup Table (n-D)",
        "libraries": [
            "Simulink/Lookup Tables",
            "HDL Coder/Lookup Tables"
        ],
        "parameters": [
            [
                "<tr><th>To specify...</th><th>Do this...</th></tr>",
                "<tr><td>\n<p>1, 2, 3, or 4</p>\n</td><td>\n<p>Select the value from the drop-down list.</p>\n</td></tr>",
                "<tr><td>\n<p>A higher number of table dimensions</p>\n</td><td>\n<p>Enter a positive integer directly in the\n\t\t\t\t\t\t\t\t\t\t\t\tfield.</p>\n<p>The maximum number of table dimensions that this\n\t\t\t\t\t\t\t\t\t\t\t\tblock supports is 30.</p>\n</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/directlookuptablend.html"
    },
    {
        "block_name": "n-D Lookup Table",
        "libraries": [
            "Simulink/Lookup Tables",
            "HDL Coder/Lookup Tables"
        ],
        "parameters": [
            [
                "<tr><th>Value</th><th>Setting</th></tr>",
                "<tr><td><p>1, 2, 3, or 4</p></td><td><p>Select the value from the drop-down\n\t\t\t\t\t\t\t\t\t\t\t\tlist.</p></td></tr>",
                "<tr><td><p>A higher number of table\n\t\t\t\t\t\t\t\t\t\t\tdimensions</p></td><td><p>Enter a positive integer directly in the\n\t\t\t\t\t\t\t\t\t\t\t\tfield.</p><p>The maximum number of table\n\t\t\t\t\t\t\t\t\t\t\t\tdimensions that this block supports is\n\t\t\t\t\t\t\t\t\t\t\t30.</p></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/ndlookuptable.html"
    },
    {
        "block_name": "Sine, Cosine",
        "libraries": [
            "Simulink/Lookup Tables"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Formula</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'sin(2*pi*u)' | 'cos(2*pi*u)' | 'exp(j*2*pi*u)' |\n                                    'sin(2*pi*u) and cos(2*pi*u)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">NumDataPoints</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">integer &gt;= 2</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'(2^5)+1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutputWordLength</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">integer from 2 to 53</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'16'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InternalRulePriority</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Speed' | 'Precision'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Speed'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/sine.html"
    },
    {
        "block_name": "Prelookup",
        "libraries": [
            "Simulink/Lookup Tables",
            "HDL Coder/Lookup Tables"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">BreakpointsSpecification</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n                                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Explicit values' | 'Even spacing' | 'Breakpoint\n                                        object'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Explicit values'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/prelookup.html"
    },
    {
        "block_name": "Signal Specification",
        "libraries": [
            "Simulink/Signal Attributes",
            "HDL Coder/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">OutMin</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[\n\t\t\t\t\t\t\t\t\t]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">OutMax</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[\n\t\t\t\t\t\t\t\t\t]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'Inherit: auto' | 'double' | 'single' | 'half' | 'int8' |\n\t\t\t\t\t\t\t\t\t'uint8' | 'int16' | 'uint16' | 'int32' | 'uint32' | 'int64' |\n\t\t\t\t\t\t\t\t\t'uint64' | 'boolean' | 'fixdt(1,16,0)' | 'fixdt(1,16,2^0,0)' |\n\t\t\t\t\t\t\t\t\t'string' | 'Enum: &lt;class name&gt;' | 'Bus: &lt;object\n\t\t\t\t\t\t\t\t\tname&gt;' | 'ValueType: &lt;object name&gt;' | &lt;data type\n\t\t\t\t\t\t\t\t\texpression&gt; | Simulink.ImageType(480,640,3)</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Inherit: auto'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t<code class=\"literal\">LockScale</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off'</code> |\n\t\t\t\t\t\t<code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">BusOutputAsStruct</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Unit</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'inherit'</code> | <code class=\"literal\">'&lt;Enter unit&gt;'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'inherit'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Dimensions</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'-1'</code> | <code class=\"literal\">n</code> | <code class=\"literal\">[m\n\t\t\t\t\t\t\t\t\tn]</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-1'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VarSizeSig</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Inherit'</code> | <code class=\"literal\">'No'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Yes'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Inherit'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">SampleTime</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> Any valid sample time </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-1'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">SignalType</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'auto'</code> | <code class=\"literal\">'real'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'complex'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'auto'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/signalspecification.html"
    },
    {
        "block_name": "IC",
        "libraries": [
            "Simulink/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Value</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector |\n\t\t\t\t\t\t\t\tmatrix | N-D array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/ic.html"
    },
    {
        "block_name": "Signal Editor",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Filename</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:  character\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'untitled.mat'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ActiveScenario</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector |\n                                numeric</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: character vector |\n                                index value</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Scenario'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ActiveSignal</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector |\n                                numeric</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: character vector |\n                                index vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Signal\n                                    1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ApplySigPropsToAllScenarios</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ApplySigPropsToAllSignals</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">IsBus</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">OutputBusObjectStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: bus object\n                                name</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Bus:\n                                    BusObject'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Unit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'inherit'</code> | supported physical unit</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'inherit'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal remove_text_wrapping\">-1</code> |\n                                sample time in seconds</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Interpolate</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><th>Setting for Form Output After Final Data Value By</th><th>Setting for Interpolate Data</th><th>Block Output After Final Data</th></tr>",
                "<tr><td rowspan=\"2\">\n<p><strong class=\"emphasis bold\">Extrapolation</strong></p>\n</td><td>\n<p>On</p>\n</td><td>\n<p>Extrapolated from final data value</p>\n</td></tr>",
                "<tr><td>\n<p>Off</p>\n</td><td>\n<p>Error</p>\n</td></tr>",
                "<tr><td rowspan=\"2\">\n<p><strong class=\"emphasis bold\">Setting to\n                                            zero</strong></p>\n</td><td>\n<p>On</p>\n</td><td>\n<p>Zero</p>\n</td></tr>",
                "<tr><td>\n<p>Off</p>\n</td><td>\n<p>Zero</p>\n</td></tr>",
                "<tr><td rowspan=\"2\">\n<p><strong class=\"emphasis bold\">Holding final\n                                            value</strong></p>\n</td><td>\n<p>On</p>\n</td><td>\n<p>Final value from workspace</p>\n</td></tr>",
                "<tr><td>\n<p>Off</p>\n</td><td>\n<p>Final value from workspace</p>\n</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/signaleditorblock.html"
    },
    {
        "block_name": "Weighted Sample Time",
        "libraries": [
            "Simulink/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TsamMathOp</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'+' | '-' | '*' | '/' | 'Ts Only' | '1/Ts\n\t\t\t\t\t\t\t\t\t\tOnly'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Ts Only'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/weightedsampletime.html"
    },
    {
        "block_name": "Rate Transition",
        "libraries": [
            "Simulink/Signal Attributes",
            "HDL Coder/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Integrity</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Deterministic</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InitialCondition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> finite scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutPortSampleTimeOpt</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Specify' | 'Inherit' | 'Multiple of input port sample\n                time'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Specify'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutPortSampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar | vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutPortSampleTimeMultiple</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/ratetransition.html"
    },
    {
        "block_name": "Probe",
        "libraries": [
            "Simulink/Signal Attributes",
            "HDL Coder/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ProbeWidth</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/probe.html"
    },
    {
        "block_name": "Width",
        "libraries": [
            "Simulink/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutputDataTypeScalingMode</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Choose intrinsic data type' | 'Inherit via back\n\t\t\t\t\t\t\t\t\tpropagation' | 'All ports same datatype'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Choose intrinsic data type'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DataType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'double' | 'single' | 'int8' | 'uint8' | 'int16' | 'uint16'\n\t\t\t\t\t\t\t\t\t| 'int32' | 'uint32'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'double'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">AlwaysUseConstantSampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/width.html"
    },
    {
        "block_name": "Signal Conversion",
        "libraries": [
            "Simulink/Signal Attributes",
            "HDL Coder/Signal Attributes",
            "Simulink/Quick Insert/Signal Attributes",
            "Simulink/Quick Insert/Signal Attributes",
            "Simulink/Quick Insert/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><th>Modeling Goal</th><th>Option</th></tr>",
                "<tr><td><p>Reduce generated code for a muxed signal. </p><p>For an example\n\t\t\t\t\t\t\t\t\t\t\tinvolving <span class=\"entity\">Simulink\n            Coder\u2122</span> software, see <a class=\"a\" href=\"../../rtw/ug/generate-reentrant-code-from-subsystems-0c8c534ae90b.html\">Generate Reentrant Code from Subsystems</a><span role=\"cross_prod\"> (Simulink Coder)</span>.</p></td><td><code class=\"guidropdown\">Signal copy</code></td></tr>",
                "<tr><td><p>Connect a block with a constant sample time to an output port of an\n\t\t\t\t\t\t\t\t\t\t\tenabled subsystem.</p></td><td><code class=\"guidropdown\">Signal copy</code></td></tr>",
                "<tr><td><p>Save memory by converting a nonvirtual bus to a virtual\n\t\t\t\t\t\t\t\t\t\tbus.</p></td><td><code class=\"guidropdown\">Virtual bus</code></td></tr>",
                "<tr><td><p>Pass a virtual bus to a modeling construct that requires a nonvirtual\n\t\t\t\t\t\t\t\t\t\t\tbus.</p></td><td><code class=\"guidropdown\">Nonvirtual bus</code></td></tr>",
                "<tr><td><p>Create a copy of an array of buses.</p><p>The block cannot\n\t\t\t\t\t\t\t\t\t\t\tconvert an array of buses to a nonvirtual or virtual bus. To extract a bus\n\t\t\t\t\t\t\t\t\t\t\tfrom an array of buses, use a <span class=\"block\">Selector</span> block.</p></td><td><code class=\"guidropdown\">Signal copy</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">OutDataTypeStr</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'Inherit: auto'</code> (default) | <code class=\"literal\">'Bus: &lt;object name&gt;'</code> | <code class=\"literal\">'&lt;data type expression&gt;'</code></span></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">OverrideOpt</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'off'</code> (default) | <code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/signalconversion.html"
    },
    {
        "block_name": "Bus to Vector",
        "libraries": [
            "Simulink/Signal Attributes",
            "HDL Coder/Signal Attributes"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/bustovector.html"
    },
    {
        "block_name": "Inport",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Ports & Subsystems",
            "Simulink/Sources",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sources"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/inport.html"
    },
    {
        "block_name": "Outport",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Ports & Subsystems",
            "Simulink/Sinks",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sinks"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/outport.html"
    },
    {
        "block_name": "Signal Specification",
        "libraries": [
            "Simulink/Signal Attributes",
            "HDL Coder/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">OutMin</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[\n\t\t\t\t\t\t\t\t\t]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">OutMax</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[\n\t\t\t\t\t\t\t\t\t]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'Inherit: auto' | 'double' | 'single' | 'half' | 'int8' |\n\t\t\t\t\t\t\t\t\t'uint8' | 'int16' | 'uint16' | 'int32' | 'uint32' | 'int64' |\n\t\t\t\t\t\t\t\t\t'uint64' | 'boolean' | 'fixdt(1,16,0)' | 'fixdt(1,16,2^0,0)' |\n\t\t\t\t\t\t\t\t\t'string' | 'Enum: &lt;class name&gt;' | 'Bus: &lt;object\n\t\t\t\t\t\t\t\t\tname&gt;' | 'ValueType: &lt;object name&gt;' | &lt;data type\n\t\t\t\t\t\t\t\t\texpression&gt; | Simulink.ImageType(480,640,3)</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Inherit: auto'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t<code class=\"literal\">LockScale</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off'</code> |\n\t\t\t\t\t\t<code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">BusOutputAsStruct</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Unit</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'inherit'</code> | <code class=\"literal\">'&lt;Enter unit&gt;'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'inherit'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Dimensions</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'-1'</code> | <code class=\"literal\">n</code> | <code class=\"literal\">[m\n\t\t\t\t\t\t\t\t\tn]</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-1'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VarSizeSig</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Inherit'</code> | <code class=\"literal\">'No'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Yes'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Inherit'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">SampleTime</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> Any valid sample time </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-1'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">SignalType</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'auto'</code> | <code class=\"literal\">'real'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'complex'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'auto'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/signalspecification.html"
    },
    {
        "block_name": "Unit System Configuration",
        "libraries": [
            "Simulink/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">UnitSystems</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> cell array of character\n\t\t\t\t\t\t\t\tvectors</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> cell array of the following\n\t\t\t\t\t\t\t\tcharacter vectors: <code class=\"literal\">'SI'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'English'</code> | <code class=\"literal\">'SI\n\t\t\t\t\t\t\t\t\t(extended)'</code> | <code class=\"literal\">'CGS'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">{'SI', 'English', 'SI (extended)', 'CGS'}</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">AllowAllUnitSystems</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on' | 'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/unitsystemconfiguration.html"
    },
    {
        "block_name": "Unit Conversion",
        "libraries": [
            "Simulink/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Inherit via internal rule' | 'Inherit via back\n\t\t\t\t\t\t\t\t\tpropagation'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Inherit via internal rule'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/unitconversion.html"
    },
    {
        "block_name": "Data Type Conversion Inherited",
        "libraries": [
            "Simulink/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ConvertRealWorld</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Real World Value (RWV)' | 'Stored Integer\n\t\t\t\t\t\t\t\t(SI)'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Real World Value (RWV)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">RndMeth</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n                                                  character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Ceiling' | 'Convergent' | 'Floor' |\n                                                  'Nearest' | 'Round' | 'Simplest' |\n                                                  'Zero'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Floor'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DoSatur</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/datatypeconversioninherited.html"
    },
    {
        "block_name": "Block Support Table",
        "libraries": [
            "Simulink/Model-Wide Utilities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/blocksupporttable.html"
    },
    {
        "block_name": "Data Type Duplicate",
        "libraries": [
            "Simulink/Signal Attributes",
            "HDL Coder/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">NumInputPorts</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> real-valued positive\n\t\t\t\t\t\t\t\tinteger</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'2'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/datatypeduplicate.html"
    },
    {
        "block_name": "Data Type Conversion",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Signal Attributes",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/HDL Floating Point Operations",
            "HDL Coder/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                    <code class=\"literal\">OutMin</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'[ ]'</code>|\n                    scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[ ]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                    <code class=\"literal\">OutMax</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'[ ]'</code>|\n                    scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'[ ]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Inherit: Inherit via back propagation'</code> |\n                        <code class=\"literal\">'double'</code> | <code class=\"literal\">'single'</code> |\n                        <code class=\"literal\">'half'</code> | <code class=\"literal\">'int8'</code> |\n                        <code class=\"literal\">'uint8'</code> | <code class=\"literal\">'int16'</code> |\n                        <code class=\"literal\">'uint16'</code> | <code class=\"literal\">'int32'</code> |\n                        <code class=\"literal\">'uint32'</code> | <code class=\"literal\">'int64'</code> |\n                        <code class=\"literal\">'uint64'</code> | <code class=\"literal\">'fixdt(1,16)'</code> |\n                        <code class=\"literal\">'fixdt(1,16,0)'</code> | <code class=\"literal\">'fixdt(1,16,2^0,0)'</code>\n                    | <code class=\"literal\">'Enum: &lt;class name&gt;'</code><code class=\"literal\">'&lt;data type\n                        expression&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Inherit: Inherit via back propagation'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LockScale</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ConvertRealWorld</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Real World Value (RWV)' | 'Stored Integer\n\t\t\t\t\t\t\t\t(SI)'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Real World Value (RWV)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                                  <code class=\"literal\">RndMeth</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character\n                                                  vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                                  <code class=\"literal\">'Ceiling'</code> |\n                                                  <code class=\"literal\">'Convergent'</code> |\n                                                  <code class=\"literal\">'Floor'</code> |\n                                                  <code class=\"literal\">'Nearest'</code> |\n                                                  <code class=\"literal\">'Round'</code> |\n                                                  <code class=\"literal\">'Simplest'</code> |\n                                                  <code class=\"literal\">'Zero'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                                  <code class=\"literal\">'Floor'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">SaturateOnIntegerOverflow</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'off' | 'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/datatypeconversion.html"
    },
    {
        "block_name": "Data Type Propagation",
        "libraries": [
            "Simulink/Signal Attributes",
            "HDL Coder/Signal Attributes"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">PropDataTypeMode</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n\t\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Specify via dialog' | 'Inherit via propagation\n\t\t\t\t\t\t\t\t\t\trule'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Inherit via propagation rule'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/datatypepropagation.html"
    },
    {
        "block_name": "Compose String",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Format</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'&lt;filename&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'\"%d %f\"'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'string'</code> | <em class=\"replaceable\"><code>&lt;data type\n                                    expression&gt;</code></em></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'string'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/composestring.html"
    },
    {
        "block_name": "Data Type Scaling Strip",
        "libraries": [
            "Simulink/Signal Attributes"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/datatypescalingstrip.html"
    },
    {
        "block_name": "ASCII to String",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/asciitostring.html"
    },
    {
        "block_name": "Scan String",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Format</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'&lt;filename&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'\"%d %f\"'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/scanstring.html"
    },
    {
        "block_name": "String Compare",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">CaseSensitive</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">CompareOption</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Entire string'</code> | <code class=\"literal\">'First N\n                                    characters'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Entire string'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">CompareOption</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringcompare.html"
    },
    {
        "block_name": "String Contains",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                  <code class=\"literal\">CaseSensitive</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                <code class=\"literal\">Function</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Contains'</code> | <code class=\"literal\">'Starts with'</code> | <code class=\"literal\">'Ends\n                  with'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Contains'</code> for\n                  <span class=\"block\">String Contains</span> block, <code class=\"literal\">'Starts with'</code> for\n                  <span class=\"block\">String Starts With</span> block, <code class=\"literal\">'Ends with'</code> for\n                  <span class=\"block\">String Ends With</span> block</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringcontains.html"
    },
    {
        "block_name": "String Count",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                  <code class=\"literal\">CaseSensitive</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Inherit: Inherit via internal rule'</code> | <code class=\"literal\">'Inherit: Inherit\n                  via back propagation'</code> | <code class=\"literal\">'int8'</code> |\n                  <code class=\"literal\">'uint8'</code> | <code class=\"literal\">'int16'</code> |\n                  <code class=\"literal\">'uint16'</code> | <code class=\"literal\">'int32'</code> |\n                  <code class=\"literal\">'uint32'</code> | <em class=\"replaceable\"><code>&lt;data type\n                expression&gt;</code></em></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Inherit: Inherit via internal rule'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringcount.html"
    },
    {
        "block_name": "String Concatenate",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Inputs</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar from\n                                    <code class=\"literal\">2</code> to <code class=\"literal\">512</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'2'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'string'</code> | <em class=\"replaceable\"><code>&lt;data type\n                                    expression&gt;</code></em></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'string'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringconcatenate.html"
    },
    {
        "block_name": "String Find",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Inherit: Inherit via internal rule'</code> |\n                                    <code class=\"literal\">'Inherit: Inherit via back propagation'</code> |\n                                    <code class=\"literal\">'int8'</code> | <code class=\"literal\">'int16'</code> |\n                                    <code class=\"literal\">'int32'</code> | <em class=\"replaceable\"><code>&lt;data type\n                                    expression&gt;</code></em></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Inherit: Inherit via internal rule'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringfind.html"
    },
    {
        "block_name": "String Constant",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">String</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'\"Hello!\"'</code> | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'\"Hello!\"'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'string'</code> | <em class=\"replaceable\"><code>&lt;data type\n                                    expression&gt;</code></em></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'string'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringconstant.html"
    },
    {
        "block_name": "String Length",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Inherit: Inherit via internal rule'</code> |\n                                    <code class=\"literal\">'Inherit: Inherit via back propagation'</code> |\n                                    <code class=\"literal\">'int8'</code> | <code class=\"literal\">'uint8'</code> |\n                                    <code class=\"literal\">'int16'</code> | <code class=\"literal\">'uint16'</code> |\n                                    <code class=\"literal\">'int32'</code> | <code class=\"literal\">'uint32'</code> |\n                                    <em class=\"replaceable\"><code>&lt;data type expression&gt;</code></em></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Inherit: Inherit via internal rule'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringlength.html"
    },
    {
        "block_name": "String to ASCII",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutputVectorSize</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'31'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringtoascii.html"
    },
    {
        "block_name": "String to Double",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Format</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'&lt;filename&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'\"%lf\"'</code> if the block is <span class=\"block\">String to\n                                    Double</span>, <code class=\"literal\">'\"%f\"'</code> if the block is\n                                    <span class=\"block\">String to Single</span></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringtodouble.html"
    },
    {
        "block_name": "String to Enum",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Enum: SlDemoSign'</code> | <em class=\"replaceable\"><code>&lt;data type\n\t\t\t\t\t\t\t\t\texpression&gt;</code></em></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Enum: SlDemoSign'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringtoenum.html"
    },
    {
        "block_name": "String to Single",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Format</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'&lt;filename&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'\"%f\"'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/stringtosingle.html"
    },
    {
        "block_name": "Substring",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InheritMaximumLength</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'string'</code> | <em class=\"replaceable\"><code>&lt;data type\n\t\t\t\t\t\t\t\t\texpression&gt;</code></em></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'string'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">StringFromIdxToEnd</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/substring.html"
    },
    {
        "block_name": "To String",
        "libraries": [
            "Simulink/String"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/tostring.html"
    },
    {
        "block_name": "Timed-Based Linearization",
        "libraries": [
            "Simulink/Model-Wide Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LinearizationTime</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar | vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar | vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/timedbasedlinearization.html"
    },
    {
        "block_name": "Trigger-Based Linearization",
        "libraries": [
            "Simulink/Model-Wide Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TriggerType</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'rising'</code> | <code class=\"literal\">'falling'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'either'</code> |\n\t\t\t\t\t\t\t\t<code class=\"literal\">'function-call'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'rising'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar | vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/triggerbasedlinearization.html"
    },
    {
        "block_name": "Callback Button",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ButtonType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string or character array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'Momentary'</code> | <code class=\"literal\">'Latch'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/callbackbutton.html"
    },
    {
        "block_name": "Check Discrete Gradient",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">gradient</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> real scalar</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"1\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">icon</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"graphic\"</code> | <code class=\"literal\">\"text\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"graphic\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkdiscretegradient.html"
    },
    {
        "block_name": "Assertion",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"-1\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/assertion.html"
    },
    {
        "block_name": "Check Dynamic Gap",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">icon</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"graphic\"</code> | <code class=\"literal\">\"text\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"graphic\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkdynamicgap.html"
    },
    {
        "block_name": "Check Dynamic Range",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">icon</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"graphic\"</code> | <code class=\"literal\">\"text\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"graphic\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkdynamicrange.html"
    },
    {
        "block_name": "Check Dynamic Upper Bound",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">icon</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"graphic\"</code> | <code class=\"literal\">\"text\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"graphic\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkdynamicupperbound.html"
    },
    {
        "block_name": "Check Input Resolution",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">resolution</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"1\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkinputresolution.html"
    },
    {
        "block_name": "Check Dynamic Lower Bound",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">icon</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"graphic\"</code> | <code class=\"literal\">\"text\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"graphic\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkdynamiclowerbound.html"
    },
    {
        "block_name": "Check Static Gap",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">max</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"0\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">max_included</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">min</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"0\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">min_included</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">icon</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"graphic\"</code> | <code class=\"literal\">\"text\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"graphic\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkstaticgap.html"
    },
    {
        "block_name": "Check Static Lower Bound",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">min</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"0\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">min_included</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar character\n\t\t\t\t\t\t\t\tvector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">icon</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"graphic\"</code> | <code class=\"literal\">\"text\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"graphic\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkstaticlowerbound.html"
    },
    {
        "block_name": "Signal Editor",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Filename</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:  character\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'untitled.mat'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ActiveScenario</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector |\n                                numeric</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: character vector |\n                                index value</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Scenario'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ActiveSignal</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector |\n                                numeric</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: character vector |\n                                index vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Signal\n                                    1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ApplySigPropsToAllScenarios</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ApplySigPropsToAllSignals</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">IsBus</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">OutputBusObjectStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: bus object\n                                name</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Bus:\n                                    BusObject'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Unit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'inherit'</code> | supported physical unit</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'inherit'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal remove_text_wrapping\">-1</code> |\n                                sample time in seconds</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Interpolate</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><th>Setting for Form Output After Final Data Value By</th><th>Setting for Interpolate Data</th><th>Block Output After Final Data</th></tr>",
                "<tr><td rowspan=\"2\">\n<p><strong class=\"emphasis bold\">Extrapolation</strong></p>\n</td><td>\n<p>On</p>\n</td><td>\n<p>Extrapolated from final data value</p>\n</td></tr>",
                "<tr><td>\n<p>Off</p>\n</td><td>\n<p>Error</p>\n</td></tr>",
                "<tr><td rowspan=\"2\">\n<p><strong class=\"emphasis bold\">Setting to\n                                            zero</strong></p>\n</td><td>\n<p>On</p>\n</td><td>\n<p>Zero</p>\n</td></tr>",
                "<tr><td>\n<p>Off</p>\n</td><td>\n<p>Zero</p>\n</td></tr>",
                "<tr><td rowspan=\"2\">\n<p><strong class=\"emphasis bold\">Holding final\n                                            value</strong></p>\n</td><td>\n<p>On</p>\n</td><td>\n<p>Final value from workspace</p>\n</td></tr>",
                "<tr><td>\n<p>Off</p>\n</td><td>\n<p>Final value from workspace</p>\n</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/signaleditorblock.html"
    },
    {
        "block_name": "Check Static Upper Bound",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">max</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"0\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">max_included</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">icon</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"graphic\"</code> | <code class=\"literal\">\"text\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"graphic\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkstaticupperbound.html"
    },
    {
        "block_name": "Check Static Range",
        "libraries": [
            "Simulink/Model Verification",
            "HDL Coder/Model Verification"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">max</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"0\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">min_included</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">min</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"0\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">min_included</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n\t\t\t\t\t\t\t\tvector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">enabled</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">callback</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">stopWhenAssertionFail</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"on\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">export</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"on\"</code> | <code class=\"literal\">\"off\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"off\"</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">icon</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string scalar or character\n                    vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">\"graphic\"</code> | <code class=\"literal\">\"text\"</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">\"graphic\"</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkstaticrange.html"
    },
    {
        "block_name": "Inport",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Ports & Subsystems",
            "Simulink/Sources",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sources"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/inport.html"
    },
    {
        "block_name": "In Bus Element, Bus Element In",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "Simulink/Sources",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sources",
            "Simulink/Signal Routing",
            "HDL Coder/Signal Routing"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">PortName</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'InBus'</code> (default) | port name in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">BackgroundColor</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'black'</code> (default) | <code class=\"literal\">'white</code> | <code class=\"literal\">'red'</code> | <code class=\"literal\">'green'</code> | <code class=\"literal\">'blue'</code> | <code class=\"literal\">'cyan'</code> | <code class=\"literal\">'magenta'</code> | <code class=\"literal\">'yellow'</code> | <code class=\"literal\">'gray'</code> | <code class=\"literal\">'lightBlue'</code> | <code class=\"literal\">'orange'</code> | <code class=\"literal\">'darkGreen'</code> | <code class=\"literal\">'[r,g,b]'</code> where <code class=\"literal\">r</code>, <code class=\"literal\">g</code>, and\n\t\t\t\t\t\t\t<code class=\"literal\">b</code>, are the red, green, blue values of the color in the range 0.0 to\n\t\t\t\t\t\t1.0</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/inbuselement.html"
    },
    {
        "block_name": "From File",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">FileName</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'untitled.mat'</code> (default) | MAT file name | path to MAT file</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">OutDataTypeStr</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'Inherit (auto)'</code> (default) | <code class=\"literal\">'double'</code> | <code class=\"literal\">'single'</code> | <code class=\"literal\">'int8'</code> | <code class=\"literal\">'uint8'</code> | <code class=\"literal\">'int16'</code> | <code class=\"literal\">'uint16'</code> | <code class=\"literal\">'int32'</code> | <code class=\"literal\">'uint32'</code> | <code class=\"literal\">'boolean'</code> | <code class=\"literal\">'fixdt(1,16,0)'</code> | <code class=\"literal\">'fixdt(1,16,2^0,0)'</code> | <code class=\"literal\">'Enum: &lt;class name&gt;'</code> | <code class=\"literal\">'Bus: &lt;object name&gt;'</code> | <code class=\"literal\">'&lt;data type expression&gt;'</code></span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">SampleTime</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'0'</code> (default) | scalar | <code class=\"literal\">1</code>-by-<code class=\"literal\">2</code> vector</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><th>Method</th><th>Description</th><th>Example</th></tr>",
                "<tr><td><code class=\"guidropdown\">Linear extrapolation</code></td><td><p>How the block determines the output value depends on the type of data in the\n\t\t\t\t\t\t\t\t\t\t\tMAT file.</p><div class=\"itemizedlist\"><ul><li><p>For <code class=\"literal\">double</code> data, the\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"block\">From File</span> block linearly\n\t\t\t\t\t\t\t\t\t\t\t\textrapolates the output value using the first two\n\t\t\t\t\t\t\t\t\t\t\t\tsamples.</p></li><li><p>For <code class=\"literal\">Boolean</code> data, the\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"block\">From File</span> block uses the first\n\t\t\t\t\t\t\t\t\t\t\t\tvalue in MAT file data for the output\n\t\t\t\t\t\t\t\t\t\t\t\tvalue.</p></li><li><p>For all other built-in data types, the\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"block\">From File</span> block:</p><div class=\"orderedlist\"><ol style=\"list-style: decimal;\"><li><p>Upcasts the data to\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">double</code>.</p></li><li><p>Linearly extrapolates the output value using\n\t\t\t\t\t\t\t\t\t\t\t\tthe first two samples in the MAT file data.</p></li><li><p>Downcasts the extrapolated data value to the\n\t\t\t\t\t\t\t\t\t\t\t\toriginal data type.</p></li></ol></div></li></ul></div><p>If the MAT file data only contains one\n\t\t\t\t\t\t\t\t\t\t\tsample, the <span class=\"block\">From File</span> block provides that\n\t\t\t\t\t\t\t\t\t\t\tvalue at the output.</p><p>Do not use the\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Linear extrapolation</code>\n\t\t\t\t\t\t\t\t\t\t\toption when the <span class=\"block\">From File</span> block loads\n\t\t\t\t\t\t\t\t\t\t\tenumerated or fixed-point data.</p><p>The\n\t\t\t\t\t\t\t\t\t\t\textrapolation setting is applied to all signals in a\n\t\t\t\t\t\t\t\t\t\t\tbus. If any signal in the bus contains enumerated or\n\t\t\t\t\t\t\t\t\t\t\tfixed-point data, do not use the <code class=\"guidropdown\">Linear\n\t\t\t\t\t\t\t\t\t\t\t\textrapolation</code> option.</p></td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e127467\"><p><img alt=\"Plot that shows the output for a From File block configured to linearly extrapolate the output value for simulation times before the first sample in the loaded data. The block loads data that starts 2 seconds into the simulation.\" height=\"230\" src=\"from_file_linear_first.png\" width=\"268\"/></p></div></div>\n</td></tr>",
                "<tr><td><code class=\"guidropdown\">Hold first value</code></td><td><p>The <span class=\"block\">From File</span> block uses the first\n\t\t\t\t\t\t\t\t\t\t\tdata value in the MAT file as the output\n\t\t\t\t\t\t\t\t\t\tvalue.</p></td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e127483\"><p><img alt=\"Plot that shows the output for a From File block configured to hold the first value in the loaded data for simulation times before the first sample in the loaded data. The block loads data that starts 2 seconds into the simulation.\" height=\"229\" src=\"from_file_hold_first.png\" width=\"279\"/></p></div></div>\n</td></tr>",
                "<tr><td><code class=\"guidropdown\">Ground value</code></td><td><p>The <span class=\"block\">From File</span> block output value\n\t\t\t\t\t\t\t\t\t\t\tdepends on the type of data in the MAT file.</p><div class=\"itemizedlist\"><ul><li><p>Built-in numeric types \u2014\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">0</code></p></li><li><p><code class=\"literal\">Boolean</code> \u2014\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">false</code></p></li><li><p>Fixed-point data types \u2014 Representation for\n\t\t\t\t\t\t\t\t\t\t\t\tvalue of <code class=\"literal\">0</code>, which may not be\n\t\t\t\t\t\t\t\t\t\t\t\texactly <code class=\"literal\">0</code> due to scaling and\n\t\t\t\t\t\t\t\t\t\t\t\tlimited precision.</p></li><li><p>Enumerated data types \u2014 Default value</p></li></ul></div></td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e127518\"><p><img alt=\"Plot that shows the output for a From File block configured to use the ground value as the output value for simulation times before the first sample in the loaded data. The block loads data that starts 2 seconds into the simulation.\" height=\"229\" src=\"from_file_ground_first.png\" width=\"275\"/></p></div></div>\n</td></tr>"
            ],
            [
                "<tr><th>Method</th><th>Description</th><th>Example</th></tr>",
                "<tr><td><code class=\"guidropdown\">Linear interpolation</code></td><td><p>How the block determines the output value depends on the type of data in the\n\t\t\t\t\t\t\t\t\t\t\tMAT file.</p><div class=\"itemizedlist\"><ul><li><p>For <code class=\"literal\">double</code> data, the\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"block\">From File</span> block linearly\n\t\t\t\t\t\t\t\t\t\t\t\tinterpolates the output value using data values\n\t\t\t\t\t\t\t\t\t\t\t\tbefore and after the simulation time that needs an\n\t\t\t\t\t\t\t\t\t\t\t\toutput value.</p></li><li><p>For all other built-in numeric data types, the\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"block\">From File</span> block:</p><div class=\"orderedlist\"><ol style=\"list-style: decimal;\"><li><p>Upcasts the data to\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">double</code>.</p></li><li><p>Linearly interpolates the output value using\n\t\t\t\t\t\t\t\t\t\t\t\tthe MAT file data values before and after the\n\t\t\t\t\t\t\t\t\t\t\t\tsimulation time that needs an output value.</p></li><li><p>Downcasts the extrapolated data value to the\n\t\t\t\t\t\t\t\t\t\t\t\toriginal data type.</p></li></ol></div></li><li><p>For <code class=\"literal\">Boolean</code> data, if the\n\t\t\t\t\t\t\t\t\t\t\t\tsimulation time is between two workspace data\n\t\t\t\t\t\t\t\t\t\t\t\tpoints with different values, the <span class=\"block\">From\n\t\t\t\t\t\t\t\t\t\t\t\tFile</span> block positions the value transition\n\t\t\t\t\t\t\t\t\t\t\t\thalfway between the MAT file data points. For\n\t\t\t\t\t\t\t\t\t\t\t\texample, if the data transitions from\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">true</code> to\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">false</code>, the <span class=\"block\">From\n\t\t\t\t\t\t\t\t\t\t\t\tFile</span> block provides an output value of\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">true</code> for simulation times in\n\t\t\t\t\t\t\t\t\t\t\t\tthe first half of the interval between the MAT\n\t\t\t\t\t\t\t\t\t\t\t\tfile data points and an output value of\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">false</code> for simulation times in\n\t\t\t\t\t\t\t\t\t\t\t\tthe latter half of the interval.</p></li></ul></div><p>If the MAT file data only contains one\n\t\t\t\t\t\t\t\t\t\t\tsample, the <span class=\"block\">From File</span> block provides that\n\t\t\t\t\t\t\t\t\t\t\tvalue at the output.</p><p>Do not use the\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Linear interpolation</code>\n\t\t\t\t\t\t\t\t\t\t\toption when the <span class=\"block\">From File</span> block loads\n\t\t\t\t\t\t\t\t\t\t\tenumerated or fixed-point data.</p><p>The\n\t\t\t\t\t\t\t\t\t\t\tinterpolation setting is applied to all signals in a\n\t\t\t\t\t\t\t\t\t\t\tbus. If any signal in the bus contains enumerated data,\n\t\t\t\t\t\t\t\t\t\t\tdo not use the <code class=\"guidropdown\">Linear\n\t\t\t\t\t\t\t\t\t\t\t\tinterpolation</code> option.</p></td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e127689\"><p><img alt=\"Plot that shows the output for a From File block configured to linearly interpolate the output value for simulation times between the samples in the loaded data.\" height=\"228\" src=\"from_file_lin_interp.png\" width=\"278\"/></p></div></div>\n</td></tr>",
                "<tr><td><code class=\"guidropdown\">Zero order hold</code></td><td><p>The <span class=\"block\">From File</span> block holds each data\n\t\t\t\t\t\t\t\t\t\t\tvalue from one sample to the next. The output value for\n\t\t\t\t\t\t\t\t\t\t\ta simulation time between two samples in the MAT file\n\t\t\t\t\t\t\t\t\t\t\tdata is the value of the sample that precedes the\n\t\t\t\t\t\t\t\t\t\t\tsimulation time.</p></td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e127705\"><p><img alt=\"Plot that shows the output for a From File block configured to use zero-order-hold interpolation for simulation times between the samples in the loaded data.\" height=\"230\" src=\"from_file_zoh_interp.png\" width=\"278\"/></p></div></div>\n</td></tr>"
            ],
            [
                "<tr><th>Method</th><th>Description</th><th>Example</th></tr>",
                "<tr><td><code class=\"guidropdown\">Linear extrapolation</code></td><td><p>How the block determines the output value depends on the type of data in the\n\t\t\t\t\t\t\t\t\t\t\tMAT file.</p><div class=\"itemizedlist\"><ul><li><p>For <code class=\"literal\">double</code> data, the\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"block\">From File</span> block linearly\n\t\t\t\t\t\t\t\t\t\t\t\textrapolates the output value using the last two\n\t\t\t\t\t\t\t\t\t\t\t\tsamples in the MAT file.</p></li><li><p>For <code class=\"literal\">Boolean</code> data, the\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"block\">From File</span> block uses the sample\n\t\t\t\t\t\t\t\t\t\t\t\tvalue in MAT file for the output value.</p></li><li><p>For all other built-in data types, the\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"block\">From File</span> block:</p><div class=\"orderedlist\"><ol style=\"list-style: decimal;\"><li><p>Upcasts the data to\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">double</code>.</p></li><li><p>Linearly extrapolates the output value using\n\t\t\t\t\t\t\t\t\t\t\t\tthe last two samples in the MAT file data.</p></li><li><p>Downcasts the extrapolated data value to the\n\t\t\t\t\t\t\t\t\t\t\t\toriginal data type.</p></li></ol></div></li></ul></div><p>If the MAT file data only contains one\n\t\t\t\t\t\t\t\t\t\t\tsample, the <span class=\"block\">From File</span> block uses that\n\t\t\t\t\t\t\t\t\t\t\tvalue as the output.</p><p>Do not use the\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Linear extrapolation</code>\n\t\t\t\t\t\t\t\t\t\t\toption when the <span class=\"block\">From File</span> block loads\n\t\t\t\t\t\t\t\t\t\t\tenumerated or fixed-point data.</p><p>The\n\t\t\t\t\t\t\t\t\t\t\textrapolation setting is applied to all signals in a\n\t\t\t\t\t\t\t\t\t\t\tbus. If any signal in the bus contains enumerated data,\n\t\t\t\t\t\t\t\t\t\t\tdo not use the <code class=\"guidropdown\">Linear\n\t\t\t\t\t\t\t\t\t\t\t\textrapolation</code> option.</p></td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e127866\"><p><img alt=\"Plot that shows the output for a From File block configured to linearly interpolate the output value for simulation times after the last sample in the loaded data. The block loads data that ends 2 seconds before the end of the simulation.\" height=\"229\" src=\"from_file_linear_last.png\" width=\"268\"/></p></div></div>\n</td></tr>",
                "<tr><td><code class=\"guidropdown\">Hold last value</code></td><td><p>The <span class=\"block\">From File</span> block uses the last\n\t\t\t\t\t\t\t\t\t\t\tdata value in the MAT file as the output\n\t\t\t\t\t\t\t\t\t\tvalue.</p></td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e127882\"><p><img alt=\"Plot that shows the output for a From File block configured to hold the last output value for simulation times after the last sample in the loaded data. The block loads data that ends 2 seconds before the end of the simulation.\" height=\"228\" src=\"from_file_hold_last.png\" width=\"275\"/></p></div></div>\n</td></tr>",
                "<tr><td><code class=\"guidropdown\">Ground value</code></td><td><p>The <span class=\"block\">From File</span> block output value\n\t\t\t\t\t\t\t\t\t\t\tdepends on the type of data in the MAT file.</p><div class=\"itemizedlist\"><ul><li><p>Built-in numeric types \u2014\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">0</code></p></li><li><p><code class=\"literal\">Boolean</code> \u2014\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">false</code></p></li><li><p>Fixed-point data types \u2014 Representation for\n\t\t\t\t\t\t\t\t\t\t\t\tvalue of <code class=\"literal\">0</code>, which may not be\n\t\t\t\t\t\t\t\t\t\t\t\texactly <code class=\"literal\">0</code> due to scaling and\n\t\t\t\t\t\t\t\t\t\t\t\tlimited precision.</p></li><li><p>Enumerated data types \u2014 Default value</p></li></ul></div></td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e127917\"><p><img alt=\"Plot that shows the output for a From File block configured to use the ground value as the output value for simulation times after the last sample in the loaded data. The block loads data that ends 2 seconds before the end of the simulation.\" height=\"228\" src=\"from_file_ground_last.png\" width=\"275\"/></p></div></div>\n</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/fromfile.html"
    },
    {
        "block_name": "From Workspace",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><th>Type of Output</th><th>Data Formats</th><th>Tips</th></tr>",
                "<tr><td><p>Scalar or vector signal</p></td><td><p>\n</p>\n<div class=\"itemizedlist\"><ul><li><p><span><a href=\"../../matlab/ref/timetable.html\"><code class=\"function\">timetable</code></a> that contains a single\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn<em> (since R2020a)</em></span></p></li><li><p><a href=\"../../matlab/ref/timeseries.html\"><code class=\"class\">timeseries</code></a> object</p></li><li><p><a href=\"simulink.simulationdata.signal.html\"><code class=\"object\">Simulink.SimulationData.Signal</code></a>\n\t\t\t\t\t\t\t\t\t\t\t\tobject</p></li><li><p>Structure with fields and hierarchy that\n\t\t\t\t\t\t\t\t\t\t\t\tmatch the <code class=\"guidropdown\">Structure</code> or\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Structure with time</code>\n\t\t\t\t\t\t\t\t\t\t\t\tlogging format.</p></li><li><p>Two-dimensional array in which the first\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn is time and one or more additional columns\n\t\t\t\t\t\t\t\t\t\t\t\tcontain the signal value for each timestamp</p></li></ul></div><p>\n</p></td><td><p>\n</p>\n<div class=\"itemizedlist\"><ul><li><p>For scalar and vector signals, the number of\n\t\t\t\t\t\t\t\t\t\t\t\trows in the signal data must match the number of\n\t\t\t\t\t\t\t\t\t\t\t\trows in the time vector.</p></li><li><p>To create a <code class=\"object\">timetable</code>, the\n\t\t\t\t\t\t\t\t\t\t\t\ttime values must be a <a href=\"../../matlab/ref/duration.html\"><code class=\"object\">duration</code></a> vector.</p><p>Simulation time always uses units of\n\t\t\t\t\t\t\t\t\t\t\t\tseconds. When you create a duration vector that\n\t\t\t\t\t\t\t\t\t\t\t\tuses units other than seconds, the software\n\t\t\t\t\t\t\t\t\t\t\t\tconverts the value to seconds for use in the\n\t\t\t\t\t\t\t\t\t\t\t\tsimulation.</p></li><li><p>Array format does not support signal values\n\t\t\t\t\t\t\t\t\t\t\t\tthat are complex or that have a data type other\n\t\t\t\t\t\t\t\t\t\t\t\tthan <code class=\"literal\">double</code>.</p></li></ul></div><p>\n</p></td></tr>",
                "<tr><td><p>Multidimensional signal</p></td><td><p>\n</p>\n<div class=\"itemizedlist\"><ul><li><p><code class=\"object\">timeseries</code> object</p></li><li><p><span><code class=\"object\">timetable</code> that contains a single\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn<em> (since R2020a)</em></span></p></li><li><p><code class=\"object\">Simulink.SimulationData.Signal</code>\n\t\t\t\t\t\t\t\t\t\t\t\tobject</p></li><li><p>Structure with fields and hierarchy that\n\t\t\t\t\t\t\t\t\t\t\t\tmatch the <code class=\"guidropdown\">Structure</code> or\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Structure with time</code>\n\t\t\t\t\t\t\t\t\t\t\t\tlogging format</p></li></ul></div><p>\n</p></td><td><p>\n</p>\n<div class=\"itemizedlist\"><ul><li><p>For a multidimensional signal with values\n\t\t\t\t\t\t\t\t\t\t\t\tthat have two or more dimensions, the length of\n\t\t\t\t\t\t\t\t\t\t\t\tthe last dimension must match the length of the\n\t\t\t\t\t\t\t\t\t\t\t\ttime vector.</p><p>For example, input data for 10 samples of a\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">2</code>-by-<code class=\"literal\">2</code>\n\t\t\t\t\t\t\t\t\t\t\t\tmatrix signal has a time vector that contains 10\n\t\t\t\t\t\t\t\t\t\t\t\trows and an array of signal values that has\n\t\t\t\t\t\t\t\t\t\t\t\tdimensions\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">2</code>-by-<code class=\"literal\">2</code>-by-<code class=\"literal\">10</code>.</p></li><li><p>To create a <code class=\"object\">timetable</code>, the\n\t\t\t\t\t\t\t\t\t\t\t\ttime values must be a <code class=\"object\">duration</code>\n\t\t\t\t\t\t\t\t\t\t\t\tvector.</p><p>Simulation time always uses units of\n\t\t\t\t\t\t\t\t\t\t\t\tseconds. When you create a duration vector that\n\t\t\t\t\t\t\t\t\t\t\t\tuses units other than seconds, the software\n\t\t\t\t\t\t\t\t\t\t\t\tconverts the value to seconds for use in the\n\t\t\t\t\t\t\t\t\t\t\t\tsimulation.</p></li></ul></div><p>\n</p></td></tr>",
                "<tr><td>Variable-size signal</td><td><p>Structure with fields and hierarchy that match the\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Structure</code> or\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Structure with time</code>\n\t\t\t\t\t\t\t\t\t\t\tlogging format</p></td><td><p>To log a variable-size signal in a format you can\n\t\t\t\t\t\t\t\t\t\t\tload using the <span class=\"block\">From Workspace</span> block,\n\t\t\t\t\t\t\t\t\t\t\tconnect the signal to a top-level <span class=\"block\">Outport</span>\n\t\t\t\t\t\t\t\t\t\t\tblock and set the <strong class=\"configparam\"><a href=\"../gui/format.html\">Format</a></strong> configuration parameter for\n\t\t\t\t\t\t\t\t\t\t\tthe model to <code class=\"guidropdown\">Structure</code> or\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Structure with\n\t\t\t\t\t\t\t\t\t\t\ttime</code>.</p></td></tr>",
                "<tr><td>Bus</td><td><p>Structure of <span><code class=\"object\">timetable</code><em> (since R2020a)</em></span>\n\t\t\t\t\t\t\t\t\t\t\tor <code class=\"object\">timeseries</code> objects:</p><p>\n</p>\n<div class=\"itemizedlist\"><ul><li><p>Specify the <strong class=\"guilabel\">Output data\n\t\t\t\t\t\t\t\t\t\t\t\ttype</strong> parameter as the <a href=\"simulink.bus.html\"><code class=\"object\">Simulink.Bus</code></a> object that defines the\n\t\t\t\t\t\t\t\t\t\t\t\tbus.</p></li><li><p>The hierarchy and field names of the\n\t\t\t\t\t\t\t\t\t\t\t\tstructure must match the hierarchy and element\n\t\t\t\t\t\t\t\t\t\t\t\tnames of the bus.</p></li><li><p>Each <code class=\"object\">timetable</code> or\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"object\">timeseries</code> object contains data\n\t\t\t\t\t\t\t\t\t\t\t\tfor a leaf signal in the bus.</p></li><li><p>Each <code class=\"object\">timetable</code> must contain\n\t\t\t\t\t\t\t\t\t\t\t\tonly one column.</p></li></ul></div><p>\n</p></td><td><p>To partially specify input data for a bus, set bus\n\t\t\t\t\t\t\t\t\t\t\telements for which you do not need to load data to\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">[]</code> in the input data\n\t\t\t\t\t\t\t\t\t\t\tstructure.</p></td></tr>",
                "<tr><td><p><span>Array of buses<em> (since R2021a)</em></span></p></td><td>Array of structures that each represent data for a bus\n\t\t\t\t\t\t\t\t\t\twithin the array of buses</td><td>\n<div class=\"itemizedlist\"><ul><li><p>Loading data for an array of buses is not\n\t\t\t\t\t\t\t\t\t\t\t\tsupported for rapid accelerator\n\t\t\t\t\t\t\t\t\t\t\t\tsimulations.</p></li><li><p><span class=\"block\">From Workspace</span> blocks in the\n\t\t\t\t\t\t\t\t\t\t\t\ttop model support loading data for an array of\n\t\t\t\t\t\t\t\t\t\t\t\tbuses in normal and accelerator mode\n\t\t\t\t\t\t\t\t\t\t\t\tsimulations.</p></li><li><p><span class=\"block\">From Workspace</span> blocks in\n\t\t\t\t\t\t\t\t\t\t\t\treferenced models support loading data for an\n\t\t\t\t\t\t\t\t\t\t\t\tarray of buses only when the referenced model\n\t\t\t\t\t\t\t\t\t\t\t\texecutes in normal mode.</p></li><li><p>To partially specify input data for an array\n\t\t\t\t\t\t\t\t\t\t\t\tof buses, set bus elements for which you do not\n\t\t\t\t\t\t\t\t\t\t\t\tneed to load data to <code class=\"literal\">[]</code> in the\n\t\t\t\t\t\t\t\t\t\t\t\tstructure that represents the data for that\n\t\t\t\t\t\t\t\t\t\t\t\tbus.</p></li></ul></div>\n</td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">OutDataTypeStr</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'Inherit: auto'</code> (default) | <code class=\"literal\">'double'</code> | <code class=\"literal\">'single'</code> | <code class=\"literal\">'half'</code> | <code class=\"literal\">'int8'</code> | <code class=\"literal\">'uint8'</code> | <code class=\"literal\">'int16'</code> | <code class=\"literal\">'uint16'</code> | <code class=\"literal\">'int32'</code> | <code class=\"literal\">'uint32'</code> | <code class=\"literal\">'boolean'</code> | <code class=\"literal\">'fixdt(1,16,0)'</code> | <code class=\"literal\">'fixdt(1,16,2^0,0)'</code> | <code class=\"literal\">'Enum: &lt;class name&gt;'</code> | <code class=\"literal\">'Bus: &lt;object name&gt;'</code> | data type expression</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">SampleTime</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'0'</code> (default) | scalar | vector</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Interpolate</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'on'</code> (default) | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ZeroCross</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'on'</code> (default) | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ],
            [
                "<tr><th>Setting for Form output after final data value by</th><th>Setting for Interpolate data</th><th>Block Output After Final Data</th></tr>",
                "<tr><td rowspan=\"2\"><p><strong class=\"emphasis bold\">Extrapolation</strong></p></td><td><p>On</p></td><td><p>Extrapolated from final data value</p></td></tr>",
                "<tr><td><p>Off</p></td><td><p>Error</p></td></tr>",
                "<tr><td rowspan=\"2\"><p><strong class=\"emphasis bold\">Setting to zero</strong></p></td><td><p>On</p></td><td rowspan=\"2\"><p>Zero</p></td></tr>",
                "<tr><td><p>Off</p></td></tr>",
                "<tr><td rowspan=\"2\"><p><strong class=\"emphasis bold\">Holding final value</strong></p></td><td><p>On</p></td><td rowspan=\"2\"><p>Final value from\n\t\t\t\t\t\t\t\t\t\tworkspace</p></td></tr>",
                "<tr><td><p>Off</p></td></tr>",
                "<tr><td rowspan=\"2\"><p><strong class=\"emphasis bold\">Cyclic repetition</strong></p></td><td><p>On</p></td><td><p>Error</p></td></tr>",
                "<tr><td><p>Off</p></td><td><p>When the loaded workspace data uses the structure\n\t\t\t\t\t\t\t\t\t\t\twithout time format, repeats workspace data from the\n\t\t\t\t\t\t\t\t\t\t\tfirst value.</p><p>Errors for workspace data\n\t\t\t\t\t\t\t\t\t\t\tformats other than structure with time.</p></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/fromworkspace.html"
    },
    {
        "block_name": "From Spreadsheet",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">FileName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: full path and file\n\t\t\t\t\t\t\t\tname</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'untitled.xlsx'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">SheetName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: Sheet name</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Sheet1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Range</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: entire range of used cells in sheet |\n\t\t\t\t\t\t\t\tcomma-separated list of\n\t\t\t\t\t\t\t\t\t\t<code class=\"literal\"><em class=\"replaceable\"><code>column</code></em>:<em class=\"replaceable\"><code>row</code></em></code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">OutDataTypeStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Inherit: auto' | 'double' |\n\t\t\t\t\t\t\t\t\t'single' | 'int8' | 'uint8' | 'int16' | 'uint16' | 'int32' |\n\t\t\t\t\t\t\t\t\t'uint32' | 'int64' | 'uint64' | 'boolean' | 'fixdt(1,16,0)' |\n\t\t\t\t\t\t\t\t\t'fixdt(1,16,2^0,0)' | 'Enum: &lt;class name&gt;' | '&lt;data type\n\t\t\t\t\t\t\t\t\texpression&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Inherit: auto'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">TreatFirstColumnAs</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>: <code class=\"literal\">'Time' | 'Data'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Time'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">SampleTime</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> scalar | vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'0'</code>\n</span></td></tr>"
            ],
            [
                "<tr><th>Method</th><th>Description</th></tr>",
                "<tr><td><code class=\"guidropdown\">Linear extrapolation</code></td><td><p>(Default)</p><p>If the spreadsheet contains\n\t\t\t\t\t\t\t\t\t\t\tonly one sample, the <span class=\"block\">From Spreadsheet</span>\n\t\t\t\t\t\t\t\t\t\t\tblock outputs the corresponding data\n\t\t\t\t\t\t\t\t\t\t\tvalue.</p><p>If the spreadsheet contains more than\n\t\t\t\t\t\t\t\t\t\t\tone sample, the <span class=\"block\">From Spreadsheet</span> block\n\t\t\t\t\t\t\t\t\t\t\tlinearly extrapolates using the first two\n\t\t\t\t\t\t\t\t\t\t\tsamples:</p><div class=\"itemizedlist\"><ul><li><p>For <code class=\"literal\">double</code> data, linearly\n\t\t\t\t\t\t\t\t\t\t\t\textrapolates the value using the first two\n\t\t\t\t\t\t\t\t\t\t\t\tsamples</p></li><li><p>For <code class=\"literal\">Boolean</code> data, outputs\n\t\t\t\t\t\t\t\t\t\t\t\tthe first data value</p></li><li><p>For a built-in data type other than\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">double</code> or\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">Boolean</code>:</p><div class=\"itemizedlist\"><ul><li><p>Upcasts the data to\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">double</code></p></li><li><p>Performs linear extrapolation (as described\n\t\t\t\t\t\t\t\t\t\t\t\tabove for <code class=\"literal\">double</code> data)</p></li><li><p>Downcasts the extrapolated data value to the\n\t\t\t\t\t\t\t\t\t\t\t\toriginal data type</p></li></ul></div></li></ul></div><p>You cannot use the <code class=\"guidropdown\">Linear\n\t\t\t\t\t\t\t\t\t\t\t\textrapolation</code> option with enumerated\n\t\t\t\t\t\t\t\t\t\t\t\t(<code class=\"literal\">enum</code>) data. </p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Hold first value</code></td><td><p>Uses the first data value in the\n\t\t\t\t\t\t\t\t\t\tfile</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Ground value</code></td><td><p>Uses a value that depends on the data type of\n\t\t\t\t\t\t\t\t\t\t\tspreadsheet sample data values:</p><div class=\"itemizedlist\"><ul><li><p>Fixed-point data types \u2014 Uses the\n\t\t\t\t\t\t\t\t\t\t\t\tground value</p></li><li><p>Numeric types other than fixed\u2013point \u2014\n\t\t\t\t\t\t\t\t\t\t\t\tUses <code class=\"literal\">0</code></p></li><li><p><code class=\"literal\">Boolean</code> \u2014 Uses\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">false</code></p></li><li><p>Enumerated data types \u2014 Uses default\n\t\t\t\t\t\t\t\t\t\t\t\tvalue</p></li></ul></div></td></tr>"
            ],
            [
                "<tr><th>Method</th><th>Description</th></tr>",
                "<tr><td><code class=\"guidropdown\">Linear interpolation</code></td><td><p>(Default)</p><p>The <span class=\"block\">From\n\t\t\t\t\t\t\t\t\t\t\t\tSpreadsheet</span> block interpolates using the two\n\t\t\t\t\t\t\t\t\t\t\tcorresponding spreadsheet samples:</p><div class=\"itemizedlist\"><ul><li><p>For <code class=\"literal\">double</code> data, linearly\n\t\t\t\t\t\t\t\t\t\t\t\tinterpolates the value using the two corresponding\n\t\t\t\t\t\t\t\t\t\t\t\tsamples</p></li><li><p>For Boolean data, if the simulation time is\n\t\t\t\t\t\t\t\t\t\t\t\tbetween two spreadsheet data points with different\n\t\t\t\t\t\t\t\t\t\t\t\tvalues, the <span class=\"block\">From Spreadsheet</span> block\n\t\t\t\t\t\t\t\t\t\t\t\tpositions the value transition halfway between the\n\t\t\t\t\t\t\t\t\t\t\t\tspreadsheet data points. For example, if the\n\t\t\t\t\t\t\t\t\t\t\t\tspreadsheet data transitions from true to false,\n\t\t\t\t\t\t\t\t\t\t\t\tthe <span class=\"block\">From Spreadsheet</span> data provides\n\t\t\t\t\t\t\t\t\t\t\t\tan output value of true for simulation times in\n\t\t\t\t\t\t\t\t\t\t\t\tthe first half of the interval between the\n\t\t\t\t\t\t\t\t\t\t\t\tspreadsheet data points. It provides an output\n\t\t\t\t\t\t\t\t\t\t\t\tvalue of false for simulation times in the latter\n\t\t\t\t\t\t\t\t\t\t\t\thalf of the interval.</p></li><li><p>For a built-in data type other than\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">double</code> or\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">Boolean</code>:</p><div class=\"itemizedlist\"><ul><li><p>Upcasts the data to\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">double</code></p></li><li><p>Performs linear interpolation (as described\n\t\t\t\t\t\t\t\t\t\t\t\tabove for <code class=\"literal\">double</code> data)</p></li><li><p>Downcasts the interpolated value to the\n\t\t\t\t\t\t\t\t\t\t\t\toriginal data type</p></li></ul></div></li></ul></div><p>You cannot use the <code class=\"guidropdown\">Linear\n\t\t\t\t\t\t\t\t\t\t\t\tinterpolation</code> option with enumerated\n\t\t\t\t\t\t\t\t\t\t\t\t(<code class=\"literal\">enum</code>) data. </p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Zero order hold</code></td><td><p>Uses the data from the first of the two\n\t\t\t\t\t\t\t\t\t\t\tsamples</p></td></tr>"
            ],
            [
                "<tr><th>Method</th><th>Description</th></tr>",
                "<tr><td><code class=\"guidropdown\">Linear extrapolation</code></td><td><p>(Default)</p><p>If the spreadsheet contains\n\t\t\t\t\t\t\t\t\t\t\tonly one sample, the <span class=\"block\">From Spreadsheet</span>\n\t\t\t\t\t\t\t\t\t\t\tblock outputs the corresponding data\n\t\t\t\t\t\t\t\t\t\t\tvalue.</p><p>If the spreadsheet contains more than\n\t\t\t\t\t\t\t\t\t\t\tone sample, the <span class=\"block\">From Spreadsheet</span> block\n\t\t\t\t\t\t\t\t\t\t\tlinearly extrapolates using data values of the last two\n\t\t\t\t\t\t\t\t\t\t\tsamples:</p><div class=\"itemizedlist\"><ul><li><p>For <code class=\"literal\">double</code> data,\n\t\t\t\t\t\t\t\t\t\t\t\textrapolates the value using the last two\n\t\t\t\t\t\t\t\t\t\t\t\tsamples</p></li><li><p>For <code class=\"literal\">Boolean</code> data, outputs\n\t\t\t\t\t\t\t\t\t\t\t\tthe last data value</p></li><li><p>For a built-in data type other than\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">double</code> or\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">Boolean</code>:</p><div class=\"itemizedlist\"><ul><li><p>Upcasts the data to\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">double</code>.</p></li><li><p>Performs linear extrapolation (as described\n\t\t\t\t\t\t\t\t\t\t\t\tabove for <code class=\"literal\">double</code> data).</p></li><li><p>Downcasts the extrapolated value to the\n\t\t\t\t\t\t\t\t\t\t\t\toriginal data type.</p></li></ul></div></li></ul></div><p>You cannot use the <code class=\"guidropdown\">Linear\n\t\t\t\t\t\t\t\t\t\t\t\textrapolation</code> option with enumerated\n\t\t\t\t\t\t\t\t\t\t\t\t(<code class=\"literal\">enum</code>) data. </p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Hold last value</code></td><td><p>Uses the last data value in the file</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Ground value</code></td><td><p>Uses a value that depends on the data type of\n\t\t\t\t\t\t\t\t\t\t\tspreadsheet sample data values:</p><div class=\"itemizedlist\"><ul><li><p>Fixed-point data types \u2014 Uses the\n\t\t\t\t\t\t\t\t\t\t\t\tground value</p></li><li><p>Numeric types other than fixed\u2013point \u2014\n\t\t\t\t\t\t\t\t\t\t\t\tuses <code class=\"literal\">0</code></p></li><li><p><code class=\"literal\">Boolean</code> \u2014 Uses\n\t\t\t\t\t\t\t\t\t\t\t\t<code class=\"literal\">false</code></p></li><li><p>Enumerated data types \u2014 Uses default\n\t\t\t\t\t\t\t\t\t\t\t\tvalue</p></li></ul></div></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Parameter: </strong>\n<code class=\"literal\">OutputAfterLastPoint</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type: </strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Repeating sequence' | 'Hold final value' | 'Ground\n\t\t\t\t\t\t\t\t\tvalue'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Repeating sequence'</code>\n</span></td></tr>"
            ],
            [
                "<tr><th>Time Stamp</th><th>When Zero-Crossing Detection Occurs</th></tr>",
                "<tr><td><p>First</p></td><td><p><strong class=\"guilabel\">Data extrapolation before first data\n\t\t\t\t\t\t\t\t\t\t\t\tpoint</strong> is set to <code class=\"guidropdown\">Ground\n\t\t\t\t\t\t\t\t\t\t\t\tvalue</code>.</p></td></tr>",
                "<tr><td><p>Between first and last</p></td><td><p><strong class=\"guilabel\">Data interpolation within time\n\t\t\t\t\t\t\t\t\t\t\t\trange</strong> is set to <code class=\"guidropdown\">Zero-order\n\t\t\t\t\t\t\t\t\t\t\t\thold</code>.</p></td></tr>",
                "<tr><td><p>Last</p></td><td><p>One or both of these settings occur:</p><div class=\"itemizedlist\"><ul><li><p><strong class=\"guilabel\">Data extrapolation after last data\n\t\t\t\t\t\t\t\t\t\t\t\tpoint</strong> is set to <code class=\"guidropdown\">Ground\n\t\t\t\t\t\t\t\t\t\t\t\tvalue</code>.</p></li><li><p><strong class=\"guilabel\">Data interpolation within time\n\t\t\t\t\t\t\t\t\t\t\t\trange</strong> is set to <code class=\"guidropdown\">Zero-order\n\t\t\t\t\t\t\t\t\t\t\t\thold</code>.</p></li></ul></div></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/fromspreadsheet.html"
    },
    {
        "block_name": "Trigger",
        "libraries": [
            "Simulink/Ports & Subsystems",
            "HDL Coder/Ports & Subsystems"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TriggerType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character\n                                    vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'rising'</code> | <code class=\"literal\">'falling'</code> |\n                                        <code class=\"literal\">'either'</code> |\n                                        <code class=\"literal\">'function-call'</code> |\n                                        <code class=\"literal\">'message'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'rising'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/trigger.html"
    },
    {
        "block_name": "Playback",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter: </strong>\n<code class=\"literal\">NumPorts</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> integer</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> integer in the range\n\t\t\t\t\t\t\t\t\t\t[<code class=\"literal\">0,100</code>]</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">0</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/playback.html"
    },
    {
        "block_name": "Outport",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Ports & Subsystems",
            "Simulink/Sinks",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Ports & Subsystems",
            "HDL Coder/Sinks"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">Port</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'1'</code> (default) | real integer in quotes</span></td></tr>",
                "<tr><td width=\"150\"><strong>Data Types: </strong></td><td><code>char</code> | <code>string</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/outport.html"
    },
    {
        "block_name": "Signal Editor",
        "libraries": [
            "Simulink/Sources"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Filename</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:  character\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'untitled.mat'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ActiveScenario</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector |\n                                numeric</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: character vector |\n                                index value</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Scenario'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ActiveSignal</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector |\n                                numeric</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: character vector |\n                                index vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Signal\n                                    1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ApplySigPropsToAllScenarios</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ApplySigPropsToAllSignals</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">IsBus</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">OutputBusObjectStr</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: bus object\n                                name</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Bus:\n                                    BusObject'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Unit</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'inherit'</code> | supported physical unit</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'inherit'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal remove_text_wrapping\">-1</code> |\n                                sample time in seconds</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Interpolate</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'off' |\n                                    'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><th>Setting for Form Output After Final Data Value By</th><th>Setting for Interpolate Data</th><th>Block Output After Final Data</th></tr>",
                "<tr><td rowspan=\"2\">\n<p><strong class=\"emphasis bold\">Extrapolation</strong></p>\n</td><td>\n<p>On</p>\n</td><td>\n<p>Extrapolated from final data value</p>\n</td></tr>",
                "<tr><td>\n<p>Off</p>\n</td><td>\n<p>Error</p>\n</td></tr>",
                "<tr><td rowspan=\"2\">\n<p><strong class=\"emphasis bold\">Setting to\n                                            zero</strong></p>\n</td><td>\n<p>On</p>\n</td><td>\n<p>Zero</p>\n</td></tr>",
                "<tr><td>\n<p>Off</p>\n</td><td>\n<p>Zero</p>\n</td></tr>",
                "<tr><td rowspan=\"2\">\n<p><strong class=\"emphasis bold\">Holding final\n                                            value</strong></p>\n</td><td>\n<p>On</p>\n</td><td>\n<p>Final value from workspace</p>\n</td></tr>",
                "<tr><td>\n<p>Off</p>\n</td><td>\n<p>Final value from workspace</p>\n</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/signaleditorblock.html"
    },
    {
        "block_name": "Record",
        "libraries": [
            "Simulink/Sinks",
            "Simulink/Sinks",
            "HDL Coder/Sinks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">'NumPorts'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">integer</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> integer in the range\n                    [<code class=\"literal\">1</code>,<code class=\"literal\">100</code>]</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">1</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/record.html"
    },
    {
        "block_name": "To File",
        "libraries": [
            "Simulink/Sinks",
            "HDL Coder/Sinks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter: </strong>\n<code class=\"literal\">FileName</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong> MAT-file path or\n                                name</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'untitled.mat'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter: </strong>\n<code class=\"literal\">MatrixName</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> character\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default: </strong>\n<code class=\"literal\">'ans'</code>\n</span></td></tr>"
            ],
            [
                "<tr><th>Simulation Mode</th><th><code class=\"guidropdown\">Timeseries</code></th><th><code class=\"guidropdown\">Array</code></th></tr>",
                "<tr><td>Normal</td><td>Supported</td><td>Supported</td></tr>",
                "<tr><td>Accelerator</td><td>Supported</td><td>Supported</td></tr>",
                "<tr><td>Rapid Accelerator</td><td>Supported</td><td>Supported</td></tr>",
                "<tr><td>Software-in-the-loop (SIL) </td><td>Not supported</td><td>Supported if MAT-file logging is enabled</td></tr>",
                "<tr><td>Processor-in-the-loop (PIL)</td><td>Not supported</td><td>Supported if MAT-file logging is available and\n                                        enabled</td></tr>",
                "<tr><td>External</td><td>Not supported</td><td>Supported if MAT-file logging is enabled</td></tr>",
                "<tr><td>RSim target</td><td>Supported</td><td>Supported if MAT-file logging is enabled</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Decimation</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar |\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar |\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-1'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/tofile.html"
    },
    {
        "block_name": "To Workspace",
        "libraries": [
            "Simulink/Sinks",
            "DSP System Toolbox/Sinks",
            "HDL Coder/Sinks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VariableName</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> Valid MATLAB variable name</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'simout'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaxDataPoints</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'inf'</code> | positive integer greater than\n                                zero</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'inf'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Decimation</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'1'</code>\n</span></td></tr>"
            ],
            [
                "<tr><th><strong class=\"guilabel\">Save Format</strong> Value</th><th>Workspace Data Format</th><th>Simulation Workflow Support</th></tr>",
                "<tr><td><code class=\"guidropdown\">Timeseries</code></td><td><p>Nonbus input logged as a <a href=\"../../matlab/ref/timeseries.html\"><code class=\"object\">timeseries</code></a> object.</p><p>Bus input\n                                            logged as a structure of <code class=\"object\">timeseries</code>\n                                            objects. The hierarchy and names for fields in the\n                                            structure matches the hierarchy and names specified in\n                                            the <a href=\"simulink.bus.html\"><code class=\"object\">Simulink.Bus</code></a> object that defines the\n                                            bus.</p><p>Array of buses input logged as an array\n                                            of structures of <code class=\"object\">timeseries</code>\n                                            objects.</p></td><td><p>Supported:</p>\n<div class=\"itemizedlist\"><ul><li><p>Normal mode simulation</p></li><li><p>Accelerator mode simulation</p></li><li><p>Rapid\n                                                  accelerator mode simulation<em> (since R2022a)</em></p></li><li><p>External mode simulation that uses XCP\n                                                  communication provided\n                                                  <code class=\"literal\">StreamToWks</code> is set to\n                                                  <code class=\"literal\">'on'</code> and\n                                                  <code class=\"literal\">MATFileLogging</code> is set to\n                                                  <code class=\"literal\">'off'</code></p></li></ul></div><p>\n</p><p>Not supported:</p>\n<div class=\"itemizedlist\"><ul><li><p>External mode simulation that uses TCP/IP or\n                                                  serial communication</p></li><li><p>Software-in-the-loop (SIL) simulation</p></li><li><p>Processor-in-the-loop (PIL)\n                                                  simulation</p></li><li><p>Code generation for <span class=\"entity\">Simulink\n            Coder\u2122</span> targets</p></li></ul></div><p>\n</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Structure With Time</code></td><td><p>Nonbus input logged as a structure that contains\n                                            these fields:</p>\n<div class=\"itemizedlist\"><ul><li><p><code class=\"literal\">time</code> \u2014 Column vector of\n                                                  simulation time hits for which input value was\n                                                  logged.</p></li><li><p><code class=\"literal\">signals</code> \u2014 Structure with\n                                                  sample values that contains the fields:</p>\n<div class=\"itemizedlist\"><ul><li><p><code class=\"literal\">values</code> \u2014 Array of sample\n                                                  values.</p></li><li><p><code class=\"literal\">dimensions</code> \u2014 Sample\n                                                  dimensions.</p></li><li><p><code class=\"literal\">label</code> \u2014 Name of signal\n                                                  line in model.</p></li></ul></div><p>\n</p></li><li><p><code class=\"literal\">blockName</code> \u2014 Name of the\n                                                  <span class=\"block\">To Workspace</span> block.</p></li></ul></div><p>\n</p></td><td rowspan=\"3\"><p>Always supported:</p>\n<div class=\"itemizedlist\"><ul><li><p>Normal mode simulation.</p></li><li><p>External mode simulation that uses XCP\n                                                  communication provided\n                                                  <code class=\"literal\">StreamToWks</code> is set to\n                                                  <code class=\"literal\">'on'</code> and\n                                                  <code class=\"literal\">MATFileLogging</code> is set to\n                                                  <code class=\"literal\">'off'</code></p></li></ul></div><p>\n</p><p>Supported except when the\n                                                <span class=\"block\">To Workspace</span> block is in a referenced model:</p>\n<div class=\"itemizedlist\"><ul><li><p>Accelerator mode simulation</p></li><li><p>Rapid accelerator mode simulation</p></li><li><p>External mode simulation that uses TCP/IP or\n                                                  serial communication</p></li></ul></div><p>\n</p><p>Supported if <strong class=\"configparam\"><a href=\"../../rtw/ref/matfilelogging.html\">MAT-file\n                                                logging</a><span role=\"cross_prod\"> (Simulink Coder)</span></strong> is enabled for generated code,\n                                            except when the <span class=\"block\">To Workspace</span> block is in\n                                            a referenced model:</p>\n<div class=\"itemizedlist\"><ul><li><p>Software-in-the-loop (SIL) simulation</p></li><li><p>Processor-in-the-loop (PIL)\n                                                  simulation</p></li><li><p>Code generation for <span class=\"entity\">Simulink\n            Coder</span> targets</p></li></ul></div><p>\n</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Structure</code></td><td><p>Nonbus input logged as a structure that matches the\n                                                <code class=\"guidropdown\">Structure With Time</code>\n                                            format, but the <code class=\"literal\">time</code> field of the\n                                            structure is empty.</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">Array</code></td><td><p>Sample values for nonbus input saved as\n                                                <em class=\"varname\">N</em>-dimensional array, where\n                                                <em class=\"varname\">N</em> is one greater than the\n                                            dimensions of the input. For example:</p>\n<div class=\"itemizedlist\"><ul><li><p>Scalar signal data is logged as a column\n                                                  vector.</p></li><li><p>Vector signal data is logged as a\n                                                  matrix.</p></li><li><p>Matrix signal data is logged as a 3-D\n                                                  array.</p></li></ul></div><p>\n</p><p>The structure of the values\n                                            in the array depends on the dimensions of the input\n                                            signal data:</p>\n<div class=\"itemizedlist\"><ul><li><p>For scalar and vector signals, each sample\n                                                  value is a row in the output array. The first\n                                                  dimension of the array aligns with time such that\n                                                  <code class=\"literal\">simout(1,:)</code> returns the first\n                                                  logged signal value.</p></li><li><p>For matrix signals, the third dimension of\n                                                  the output array aligns with time such that\n                                                  <code class=\"literal\">simout(:,:,1)</code> returns the first\n                                                  logged signal value.</p></li><li><p>For <em class=\"varname\">N</em>-dimensional\n                                                  signals, the last dimension aligns with time, such\n                                                  that the number of elements in the last dimension\n                                                  is equal to the number of samples logged from\n                                                  simulation.</p></li></ul></div><p>\n</p><p>The output array contains\n                                            only signal values and does not contain time\n                                            data.</p></td></tr>"
            ],
            [
                "<tr><th>Input Data Dimensions</th><th>Save 2-D Signal As...</th><th>Workspace Data Dimensions</th></tr>",
                "<tr><td rowspan=\"2\"><em class=\"varname\">M</em>-by-<em class=\"varname\">N</em></td><td><code class=\"guidropdown\">2-D array (concatenate along first\n                                            dimension)</code></td><td><p><em class=\"varname\">K</em>-by-<em class=\"varname\">N</em>\n                                            matrix, where <em class=\"varname\">K</em> is equal to\n                                                <em class=\"varname\">M</em> times the number of samples\n                                            logged from simulation.</p><p>For example, logging\n                                            ten samples of a\n                                                <code class=\"literal\">2</code>-by-<code class=\"literal\">4</code> matrix\n                                            input creates a\n                                                <code class=\"literal\">20</code>-by-<code class=\"literal\">4</code>\n                                            matrix.</p></td></tr>",
                "<tr><td><code class=\"guidropdown\">3-D array (concatenate along first\n                                            dimension)</code></td><td><p><em class=\"varname\">M</em>-by-<em class=\"varname\">N</em>-by-<em class=\"varname\">K</em>\n                                            array, where <em class=\"varname\">K</em> is equal to the number\n                                            of samples logged from simulation.</p><p>For\n                                            example, logging ten samples of a\n                                                <code class=\"literal\">2</code>-by-<code class=\"literal\">4</code> matrix\n                                            input creates a\n                                                <code class=\"literal\">2</code>-by-<code class=\"literal\">4</code>-by-<code class=\"literal\">10</code>\n                                            array.</p></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FixptAsFi</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off' | 'on'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> string | character vector </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'-1'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/toworkspace.html"
    },
    {
        "block_name": "Dashboard Scope",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> cell array of\n                                        <code class=\"class\">Simulink.HMI.SignalSpecification</code>\n                                    objects</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/dashboardscope.html"
    },
    {
        "block_name": "Gauge",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/gauge.html"
    },
    {
        "block_name": "Enable",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/enable.html"
    },
    {
        "block_name": "Display",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/dashboarddisplay.html"
    },
    {
        "block_name": "Quarter Gauge",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/quartergauge.html"
    },
    {
        "block_name": "Half Gauge",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/halfgauge.html"
    },
    {
        "block_name": "Lamp",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">StateColors</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> structure array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> structure</span></td></tr>"
            ],
            [
                "<tr><th>Icon</th><th>Basic Shapes Library Block Name</th><th>Programmatic Use Value</th></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180666\"><p><img alt=\"Lamp icon: a solid gray circle\" height=\"50\" src=\"default.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Lamp</span></td><td><code class=\"literal\">Default</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180679\"><p><img alt=\"Circle icon: a solid black circle\" height=\"50\" src=\"circle.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Circle</span></td><td><code class=\"literal\">Circle</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180692\"><p><img alt=\"Hexagon icon: a solid hexagon\" height=\"50\" src=\"hexagon.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Hexagon</span></td><td><code class=\"literal\">Hexagon</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180705\"><p><img alt=\"Pentagon icon: a solid pentagon\" height=\"50\" src=\"pentagon.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Pentagon</span></td><td><code class=\"literal\">Pentagon</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180718\"><p><img alt=\"Rectangle icon: a solid rectangle\" height=\"50\" src=\"rectangle.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Rectangle</span></td><td><code class=\"literal\">Rectangle</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180731\"><p><img alt=\"Square icon: a solid square\" height=\"50\" src=\"square.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Square</span></td><td><code class=\"literal\">Square</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180744\"><p><img alt=\"Triangle icon: a solid triangle\" height=\"50\" src=\"triangle.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Triangle</span></td><td><code class=\"literal\">Triangle</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180757\"><p><img alt=\"Check1 icon: a check mark\" height=\"50\" src=\"check1.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Check1</span></td><td><code class=\"literal\">Check1</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180770\"><p><img alt=\"Check2 icon: a check mark with slightly curved lines\" height=\"50\" src=\"check2.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Check2</span></td><td><code class=\"literal\">Check2</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180783\"><p><img alt=\"Check3 icon: the outline of a check mark\" height=\"50\" src=\"check3.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Check3</span></td><td><code class=\"literal\">Check3</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180796\"><p><img alt=\"Check4 icon: a check mark with a divot along its outline\" height=\"50\" src=\"check4.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Check4</span></td><td><code class=\"literal\">Check4</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180810\"><p><img alt=\"Ex1 icon: a cross mark\" height=\"50\" src=\"ex1.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Ex1</span></td><td><code class=\"literal\">Ex1</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180823\"><p><img alt=\"Ex2 icon: a cross mark with one curved line\" height=\"50\" src=\"ex2.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Ex2</span></td><td><code class=\"literal\">Ex2</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180836\"><p><img alt=\"Ex3 icon: the outline of a cross mark\" height=\"50\" src=\"ex3.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Ex3</span></td><td><code class=\"literal\">Ex3</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180849\"><p><img alt=\"Ex4 icon: a cross mark with a divot along the outline\" height=\"50\" src=\"ex4.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Ex4</span></td><td><code class=\"literal\">Ex4</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180862\"><p><img alt=\"Face icon: the outline of a face with a closed mouth in a straight line\" height=\"50\" src=\"face.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Face</span></td><td><code class=\"literal\">Face</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180875\"><p><img alt=\"Frown1 icon: the outline of a face with an open downturned mouth\" height=\"50\" src=\"frown1.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Frown1</span></td><td><code class=\"literal\">Frown1</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180888\"><p><img alt=\"Frown2 icon: the outline of a face with a closed downturned mouth\" height=\"50\" src=\"frown2.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Frown2</span></td><td><code class=\"literal\">Frown2</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180901\"><p><img alt=\"Smile1 icon: the outline of a face with an open upturned mouth\" height=\"50\" src=\"smile1.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Smile1</span></td><td><code class=\"literal\">Smile1</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180914\"><p><img alt=\"Smile2 icon: the outline of a face with a closed upturned mouth\" height=\"50\" src=\"smile2.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Smile2</span></td><td><code class=\"literal\">Smile2</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180927\"><p><img alt=\"Solid Face icon: a solid face with a closed mouth in a straight line\" height=\"50\" src=\"solid_face.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Solid Face</span></td><td><code class=\"literal\">SolidFace</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180940\"><p><img alt=\"Solid Frown1 icon: a solid face with an open downturned mouth\" height=\"50\" src=\"solid_frown1.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Solid Frown1</span></td><td><code class=\"literal\">SolidFrown1</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180954\"><p><img alt=\"Solid Frown2 icon: a closed downturned mouth\" height=\"50\" src=\"solid_frown2.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Solid Frown2</span></td><td><code class=\"literal\">SolidFrown2</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180967\"><p><img alt=\"Solid Smile1 icon: a solid face with an open upturned mouth\" height=\"50\" src=\"solid_smile1.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Solid Smile1</span></td><td><code class=\"literal\">SolidSmile1</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e180980\"><p><img alt=\"Solid Smile2 icon: a solid face with a closed upturned mouth\" height=\"50\" src=\"solid_smile2.png\" width=\"50\"/></p></div></div>\n</td><td><span class=\"block\">Solid Smile2</span></td><td><code class=\"literal\">SolidSmile2</code></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LabelPosition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Top'</code> | <code class=\"literal\">'Bottom'</code> |\n                            <code class=\"literal\">'Hide'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Top'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Opacity</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">1</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/lamp.html"
    },
    {
        "block_name": "MultiStateImage",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ScaleMode</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string or character\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Fill with fixed aspect ratio'</code> |\n                                    <code class=\"literal\">'Fixed'</code> | <code class=\"literal\">'Fill'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Fill with fixed aspect ratio'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">States</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> structure array</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LabelPosition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Top'</code> | <code class=\"literal\">'Bottom'</code> |\n                            <code class=\"literal\">'Hide'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Top'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/multistateimage.html"
    },
    {
        "block_name": "Linear Gauge",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/lineargauge.html"
    },
    {
        "block_name": "Circular Gauge",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/circulargauge.html"
    },
    {
        "block_name": "Half Gauge",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customhalfgauge.html"
    },
    {
        "block_name": "Display",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customdisplay.html"
    },
    {
        "block_name": "Quarter Gauge",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customquartergauge.html"
    },
    {
        "block_name": "Horizontal Gauge",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/horizontalgauge.html"
    },
    {
        "block_name": "Vertical Gauge",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/verticalgauge.html"
    },
    {
        "block_name": "Edit",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/edit.html"
    },
    {
        "block_name": "Knob",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ScaleType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string or character\n                        vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Linear'</code> | <code class=\"literal\">'Log'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Linear'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Limits</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">1x3</code> vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[0 -1 100]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Limits</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">1x3</code> vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[0 -1 100]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Limits</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">1x3</code> vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[0 -1 100]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LabelPosition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Top'</code> | <code class=\"literal\">'Bottom'</code> |\n                            <code class=\"literal\">'Hide'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Top'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/knob.html"
    },
    {
        "block_name": "Lamp",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> <a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customlamp.html"
    },
    {
        "block_name": "Slider",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ScaleType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string or character\n                        vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Linear'</code> | <code class=\"literal\">'Log'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Linear'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Limits</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">1x3</code> vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[0 -1 100]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Limits</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">1x3</code> vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[0 -1 100]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Limits</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">1x3</code> vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[0 -1 100]</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LabelPosition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Top'</code> | <code class=\"literal\">'Bottom'</code> |\n                            <code class=\"literal\">'Hide'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Top'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/slider.html"
    },
    {
        "block_name": "Push Button",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/pushbutton.html"
    },
    {
        "block_name": "Rotary Switch",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ],
            [
                "<tr><th>State Value</th><th>State Label</th></tr>",
                "<tr><td><code class=\"literal\">0</code></td><td><code class=\"literal\">Off</code></td></tr>",
                "<tr><td><code class=\"literal\">1</code></td><td><code class=\"literal\">Low</code></td></tr>",
                "<tr><td><code class=\"literal\">2</code></td><td><code class=\"literal\">Medium</code></td></tr>",
                "<tr><td><code class=\"literal\">3</code></td><td><code class=\"literal\">High</code></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong> <code class=\"literal\">UseEnumeratedDataType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string or character array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> <code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong> <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LabelPosition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Top'</code> | <code class=\"literal\">'Bottom'</code> |\n                            <code class=\"literal\">'Hide'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Top'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/rotaryswitch.html"
    },
    {
        "block_name": "Radio Button",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/radiobutton.html"
    },
    {
        "block_name": "Check Box",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/checkbox.html"
    },
    {
        "block_name": "Combo Box",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/combobox.html"
    },
    {
        "block_name": "Rocker Switch",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ],
            [
                "<tr><th>Position</th><th>State Value</th><th>State Label</th></tr>",
                "<tr><td><strong class=\"guilabel\">Top</strong></td><td><code class=\"literal\">0</code></td><td><code class=\"literal\">on</code></td></tr>",
                "<tr><td><strong class=\"guilabel\">Bottom</strong></td><td><code class=\"literal\">1</code></td><td><code class=\"literal\">off</code></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LabelPosition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Top'</code> | <code class=\"literal\">'Bottom'</code> |\n                            <code class=\"literal\">'Hide'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Top'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/rockerswitch.html"
    },
    {
        "block_name": "Callback Button",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ButtonType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string or character array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'Momentary'</code> | <code class=\"literal\">'Latch'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/callbackbutton.html"
    },
    {
        "block_name": "Toggle Switch",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ],
            [
                "<tr><th>Position</th><th>State Value</th><th>State Label</th></tr>",
                "<tr><td><strong class=\"guilabel\">Top</strong></td><td><code class=\"literal\">0</code></td><td><code class=\"literal\">on</code></td></tr>",
                "<tr><td><strong class=\"guilabel\">Bottom</strong></td><td><code class=\"literal\">1</code></td><td><code class=\"literal\">off</code></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LabelPosition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Top'</code> | <code class=\"literal\">'Bottom'</code> |\n                            <code class=\"literal\">'Hide'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Top'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/toggleswitch.html"
    },
    {
        "block_name": "Knob",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customknob.html"
    },
    {
        "block_name": "Slider Switch",
        "libraries": [
            "Simulink/Dashboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ],
            [
                "<tr><th>Position</th><th>State Value</th><th>State Label</th></tr>",
                "<tr><td><strong class=\"guilabel\">Left</strong></td><td><code class=\"literal\">0</code></td><td><code class=\"literal\">on</code></td></tr>",
                "<tr><td><strong class=\"guilabel\">Right</strong></td><td><code class=\"literal\">1</code></td><td><code class=\"literal\">off</code></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LabelPosition</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Top'</code> | <code class=\"literal\">'Bottom'</code> |\n                            <code class=\"literal\">'Hide'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Top'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/sliderswitch.html"
    },
    {
        "block_name": "Horizontal Slider",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/horizontalslider.html"
    },
    {
        "block_name": "Callback Button",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ButtonType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> string or character array</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong>\n<code class=\"literal\">'Momentary'</code> | <code class=\"literal\">'Latch'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customcallbackbutton.html"
    },
    {
        "block_name": "Rotary Switch",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customrotaryswitch.html"
    },
    {
        "block_name": "Push Button",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/custompushbutton.html"
    },
    {
        "block_name": "Vertical Slider",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks",
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/verticalslider.html"
    },
    {
        "block_name": "Rocker Switch",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customrockerswitch.html"
    },
    {
        "block_name": "Slider Switch",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customsliderswitch.html"
    },
    {
        "block_name": "Scope",
        "libraries": [
            "Simulink/Commonly Used Blocks",
            "Simulink/Sinks",
            "HDL Coder/Commonly Used Blocks",
            "HDL Coder/Sinks"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/scope.html"
    },
    {
        "block_name": "Toggle Switch",
        "libraries": [
            "Simulink/Dashboard/Customizable Blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Binding</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.hmi.signalspecification.html\"><code class=\"class\">Simulink.HMI.SignalSpecification</code></a></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">[]</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/customtoggleswitch.html"
    },
    {
        "block_name": "Floating Scope and Scope Viewer",
        "libraries": [
            "Simulink/Sinks",
            "HDL Coder/Sinks"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/scopeviewer.html"
    },
    {
        "block_name": "Function Caller",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FunctionPrototype</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'y=f(u)'</code> | <code class=\"literal\">'&lt;function\n                                    prototype&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'y=f(u)'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InputArgumentSpecifications</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">''</code> | <code class=\"literal\">'&lt;MATLAB\n                                    expression&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OutputArgumentSpecifications</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">''</code> | <code class=\"literal\">'&lt;MATLAB\n                                    expression&gt;'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'-1'</code>\n                                | <em class=\"replaceable\"><code>sample time</code></em>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'-1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AsynchronousCaller</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/functioncaller.html"
    },
    {
        "block_name": "Level-2 MATLAB S-Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FunctionName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'matlabfile'</code> | S-Function name</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'matlabfile'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Parameters</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> values of block\n                                parameters</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">' '</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/level2matlabsfunction.html"
    },
    {
        "block_name": "MATLAB Function",
        "libraries": [
            "Simulink/User-Defined Functions",
            "HDL Coder/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">\"FromPortIcon\"</code> (default) | <code class=\"literal\">\"none\"</code> | <code class=\"literal\">\"FromPortBlockName\"</code> | <code class=\"literal\">\"SignalName\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/matlabfunction.html"
    },
    {
        "block_name": "MATLAB System",
        "libraries": [
            "Simulink/User-Defined Functions",
            "HDL Coder/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">System</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> name of the System object</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">' '</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                    Parameter:</strong><code class=\"literal\">SaturateOnIntegerOverflow</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/matlabsystem.html"
    },
    {
        "block_name": "Record",
        "libraries": [
            "Simulink/Sinks",
            "Simulink/Sinks",
            "HDL Coder/Sinks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">'NumPorts'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">integer</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong> integer in the range\n                    [<code class=\"literal\">1</code>,<code class=\"literal\">100</code>]</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">1</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/record.html"
    },
    {
        "block_name": "S-Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FunctionName</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> name of the\n                                S-function</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'system'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Parameters</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> S-function\n                                parameters</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">' '</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SFunctionModules</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> character vector of file\n                                names</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">' '</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/sfunction.html"
    },
    {
        "block_name": "S-Function Builder",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/sfunctionbuilder.html"
    },
    {
        "block_name": "Simulink Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">'FromPortIcon'</code> (default) | <code class=\"literal\">'FromPortBlockName'</code> | <code class=\"literal\">'SignalName'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/simulinkfunction.html"
    },
    {
        "block_name": "FMU",
        "libraries": [
            "Simulink Extras/FMU Import"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FMUName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>  name of an FMU, with\n                                or without file extension</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">' '</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/ref_extras/fmu.html"
    },
    {
        "block_name": "S-Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FunctionName</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> name of the\n                                S-function</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'system'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Parameters</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> S-function\n                                parameters</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">' '</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SFunctionModules</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> character vector of file\n                                names</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">' '</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/sfunction.html"
    },
    {
        "block_name": "Fcn",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Expr</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> mathematical\n                                expression</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'sin(u(1)*exp(2.3*(-u(2))))'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/fcn.html"
    },
    {
        "block_name": "MATLAB Function",
        "libraries": [
            "Simulink/User-Defined Functions",
            "HDL Coder/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ShowPortLabels</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">\"FromPortIcon\"</code> (default) | <code class=\"literal\">\"none\"</code> | <code class=\"literal\">\"FromPortBlockName\"</code> | <code class=\"literal\">\"SignalName\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/matlabfunction.html"
    },
    {
        "block_name": "MATLAB System",
        "libraries": [
            "Simulink/User-Defined Functions",
            "HDL Coder/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">System</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> name of the System object</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">' '</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                    Parameter:</strong><code class=\"literal\">SaturateOnIntegerOverflow</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/matlabsystem.html"
    },
    {
        "block_name": "S-Function Builder",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/slref/sfunctionbuilder.html"
    },
    {
        "block_name": "Ambient Temperature Sensor",
        "libraries": [
            "Simulink Support Package for Android Devices/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/ambienttemperaturesensor.html"
    },
    {
        "block_name": "Accelerometer",
        "libraries": [
            "Simulink Support Package for Android Devices/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/accelerometer.html"
    },
    {
        "block_name": "Gyroscope",
        "libraries": [
            "Simulink Support Package for Android Devices/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/gyroscope.html"
    },
    {
        "block_name": "C Caller",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FunctionName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector or string\n                scalar</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FunctionPortSpecification</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong>\n<a href=\"simulink.customcode.functionportspecification.html\"><code class=\"class\">FunctionPortSpecification</code></a> object</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">AvailableFunctions</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> cell array </span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                  <code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string scalar or character\n                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">\"-1\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/ccaller.html"
    },
    {
        "block_name": "C Function",
        "libraries": [
            "Simulink/User-Defined Functions"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">CustomCodeSettingLocation</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value:</strong><code class=\"literal\">'BlockSettings'</code> |\n                  <code class=\"literal\">'ModelConfigurationParameters'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'BlockSettings'</code></span></td></tr>"
            ],
            [
                "<tr><th>Custom type</th><th>Specification in <strong class=\"guilabel\">Type</strong> field</th></tr>",
                "<tr><td>C++ class</td><td><code class=\"literal\">Class:\n                            </code><em class=\"replaceable\"><code>C++ClassName</code></em></td></tr>",
                "<tr><td><code class=\"literal\">Simulink.Bus</code></td><td><code class=\"literal\">Bus:\n                            </code><em class=\"replaceable\"><code>BusTypeName</code></em></td></tr>",
                "<tr><td><code class=\"literal\">Simulink.Enum</code></td><td><code class=\"literal\">Enum:\n                            </code><em class=\"replaceable\"><code>EnumTypeName</code></em></td></tr>",
                "<tr><td><code class=\"literal\">Simulink.AliasType</code></td><td><em class=\"replaceable\"><code>AliasTypeName</code></em></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                  <code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string scalar or character\n                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">\"-1\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                  <code class=\"literal\">CustomCodeIsMultiInstantiable</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string scalar or character\n                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/slref/cfunction.html"
    },
    {
        "block_name": "Humidity Sensor",
        "libraries": [
            "Simulink Support Package for Android Devices/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/humiditysensor.html"
    },
    {
        "block_name": "Light Sensor",
        "libraries": [
            "Simulink Support Package for Android Devices/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/lightsensor.html"
    },
    {
        "block_name": "Magnetometer",
        "libraries": [
            "Simulink Support Package for Android Devices/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/magnetometer.html"
    },
    {
        "block_name": "Location Sensor",
        "libraries": [
            "Simulink Support Package for Android Devices/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/locationsensor.html"
    },
    {
        "block_name": "Pressure Sensor",
        "libraries": [
            "Simulink Support Package for Android Devices/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/pressuresensor.html"
    },
    {
        "block_name": "Orientation",
        "libraries": [
            "Simulink Support Package for Android Devices/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/orientation.html"
    },
    {
        "block_name": "UDP Send",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/udpsend.html"
    },
    {
        "block_name": "BLE Send",
        "libraries": [
            "Simulink Support Package for Android Devices/Communication"
        ],
        "parameters": [
            [
                "<tr><th>Service</th><th>Characteristic</th></tr>",
                "<tr><td rowspan=\"5\">Generic Access</td><td>Device Name</td></tr>",
                "<tr><td>Appearance</td></tr>",
                "<tr><td>Peripheral Privacy Flag</td></tr>",
                "<tr><td>Reconnection Address</td></tr>",
                "<tr><td>Peripheral Preferred Connection Parameters</td></tr>",
                "<tr><td>Generic Attribute</td><td>Service Changed</td></tr>",
                "<tr><td rowspan=\"4\">Glucose service</td><td>Glucose Measurement</td></tr>",
                "<tr><td>Glucose Measurement Context </td></tr>",
                "<tr><td>Glucose Feature</td></tr>",
                "<tr><td>Record Access Control Point</td></tr>",
                "<tr><td rowspan=\"4\">Health Thermometer service</td><td>Temperature Measurement</td></tr>",
                "<tr><td>Temperature Type</td></tr>",
                "<tr><td>Intermediate Temperature</td></tr>",
                "<tr><td>Measurement Interval</td></tr>",
                "<tr><td rowspan=\"3\">Heart Rate service</td><td>Heart Rate Measurement</td></tr>",
                "<tr><td>Body Sensor Location</td></tr>",
                "<tr><td>Heart Rate Control Point</td></tr>",
                "<tr><td rowspan=\"3\">Blood pressure service</td><td>Blood Pressure Measurement</td></tr>",
                "<tr><td>Intermediate Cuff Pressure</td></tr>",
                "<tr><td>Blood Pressure Feature</td></tr>",
                "<tr><td rowspan=\"4\">Running Speed and Cadence</td><td>RSC Measurement</td></tr>",
                "<tr><td>RSC Feature</td></tr>",
                "<tr><td>SC Control Point</td></tr>",
                "<tr><td>Sensor Location</td></tr>",
                "<tr><td rowspan=\"5\">Cycling Power service</td><td>Sensor Location</td></tr>",
                "<tr><td>Cycling Power Measurement</td></tr>",
                "<tr><td>Cycling Power Vector</td></tr>",
                "<tr><td>Cycling Power Feature</td></tr>",
                "<tr><td>Cycling Power Control Point</td></tr>",
                "<tr><td rowspan=\"5\">Location and Navigation</td><td>Location and Navigation Characteristic</td></tr>",
                "<tr><td>Navigation</td></tr>",
                "<tr><td>Position Quality</td></tr>",
                "<tr><td>LN Feature</td></tr>",
                "<tr><td>LN Control Point</td></tr>",
                "<tr><td rowspan=\"20\">Environmental Sensing</td><td>Magnetic Declination</td></tr>",
                "<tr><td>Elevation</td></tr>",
                "<tr><td>Pressure</td></tr>",
                "<tr><td>Temperature</td></tr>",
                "<tr><td>Humidity</td></tr>",
                "<tr><td>True Wind Speed</td></tr>",
                "<tr><td>True Wind Direction</td></tr>",
                "<tr><td>Apparent Wind Speed</td></tr>",
                "<tr><td>Apparent Wind Direction</td></tr>",
                "<tr><td>Gust Factor</td></tr>",
                "<tr><td>Pollen Concentration</td></tr>",
                "<tr><td>UV Index</td></tr>",
                "<tr><td>Irradiance</td></tr>",
                "<tr><td>Rainfall</td></tr>",
                "<tr><td>Wind Chill</td></tr>",
                "<tr><td>Heat Index</td></tr>",
                "<tr><td>Dew Point</td></tr>",
                "<tr><td>Magnetic Flux Density - 2-D</td></tr>",
                "<tr><td>Magnetic Flux Density - 3-D</td></tr>",
                "<tr><td>Barometric pressure Trend</td></tr>",
                "<tr><td rowspan=\"2\">Body Composition service</td><td>Body Composition Feature</td></tr>",
                "<tr><td>Body Composition Measurement</td></tr>",
                "<tr><td rowspan=\"2\">Weight Scale</td><td>Weight Scale Measurement</td></tr>",
                "<tr><td>Weight Scale Feature</td></tr>",
                "<tr><td rowspan=\"4\">Continuous Glucose Monitoring Service</td><td>CGM Measurement</td></tr>",
                "<tr><td>CGM Feature</td></tr>",
                "<tr><td>CGM Status</td></tr>",
                "<tr><td>CDM Session start Time</td></tr>",
                "<tr><td rowspan=\"8\">Indoor Positioning</td><td>Indoor Positioning Configuration</td></tr>",
                "<tr><td>Latitude</td></tr>",
                "<tr><td>Longitude</td></tr>",
                "<tr><td>Local North Coordinate</td></tr>",
                "<tr><td>Local East Coordinate</td></tr>",
                "<tr><td>Altitude</td></tr>",
                "<tr><td>Uncertainty</td></tr>",
                "<tr><td>Location Name</td></tr>",
                "<tr><td rowspan=\"4\">Pulse Oximeter Service</td><td>Record Access Control Point</td></tr>",
                "<tr><td>PLX Spot-Check Measurement</td></tr>",
                "<tr><td>PLX Continuous Measurement</td></tr>",
                "<tr><td>PLX Features</td></tr>",
                "<tr><td rowspan=\"11\">Fitness Machine Service</td><td>Treadmill Data</td></tr>",
                "<tr><td>Cross Trainer Data</td></tr>",
                "<tr><td>Step Climber</td></tr>",
                "<tr><td>Stair Climber</td></tr>",
                "<tr><td>Rower Data</td></tr>",
                "<tr><td>Indoor Bike Data</td></tr>",
                "<tr><td>Supported Speed Range</td></tr>",
                "<tr><td>Supported Inclination Range</td></tr>",
                "<tr><td>Supported Resistance Level Range</td></tr>",
                "<tr><td>Supported Heart Range</td></tr>",
                "<tr><td>Supported Power Range</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/blesend.html"
    },
    {
        "block_name": "UDP Receive",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/udpreceive.html"
    },
    {
        "block_name": "BLE Receive",
        "libraries": [
            "Simulink Support Package for Android Devices/Communication"
        ],
        "parameters": [
            [
                "<tr><th>Service</th><th>Characteristic</th></tr>",
                "<tr><td rowspan=\"5\">Generic Access</td><td>Device Name</td></tr>",
                "<tr><td>Appearance</td></tr>",
                "<tr><td>Peripheral Privacy Flag</td></tr>",
                "<tr><td>Reconnection Address</td></tr>",
                "<tr><td>Peripheral Preferred Connection Parameters</td></tr>",
                "<tr><td>Generic Attribute</td><td>Service Changed</td></tr>",
                "<tr><td rowspan=\"4\">Glucose service</td><td>Glucose Measurement</td></tr>",
                "<tr><td>Glucose Measurement Context </td></tr>",
                "<tr><td>Glucose Feature</td></tr>",
                "<tr><td>Record Access Control Point</td></tr>",
                "<tr><td rowspan=\"4\">Health Thermometer service</td><td>Temperature Measurement</td></tr>",
                "<tr><td>Temperature Type</td></tr>",
                "<tr><td>Intermediate Temperature</td></tr>",
                "<tr><td>Measurement Interval</td></tr>",
                "<tr><td rowspan=\"3\">Heart Rate service</td><td>Heart Rate Measurement</td></tr>",
                "<tr><td>Body Sensor Location</td></tr>",
                "<tr><td>Heart Rate Control Point</td></tr>",
                "<tr><td rowspan=\"3\">Blood pressure service</td><td>Blood Pressure Measurement</td></tr>",
                "<tr><td>Intermediate Cuff Pressure</td></tr>",
                "<tr><td>Blood Pressure Feature</td></tr>",
                "<tr><td rowspan=\"4\">Running Speed and Cadence</td><td>RSC Measurement</td></tr>",
                "<tr><td>RSC Feature</td></tr>",
                "<tr><td>SC Control Point</td></tr>",
                "<tr><td>Sensor Location</td></tr>",
                "<tr><td rowspan=\"5\">Cycling Power service</td><td>Sensor Location</td></tr>",
                "<tr><td>Cycling Power Measurement</td></tr>",
                "<tr><td>Cycling Power Vector</td></tr>",
                "<tr><td>Cycling Power Feature</td></tr>",
                "<tr><td>Cycling Power Control Point</td></tr>",
                "<tr><td rowspan=\"5\">Location and Navigation</td><td>Location and Navigation Characteristic</td></tr>",
                "<tr><td>Navigation</td></tr>",
                "<tr><td>Position Quality</td></tr>",
                "<tr><td>LN Feature</td></tr>",
                "<tr><td>LN Control Point</td></tr>",
                "<tr><td rowspan=\"20\">Environmental Sensing</td><td>Magnetic Declination</td></tr>",
                "<tr><td>Elevation</td></tr>",
                "<tr><td>Pressure</td></tr>",
                "<tr><td>Temperature</td></tr>",
                "<tr><td>Humidity</td></tr>",
                "<tr><td>True Wind Speed</td></tr>",
                "<tr><td>True Wind Direction</td></tr>",
                "<tr><td>Apparent Wind Speed</td></tr>",
                "<tr><td>Apparent Wind Direction</td></tr>",
                "<tr><td>Gust Factor</td></tr>",
                "<tr><td>Pollen Concentration</td></tr>",
                "<tr><td>UV Index</td></tr>",
                "<tr><td>Irradiance</td></tr>",
                "<tr><td>Rainfall</td></tr>",
                "<tr><td>Wind Chill</td></tr>",
                "<tr><td>Heat Index</td></tr>",
                "<tr><td>Dew Point</td></tr>",
                "<tr><td>Magnetic Flux Density - 2-D</td></tr>",
                "<tr><td>Magnetic Flux Density - 3-D</td></tr>",
                "<tr><td>Barometric pressure Trend</td></tr>",
                "<tr><td rowspan=\"2\">Body Composition service</td><td>Body Composition Feature</td></tr>",
                "<tr><td>Body Composition Measurement</td></tr>",
                "<tr><td rowspan=\"2\">Weight Scale</td><td>Weight Scale Measurement</td></tr>",
                "<tr><td>Weight Scale Feature</td></tr>",
                "<tr><td rowspan=\"4\">Continuous Glucose Monitoring Service</td><td>CGM Measurement</td></tr>",
                "<tr><td>CGM Feature</td></tr>",
                "<tr><td>CGM Status</td></tr>",
                "<tr><td>CDM Session start Time</td></tr>",
                "<tr><td rowspan=\"8\">Indoor Positioning</td><td>Indoor Positioning Configuration</td></tr>",
                "<tr><td>Latitude</td></tr>",
                "<tr><td>Longitude</td></tr>",
                "<tr><td>Local North Coordinate</td></tr>",
                "<tr><td>Local East Coordinate</td></tr>",
                "<tr><td>Altitude</td></tr>",
                "<tr><td>Uncertainty</td></tr>",
                "<tr><td>Location Name</td></tr>",
                "<tr><td rowspan=\"4\">Pulse Oximeter Service</td><td>Record Access Control Point</td></tr>",
                "<tr><td>PLX Spot-Check Measurement</td></tr>",
                "<tr><td>PLX Continuous Measurement</td></tr>",
                "<tr><td>PLX Features</td></tr>",
                "<tr><td rowspan=\"11\">Fitness Machine Service</td><td>Treadmill Data</td></tr>",
                "<tr><td>Cross Trainer Data</td></tr>",
                "<tr><td>Step Climber</td></tr>",
                "<tr><td>Stair Climber</td></tr>",
                "<tr><td>Rower Data</td></tr>",
                "<tr><td>Indoor Bike Data</td></tr>",
                "<tr><td>Supported Speed Range</td></tr>",
                "<tr><td>Supported Inclination Range</td></tr>",
                "<tr><td>Supported Resistance Level Range</td></tr>",
                "<tr><td>Supported Heart Range</td></tr>",
                "<tr><td>Supported Power Range</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/blereceive.html"
    },
    {
        "block_name": "ThingSpeak Read",
        "libraries": [
            "Simulink Support Package for Android Devices/Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/thingspeakread.html"
    },
    {
        "block_name": "ThingSpeak Write",
        "libraries": [
            "Simulink Support Package for Android Devices/Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/thingspeakwrite.html"
    },
    {
        "block_name": "TCP/IP Send",
        "libraries": [
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Support Package for Raspberry Pi Hardware/Network",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Support Package for Raspberry Pi Hardware/Network",
            "Simulink Support Package for Raspberry Pi Hardware/Network",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Support Package for Raspberry Pi Hardware/Network"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/tcpipsend.html"
    },
    {
        "block_name": "TCP/IP Receive",
        "libraries": [
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Support Package for Raspberry Pi Hardware/Network",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Support Package for Raspberry Pi Hardware/Network",
            "Simulink Support Package for Raspberry Pi Hardware/Network",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Support Package for Raspberry Pi Hardware/Network"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/tcpipreceive.html"
    },
    {
        "block_name": "Serial Transmit",
        "libraries": [
            "Simulink Support Package for Android Devices/Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/serialtransmit.html"
    },
    {
        "block_name": "Serial Receive",
        "libraries": [
            "Simulink Support Package for Android Devices/Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/serialreceive.html"
    },
    {
        "block_name": "TalkBack Write",
        "libraries": [
            "Simulink Support Package for Android Devices/Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/talkbackwrite.html"
    },
    {
        "block_name": "TalkBack Read",
        "libraries": [
            "Simulink Support Package for Android Devices/Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/talkbackread.html"
    },
    {
        "block_name": "MQTT Subscribe",
        "libraries": [
            "Simulink Support Package for Android Devices/Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/mqttsubscribe.html"
    },
    {
        "block_name": "HTTP Client",
        "libraries": [
            "Simulink Support Package for Android Devices/Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/httpclient.html"
    },
    {
        "block_name": "MQTT Publish",
        "libraries": [
            "Simulink Support Package for Android Devices/Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/mqttpublish.html"
    },
    {
        "block_name": "Audio File Read",
        "libraries": [
            "Simulink Support Package for Android Devices/Audio & Video"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/audiofileread.html"
    },
    {
        "block_name": "Audio File Write",
        "libraries": [
            "Simulink Support Package for Android Devices/Audio & Video"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/audiofilewrite.html"
    },
    {
        "block_name": "Audio Capture",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/audiocapture.html"
    },
    {
        "block_name": "Video Display",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/videodisplay.html"
    },
    {
        "block_name": "Audio Playback",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/audioplayback.html"
    },
    {
        "block_name": "Camera",
        "libraries": [
            "Simulink Support Package for Android Devices/Audio & Video"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/camera.html"
    },
    {
        "block_name": "Data Display",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/datadisplay.html"
    },
    {
        "block_name": "Slider",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/slider.html"
    },
    {
        "block_name": "Button",
        "libraries": [
            "Simulink Support Package for Android Devices/User Interface"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/button.html"
    },
    {
        "block_name": "FromApp",
        "libraries": [
            "Simulink Support Package for Android Devices/Advanced"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/fromapp.html"
    },
    {
        "block_name": "Data Input",
        "libraries": [
            "Simulink Support Package for Android Devices/User Interface"
        ],
        "parameters": [
            [
                "<tr><th>When Input Is a Character Vector</th><th>When Input Is Numeric</th></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e7914\"><p class=\"listimage\"><img height=\"535\" src=\"equal_char_data_input.png\" width=\"302\"/></p></div></div>\n</td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e7921\"><p class=\"listimage\"><img height=\"535\" src=\"data_type_keyboard.png\" width=\"302\"/></p></div></div>\n</td></tr>"
            ],
            [
                "<tr><th>Length of Data in Data Input Field &lt; Number of\n                                        Characters </th><th>Length of Data in Data Input Field = Number of Characters </th><th>Length of Data in Data Input Field &gt; Number of\n                                        Characters</th></tr>",
                "<tr><td><strong class=\"guilabel\">Number of Characters</strong> =\n                                            <code class=\"literal\">8</code></td><td><strong class=\"guilabel\">Number of Characters</strong> =\n                                            <code class=\"literal\">5</code></td><td><strong class=\"guilabel\">Number of Characters</strong> =\n                                            <code class=\"literal\">2</code></td></tr>",
                "<tr><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e8043\"><p><img height=\"535\" src=\"less_char_data_input.png\" width=\"302\"/></p></div></div>\n</td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e8050\"><p><img height=\"535\" src=\"equal_char_data_input.png\" width=\"302\"/></p></div></div>\n</td><td>\n<div class=\"informalfigure\"><div class=\"mediaobject\" id=\"d126e8057\"><p><img height=\"535\" src=\"more_char_data_input.png\" width=\"302\"/></p></div></div>\n</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/datainput.html"
    },
    {
        "block_name": "Analog Input",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/analoginputcommon.html"
    },
    {
        "block_name": "CAN Transmit",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/cantransmit.html"
    },
    {
        "block_name": "Analog Output",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/analogoutput.html"
    },
    {
        "block_name": "ToApp",
        "libraries": [
            "Simulink Support Package for Android Devices/Advanced"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/android_ref/toapp.html"
    },
    {
        "block_name": "Continuous Servo Write",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/continuousservowrite.html"
    },
    {
        "block_name": "CAN Receive",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/canreceive.html"
    },
    {
        "block_name": "Digital Input",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/digitalinput.html"
    },
    {
        "block_name": "Digital Output",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/digitaloutput.html"
    },
    {
        "block_name": "I2C Read",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [
            [
                "<tr><th>Status Value</th><th>Status Description</th></tr>",
                "<tr><td><code class=\"literal\">0</code></td><td><code class=\"literal\">SUCCESS</code></td></tr>",
                "<tr><td><code class=\"literal\">1</code></td><td><code class=\"literal\">BUSY</code></td></tr>",
                "<tr><td><code class=\"literal\">2</code></td><td><code class=\"literal\">ARBITRATION_LOST</code></td></tr>",
                "<tr><td><code class=\"literal\">4</code></td><td><code class=\"literal\">NO_ACKNOWLEDGE</code></td></tr>",
                "<tr><td><code class=\"literal\">8</code></td><td><code class=\"literal\">BUS_ERROR</code></td></tr>",
                "<tr><td><code class=\"literal\">16</code></td><td><code class=\"literal\">BUS_NOT_IN_USE</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/i2ccontrollerread.html"
    },
    {
        "block_name": "I2C Write",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [
            [
                "<tr><th>Status value</th><th>Status description</th></tr>",
                "<tr><td><code class=\"literal\">0</code></td><td><code class=\"literal\">SUCCESS</code></td></tr>",
                "<tr><td><code class=\"literal\">1</code></td><td><code class=\"literal\">BUSY</code></td></tr>",
                "<tr><td><code class=\"literal\">2</code></td><td><code class=\"literal\">ARBITRATION_LOST</code></td></tr>",
                "<tr><td><code class=\"literal\">4</code></td><td><code class=\"literal\">NO_ACKNOWLEDGE</code></td></tr>",
                "<tr><td><code class=\"literal\">8</code></td><td><code class=\"literal\">BUS_ERROR</code></td></tr>",
                "<tr><td><code class=\"literal\">16</code></td><td><code class=\"literal\">BUS_NOT_IN_USE</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/i2ccontrollerwrite.html"
    },
    {
        "block_name": "SPI WriteRead",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/spiwriteread.html"
    },
    {
        "block_name": "PWM",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/pwmcommon.html"
    },
    {
        "block_name": "Serial Receive",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/serialreceive.html"
    },
    {
        "block_name": "Serial Transmit",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [
            [
                "<tr><th>Type of ASCII Character</th><th>Example ASCII Character</th><th>MATLAB<sup>\u00ae</sup> Command</th><th>Parameter Value</th></tr>",
                "<tr><td>Special character</td><td><code class=\"literal\">\"#\"</code></td><td><code class=\"literal\">uint8('#')</code></td><td><code class=\"literal\">[35]</code></td></tr>",
                "<tr><td>Numeric</td><td><code class=\"literal\">\"81\"</code></td><td><code class=\"literal\">uint8('81')</code></td><td><code class=\"literal\">[56 49]</code></td></tr>",
                "<tr><td>Alphabet</td><td><code class=\"literal\">\"Start\"</code></td><td><code class=\"literal\">uint8('Start')</code></td><td><code class=\"literal\">[83 116 97 114 116]</code></td></tr>"
            ],
            [
                "<tr><th>Type of ASCII Character</th><th>Example ASCII Character</th><th>MATLAB Command</th><th>Parameter Value</th></tr>",
                "<tr><td>Special character</td><td><code class=\"literal\">\"#\"</code></td><td><code class=\"literal\">uint8('#')</code></td><td><code class=\"literal\">[35]</code></td></tr>",
                "<tr><td>Numeric</td><td><code class=\"literal\">\"81\"</code></td><td><code class=\"literal\">uint8('81')</code></td><td><code class=\"literal\">[56 49]</code></td></tr>",
                "<tr><td>Alphabet</td><td><code class=\"literal\">\"End\"</code></td><td><code class=\"literal\">uint8('End')</code></td><td><code class=\"literal\">[69 110 100]</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/serialtransmit.html"
    },
    {
        "block_name": "Standard Servo Write",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/standardservowrite.html"
    },
    {
        "block_name": "Standard Servo Read",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/standardservoread.html"
    },
    {
        "block_name": "External Interrupt",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [
            [
                "<tr><th>Mode</th><th>Interrupt Trigger Condition</th></tr>",
                "<tr><td><code class=\"guidropdown\">LOW</code></td><td>The pin is low.</td></tr>",
                "<tr><td><code class=\"guidropdown\">CHANGE</code></td><td>The pin value changes.</td></tr>",
                "<tr><td><code class=\"guidropdown\">RISING</code></td><td>The pin value goes from low to high.</td></tr>",
                "<tr><td><code class=\"guidropdown\">FALLING</code></td><td>The pin value goes from high to low.</td></tr>",
                "<tr><td><code class=\"guidropdown\">HIGH</code></td><td>The pin value is high.</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/externalinterrupt.html"
    },
    {
        "block_name": "SD Card File Read",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/sdcardfileread.html"
    },
    {
        "block_name": "Modbus RS485 Server Read",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/modbusrs485serverread.html"
    },
    {
        "block_name": "Modbus RS485 Client Read",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/modbusrs485clientread.html"
    },
    {
        "block_name": "Input Capture",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/inputcapture.html"
    },
    {
        "block_name": "Modbus RS485 Client Write",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/modbusrs485clientwrite.html"
    },
    {
        "block_name": "Modbus RS485 Server Write",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/modbusrs485serverwrite.html"
    },
    {
        "block_name": "BLE Receive",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [
            [
                "<tr><th>Service</th><th>Characteristic</th></tr>",
                "<tr><td rowspan=\"5\">Generic Access</td><td>Device Name</td></tr>",
                "<tr><td>Appearance</td></tr>",
                "<tr><td>Peripheral Privacy Flag</td></tr>",
                "<tr><td>Reconnection Address</td></tr>",
                "<tr><td>Peripheral Preferred Connection Parameters</td></tr>",
                "<tr><td>Generic Attribute</td><td>Service Changed</td></tr>",
                "<tr><td rowspan=\"4\">Glucose service</td><td>Glucose Measurement</td></tr>",
                "<tr><td>Glucose Measurement Context </td></tr>",
                "<tr><td>Glucose Feature</td></tr>",
                "<tr><td>Record Access Control Point</td></tr>",
                "<tr><td rowspan=\"4\">Health Thermometer service</td><td>Temperature Measurement</td></tr>",
                "<tr><td>Temperature Type</td></tr>",
                "<tr><td>Intermediate Temperature</td></tr>",
                "<tr><td>Measurement Interval</td></tr>",
                "<tr><td rowspan=\"3\">Heart Rate service</td><td>Heart Rate Measurement</td></tr>",
                "<tr><td>Body Sensor Location</td></tr>",
                "<tr><td>Heart Rate Control Point</td></tr>",
                "<tr><td rowspan=\"3\">Blood pressure service</td><td>Blood Pressure Measurement</td></tr>",
                "<tr><td>Intermediate Cuff Pressure</td></tr>",
                "<tr><td>Blood Pressure Feature</td></tr>",
                "<tr><td rowspan=\"4\">Running Speed and Cadence</td><td>RSC Measurement</td></tr>",
                "<tr><td>RSC Feature</td></tr>",
                "<tr><td>SC Control Point</td></tr>",
                "<tr><td>Sensor Location</td></tr>",
                "<tr><td rowspan=\"5\">Cycling Power service</td><td>Sensor Location</td></tr>",
                "<tr><td>Cycling Power Measurement</td></tr>",
                "<tr><td>Cycling Power Vector</td></tr>",
                "<tr><td>Cycling Power Feature</td></tr>",
                "<tr><td>Cycling Power Control Point</td></tr>",
                "<tr><td rowspan=\"5\">Location and Navigation</td><td>Location and Navigation Characteristic</td></tr>",
                "<tr><td>Navigation</td></tr>",
                "<tr><td>Position Quality</td></tr>",
                "<tr><td>LN Feature</td></tr>",
                "<tr><td>LN Control Point</td></tr>",
                "<tr><td rowspan=\"20\">Environmental Sensing</td><td>Magnetic Declination</td></tr>",
                "<tr><td>Elevation</td></tr>",
                "<tr><td>Pressure</td></tr>",
                "<tr><td>Temperature</td></tr>",
                "<tr><td>Humidity</td></tr>",
                "<tr><td>True Wind Speed</td></tr>",
                "<tr><td>True Wind Direction</td></tr>",
                "<tr><td>Apparent Wind Speed</td></tr>",
                "<tr><td>Apparent Wind Direction</td></tr>",
                "<tr><td>Gust Factor</td></tr>",
                "<tr><td>Pollen Concentration</td></tr>",
                "<tr><td>UV Index</td></tr>",
                "<tr><td>Irradiance</td></tr>",
                "<tr><td>Rainfall</td></tr>",
                "<tr><td>Wind Chill</td></tr>",
                "<tr><td>Heat Index</td></tr>",
                "<tr><td>Dew Point</td></tr>",
                "<tr><td>Magnetic Flux Density - 2-D</td></tr>",
                "<tr><td>Magnetic Flux Density - 3-D</td></tr>",
                "<tr><td>Barometric pressure Trend</td></tr>",
                "<tr><td rowspan=\"2\">Body Composition service</td><td>Body Composition Feature</td></tr>",
                "<tr><td>Body Composition Measurement</td></tr>",
                "<tr><td rowspan=\"2\">Weight Scale</td><td>Weight Scale Measurement</td></tr>",
                "<tr><td>Weight Scale Feature</td></tr>",
                "<tr><td rowspan=\"4\">Continuous Glucose Monitoring Service</td><td>CGM Measurement</td></tr>",
                "<tr><td>CGM Feature</td></tr>",
                "<tr><td>CGM Status</td></tr>",
                "<tr><td>CDM Session start Time</td></tr>",
                "<tr><td rowspan=\"8\">Indoor Positioning</td><td>Indoor Positioning Configuration</td></tr>",
                "<tr><td>Latitude</td></tr>",
                "<tr><td>Longitude</td></tr>",
                "<tr><td>Local North Coordinate</td></tr>",
                "<tr><td>Local East Coordinate</td></tr>",
                "<tr><td>Altitude</td></tr>",
                "<tr><td>Uncertainty</td></tr>",
                "<tr><td>Location Name</td></tr>",
                "<tr><td rowspan=\"4\">Pulse Oximeter Service</td><td>Record Access Control Point</td></tr>",
                "<tr><td>PLX Spot-Check Measurement</td></tr>",
                "<tr><td>PLX Continuous Measurement</td></tr>",
                "<tr><td>PLX Features</td></tr>",
                "<tr><td rowspan=\"11\">Fitness Machine Service</td><td>Treadmill Data</td></tr>",
                "<tr><td>Cross Trainer Data</td></tr>",
                "<tr><td>Step Climber</td></tr>",
                "<tr><td>Stair Climber</td></tr>",
                "<tr><td>Rower Data</td></tr>",
                "<tr><td>Indoor Bike Data</td></tr>",
                "<tr><td>Supported Speed Range</td></tr>",
                "<tr><td>Supported Inclination Range</td></tr>",
                "<tr><td>Supported Resistance Level Range</td></tr>",
                "<tr><td>Supported Heart Range</td></tr>",
                "<tr><td>Supported Power Range</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/blereceive.html"
    },
    {
        "block_name": "BLE Send",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [
            [
                "<tr><th>Service</th><th>Characteristic</th></tr>",
                "<tr><td rowspan=\"5\">Generic Access</td><td>Device Name</td></tr>",
                "<tr><td>Appearance</td></tr>",
                "<tr><td>Peripheral Privacy Flag</td></tr>",
                "<tr><td>Reconnection Address</td></tr>",
                "<tr><td>Peripheral Preferred Connection Parameters</td></tr>",
                "<tr><td>Generic Attribute</td><td>Service Changed</td></tr>",
                "<tr><td rowspan=\"4\">Glucose service</td><td>Glucose Measurement</td></tr>",
                "<tr><td>Glucose Measurement Context </td></tr>",
                "<tr><td>Glucose Feature</td></tr>",
                "<tr><td>Record Access Control Point</td></tr>",
                "<tr><td rowspan=\"4\">Health Thermometer service</td><td>Temperature Measurement</td></tr>",
                "<tr><td>Temperature Type</td></tr>",
                "<tr><td>Intermediate Temperature</td></tr>",
                "<tr><td>Measurement Interval</td></tr>",
                "<tr><td rowspan=\"3\">Heart Rate service</td><td>Heart Rate Measurement</td></tr>",
                "<tr><td>Body Sensor Location</td></tr>",
                "<tr><td>Heart Rate Control Point</td></tr>",
                "<tr><td rowspan=\"3\">Blood pressure service</td><td>Blood Pressure Measurement</td></tr>",
                "<tr><td>Intermediate Cuff Pressure</td></tr>",
                "<tr><td>Blood Pressure Feature</td></tr>",
                "<tr><td rowspan=\"4\">Running Speed and Cadence</td><td>RSC Measurement</td></tr>",
                "<tr><td>RSC Feature</td></tr>",
                "<tr><td>SC Control Point</td></tr>",
                "<tr><td>Sensor Location</td></tr>",
                "<tr><td rowspan=\"5\">Cycling Power service</td><td>Sensor Location</td></tr>",
                "<tr><td>Cycling Power Measurement</td></tr>",
                "<tr><td>Cycling Power Vector</td></tr>",
                "<tr><td>Cycling Power Feature</td></tr>",
                "<tr><td>Cycling Power Control Point</td></tr>",
                "<tr><td rowspan=\"5\">Location and Navigation</td><td>Location and Navigation Characteristic</td></tr>",
                "<tr><td>Navigation</td></tr>",
                "<tr><td>Position Quality</td></tr>",
                "<tr><td>LN Feature</td></tr>",
                "<tr><td>LN Control Point</td></tr>",
                "<tr><td rowspan=\"20\">Environmental Sensing</td><td>Magnetic Declination</td></tr>",
                "<tr><td>Elevation</td></tr>",
                "<tr><td>Pressure</td></tr>",
                "<tr><td>Temperature</td></tr>",
                "<tr><td>Humidity</td></tr>",
                "<tr><td>True Wind Speed</td></tr>",
                "<tr><td>True Wind Direction</td></tr>",
                "<tr><td>Apparent Wind Speed</td></tr>",
                "<tr><td>Apparent Wind Direction</td></tr>",
                "<tr><td>Gust Factor</td></tr>",
                "<tr><td>Pollen Concentration</td></tr>",
                "<tr><td>UV Index</td></tr>",
                "<tr><td>Irradiance</td></tr>",
                "<tr><td>Rainfall</td></tr>",
                "<tr><td>Wind Chill</td></tr>",
                "<tr><td>Heat Index</td></tr>",
                "<tr><td>Dew Point</td></tr>",
                "<tr><td>Magnetic Flux Density - 2-D</td></tr>",
                "<tr><td>Magnetic Flux Density - 3-D</td></tr>",
                "<tr><td>Barometric pressure Trend</td></tr>",
                "<tr><td rowspan=\"2\">Body Composition service</td><td>Body Composition Feature</td></tr>",
                "<tr><td>Body Composition Measurement</td></tr>",
                "<tr><td rowspan=\"2\">Weight Scale</td><td>Weight Scale Measurement</td></tr>",
                "<tr><td>Weight Scale Feature</td></tr>",
                "<tr><td rowspan=\"4\">Continuous Glucose Monitoring Service</td><td>CGM Measurement</td></tr>",
                "<tr><td>CGM Feature</td></tr>",
                "<tr><td>CGM Status</td></tr>",
                "<tr><td>CDM Session start Time</td></tr>",
                "<tr><td rowspan=\"8\">Indoor Positioning</td><td>Indoor Positioning Configuration</td></tr>",
                "<tr><td>Latitude</td></tr>",
                "<tr><td>Longitude</td></tr>",
                "<tr><td>Local North Coordinate</td></tr>",
                "<tr><td>Local East Coordinate</td></tr>",
                "<tr><td>Altitude</td></tr>",
                "<tr><td>Uncertainty</td></tr>",
                "<tr><td>Location Name</td></tr>",
                "<tr><td rowspan=\"4\">Pulse Oximeter Service</td><td>Record Access Control Point</td></tr>",
                "<tr><td>PLX Spot-Check Measurement</td></tr>",
                "<tr><td>PLX Continuous Measurement</td></tr>",
                "<tr><td>PLX Features</td></tr>",
                "<tr><td rowspan=\"11\">Fitness Machine Service</td><td>Treadmill Data</td></tr>",
                "<tr><td>Cross Trainer Data</td></tr>",
                "<tr><td>Step Climber</td></tr>",
                "<tr><td>Stair Climber</td></tr>",
                "<tr><td>Rower Data</td></tr>",
                "<tr><td>Indoor Bike Data</td></tr>",
                "<tr><td>Supported Speed Range</td></tr>",
                "<tr><td>Supported Inclination Range</td></tr>",
                "<tr><td>Supported Resistance Level Range</td></tr>",
                "<tr><td>Supported Heart Range</td></tr>",
                "<tr><td>Supported Power Range</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/blesend.html"
    },
    {
        "block_name": "Protocol Encoder",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Utilities",
            "Simulink Support Package for Arduino Hardware/Common",
            "C2000 Microcontroller Blockset/Target Communication",
            "Simulink Support Package for Arduino Hardware/Common",
            "Embedded Coder Support Package for Texas Instruments C2000 Processors/Target Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/protocolencoder.html"
    },
    {
        "block_name": "L293D DC Motor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/l293ddcmotor.html"
    },
    {
        "block_name": "Protocol Decoder",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Utilities",
            "Simulink Support Package for Arduino Hardware/Common",
            "C2000 Microcontroller Blockset/Target Communication",
            "Simulink Support Package for Arduino Hardware/Common",
            "Embedded Coder Support Package for Texas Instruments C2000 Processors/Target Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/protocoldecoder.html"
    },
    {
        "block_name": "PCA9685 DC Motor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/pca9685dcmotor.html"
    },
    {
        "block_name": "On-board EEPROM Read",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/onboardeepromread.html"
    },
    {
        "block_name": "NeoPixel",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/neopixel.html"
    },
    {
        "block_name": "On-board EEPROM Write",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Common"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/onboardeepromwrite.html"
    },
    {
        "block_name": "TCP/IP Receive",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/tcpipreceive.html"
    },
    {
        "block_name": "TCP/IP Send",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/tcpipsend.html"
    },
    {
        "block_name": "ThingSpeak Read",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Ethernet Shield"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/thingspeakread.html"
    },
    {
        "block_name": "UDP Receive",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/udpreceive.html"
    },
    {
        "block_name": "UDP Send",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/udpsend.html"
    },
    {
        "block_name": "Servo Write",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Arduino Motor Carrier"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/servowrite.html"
    },
    {
        "block_name": "ThingSpeak Write",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Ethernet Shield"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/thingspeakwrite.html"
    },
    {
        "block_name": "M1M2DCMotors",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Arduino Motor Carrier"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/m1m2dcmotors.html"
    },
    {
        "block_name": "M3M4DCMotors",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Arduino Motor Carrier"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/m3m4dcmotors.html"
    },
    {
        "block_name": "Encoder",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Arduino Motor Carrier"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/encoderarduinomotorcarrier.html"
    },
    {
        "block_name": "Battery Read",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Arduino Motor Carrier"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/batteryread.html"
    },
    {
        "block_name": "Ultrasonic Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/ultrasonicsensor.html"
    },
    {
        "block_name": "BNO055 IMU Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Output</th><th>Unit</th><th>Dimension<sup><a class=\"intrnllnk\" href=\"#ftn.d126e8241\" id=\"d126e8241\">a</a></sup></th><th>Axes</th></tr>",
                "<tr><td>Acceleration</td><td>Meter per second squared\n                                                  (m/s<sup>2</sup>)</td><td>3-by-n</td><td><em class=\"varname\">x</em>, <em class=\"varname\">y</em>,\n                                                  and <em class=\"varname\">z</em></td></tr>",
                "<tr><td>Angular rate</td><td>Meter per second squared\n                                                  (m/s<sup>2</sup>)</td><td>3-by-n</td><td><em class=\"varname\">x</em>, <em class=\"varname\">y</em>,\n                                                  and <em class=\"varname\">z</em></td></tr>",
                "<tr><td>Magnetic field</td><td>microtesla (\u03bcT)</td><td>3-by-n</td><td><em class=\"varname\">x</em>, <em class=\"varname\">y</em>,\n                                                  and <em class=\"varname\">z</em></td></tr>",
                "<tr><td>Euler angles</td><td>degrees per second (dps)</td><td>3-by-n</td><td><em class=\"varname\">x</em>, <em class=\"varname\">y</em>,\n                                                  and <em class=\"varname\">z</em></td></tr>",
                "<tr><td>Quaternions</td><td>Quaternion units</td><td>4-by-n</td><td><em class=\"varname\">w</em>, <em class=\"varname\">x</em>,\n                                                  <em class=\"varname\">y</em>, and\n                                                  <em class=\"varname\">z</em></td></tr>",
                "<tr><td>Linear acceleration</td><td>Meter per second squared\n                                                  (m/s<sup>2</sup>)</td><td>3-by-n</td><td><em class=\"varname\">x</em>, <em class=\"varname\">y</em>,\n                                                  and <em class=\"varname\">z</em></td></tr>",
                "<tr><td>Gravity vector</td><td>Meter per second squared\n                                                  (m/s<sup>2</sup>)</td><td>3-by-n</td><td><em class=\"varname\">x</em>, <em class=\"varname\">y</em>,\n                                                  and <em class=\"varname\">z</em></td></tr>",
                "<tr><td colspan=\"4\"><div class=\"footnote\"><div class=\"footnote-wrapper\"><p><span class=\"footnote-symbol-wrapper\"><sup><a class=\"intrnllnk\" href=\"#d126e8241\" id=\"ftn.d126e8241\">a</a></sup></span>\u00a0<span class=\"footnote-body-wrapper\"><code class=\"guidropdown\">n</code> is the value\n                                                  specified as <a class=\"intrnllnk\" href=\"bno055imusensor.html#mw_32a51b46-8bd7-4275-a84e-2d51e1effa2f\">Samples per frame</a></span></p></div></div></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/bno055imusensor.html"
    },
    {
        "block_name": "MPU9250 IMU Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/mpu9250imusensor.html"
    },
    {
        "block_name": "LSM9DS1 IMU Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>Peripheral Address</th></tr>",
                "<tr><td rowspan=\"2\">SDA_M (Magnetometer)</td><td>0</td><td>0x1C</td></tr>",
                "<tr><td>1</td><td>0x1E</td></tr>",
                "<tr><td rowspan=\"2\">SDA_AG (Accelerometer and Gyroscope)</td><td>0</td><td>0x6A</td></tr>",
                "<tr><td>1</td><td>0x6B</td></tr>"
            ],
            [
                "<tr><th>Bandwidth Mode</th><th>ODR (Hz)</th><th>Cutoff (Hz)</th></tr>",
                "<tr><td>0</td><td>14.9</td><td>NA</td></tr>",
                "<tr><td>1</td><td>14.9</td><td>NA</td></tr>",
                "<tr><td>2</td><td>14.9</td><td>NA</td></tr>",
                "<tr><td>3</td><td>14.9</td><td>NA</td></tr>",
                "<tr><td>0</td><td>59.5</td><td>16</td></tr>",
                "<tr><td>1</td><td>59.5</td><td>16</td></tr>",
                "<tr><td>2</td><td>59.5</td><td>16</td></tr>",
                "<tr><td>3</td><td>59.5</td><td>16</td></tr>",
                "<tr><td>0</td><td>119</td><td>14</td></tr>",
                "<tr><td>1</td><td>119</td><td>31</td></tr>",
                "<tr><td>2</td><td>119</td><td>31</td></tr>",
                "<tr><td>3</td><td>119</td><td>31</td></tr>",
                "<tr><td>0</td><td>238</td><td>14</td></tr>",
                "<tr><td>1</td><td>238</td><td>29</td></tr>",
                "<tr><td>2</td><td>238</td><td>63</td></tr>",
                "<tr><td>3</td><td>238</td><td>78</td></tr>",
                "<tr><td>0</td><td>476</td><td>21</td></tr>",
                "<tr><td>1</td><td>476</td><td>28</td></tr>",
                "<tr><td>2</td><td>476</td><td>57</td></tr>",
                "<tr><td>3</td><td>476</td><td>100</td></tr>",
                "<tr><td>0</td><td>952</td><td>33</td></tr>",
                "<tr><td>1</td><td>952</td><td>40</td></tr>",
                "<tr><td>2</td><td>952</td><td>58</td></tr>",
                "<tr><td>3</td><td>952</td><td>100</td></tr>"
            ],
            [
                "<tr><th>HPF Mode</th><th>ODR=14.9 Hz</th><th>ODR=59.5 Hz</th><th>ODR=119 Hz</th><th>ODR=238 Hz</th><th>ODR=476 Hz</th><th>ODR=952 Hz</th></tr>",
                "<tr><td>0</td><td>1</td><td>4</td><td>8</td><td>15</td><td>30</td><td>57</td></tr>",
                "<tr><td>1</td><td>0.5</td><td>2</td><td>4</td><td>8</td><td>15</td><td>30</td></tr>",
                "<tr><td>2</td><td>0.2</td><td>1</td><td>2</td><td>4</td><td>8</td><td>15</td></tr>",
                "<tr><td>3</td><td>0.1</td><td>0.5</td><td>1</td><td>2</td><td>4</td><td>8</td></tr>",
                "<tr><td>4</td><td>0.05</td><td>0.2</td><td>0.5</td><td>1</td><td>2</td><td>4</td></tr>",
                "<tr><td>5</td><td>0.02</td><td>0.1</td><td>0.2</td><td>0.5</td><td>1</td><td>2</td></tr>",
                "<tr><td>6</td><td>0.01</td><td>0.05</td><td>0.1</td><td>0.2</td><td>0.5</td><td>1</td></tr>",
                "<tr><td>7</td><td>0.005</td><td>0.02</td><td>0.05</td><td>0.1</td><td>0.2</td><td>0.5</td></tr>",
                "<tr><td>8</td><td>0.002</td><td>0.01</td><td>0.02</td><td>0.005</td><td>0.1</td><td>0.2</td></tr>",
                "<tr><td>9</td><td>0.001</td><td>0.005</td><td>0.01</td><td>0.002</td><td>0.005</td><td>0.1</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/lsm9ds1imusensor.html"
    },
    {
        "block_name": "Tachometer",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/tachometer.html"
    },
    {
        "block_name": "MPU6050 IMU Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/mpu6050imusensor.html"
    },
    {
        "block_name": "LSM303C IMU Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/lsm303cimusensor.html"
    },
    {
        "block_name": "APDS9960 Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/apds9960sensor.html"
    },
    {
        "block_name": "LSM6DSM IMU Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>Peripheral Address</th></tr>",
                "<tr><td rowspan=\"2\">SDO/SA0</td><td>0</td><td>0x6A</td></tr>",
                "<tr><td>1</td><td>0x6B</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/lsm6dsmimusensor.html"
    },
    {
        "block_name": "LSM6DS3 IMU Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>Peripheral Address</th></tr>",
                "<tr><td rowspan=\"2\">SDO/SA0</td><td>0</td><td>0x6A</td></tr>",
                "<tr><td>1</td><td>0x6B</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/lsm6ds3imusensor.html"
    },
    {
        "block_name": "LSM6DSR IMU Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>Peripheral Address</th></tr>",
                "<tr><td rowspan=\"2\">SDO/SA0</td><td>0</td><td>0x6A</td></tr>",
                "<tr><td>1</td><td>0x6B</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/lsm6dsrimusensor.html"
    },
    {
        "block_name": "LSM6DSL IMU Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>Peripheral Address</th></tr>",
                "<tr><td rowspan=\"2\">SDO/SA0</td><td>0</td><td>0x6A</td></tr>",
                "<tr><td>1</td><td>0x6B</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/lsm6dslimusensor.html"
    },
    {
        "block_name": "LSM6DSO IMU Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>Peripheral Address</th></tr>",
                "<tr><td rowspan=\"2\">SDO/SA0</td><td>0</td><td>0x6A</td></tr>",
                "<tr><td>1</td><td>0x6B</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/lsm6dsoimusensor.html"
    },
    {
        "block_name": "LSM6DS3H IMU Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>Peripheral Address</th></tr>",
                "<tr><td rowspan=\"2\">SDO/SA0</td><td>0</td><td>0x6A</td></tr>",
                "<tr><td>1</td><td>0x6B</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/lsm6ds3himusensor.html"
    },
    {
        "block_name": "Encoder",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/encodersensors.html"
    },
    {
        "block_name": "HTS221 Humidity Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/hts221humiditysensor.html"
    },
    {
        "block_name": "ADXL34x Accelerometer",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors",
            "Simulink Coder Support Package for STMicroelectronics Nucleo Boards/Sensors",
            "Embedded Coder Support Package for Texas Instruments C2000 Processors/Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>I2C Address</th></tr>",
                "<tr><td rowspan=\"2\">ALT</td><td>Low</td><td>0x53</td></tr>",
                "<tr><td>High</td><td>0x1D</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/adxl34xaccelerometer.html"
    },
    {
        "block_name": "LPS22HB Pressure Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>Peripheral Address</th></tr>",
                "<tr><td rowspan=\"2\">SA0</td><td>0</td><td>0x5C</td></tr>",
                "<tr><td>1</td><td>0x5D</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/lps22hbpressuresensor.html"
    },
    {
        "block_name": "CCS811 Air Quality Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>I2C Address</th></tr>",
                "<tr><td rowspan=\"2\">ADDR</td><td>Low</td><td>0x5A</td></tr>",
                "<tr><td>High</td><td>0x5B</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/ccs811airqualitysensor.html"
    },
    {
        "block_name": "ICM20948 IMU Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>I2C Address</th></tr>",
                "<tr><td rowspan=\"2\">AD0</td><td>Low</td><td>0x68</td></tr>",
                "<tr><td>High</td><td>0x69</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/icm20948imusensor.html"
    },
    {
        "block_name": "LIS3DH Accelerometer Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>I2C address</th></tr>",
                "<tr><td rowspan=\"2\">SA0</td><td>0</td><td>0x18</td></tr>",
                "<tr><td>1</td><td>0x19</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/lis3dhaccelerometersensor.html"
    },
    {
        "block_name": "VL53L0X Time of Flight Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Ranging mode</th><th>Timing budget</th><th>Typical max range</th><th>Typical application</th></tr>",
                "<tr><td>Default</td><td>30 ms</td><td>1.2 m</td><td>standard</td></tr>",
                "<tr><td>High accuracy</td><td>200 ms</td><td>2 m</td><td>precise measurement</td></tr>",
                "<tr><td>Long range</td><td>33 ms</td><td>1.2 m</td><td>long ranging for dark conditions</td></tr>",
                "<tr><td>High speed</td><td>20 ms</td><td>1.2 m</td><td>high speed where accuracy is not priority</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/vl53l0xtimeofflightsensor.html"
    },
    {
        "block_name": "BMP280 Pressure Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>I2C address</th></tr>",
                "<tr><td rowspan=\"2\">SD0</td><td>0</td><td>0x76</td></tr>",
                "<tr><td>1</td><td>0x77</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/bmp280pressuresensor.html"
    },
    {
        "block_name": "BME68x Gas Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>I2C address</th></tr>",
                "<tr><td rowspan=\"2\">SD0</td><td>0</td><td>0x76</td></tr>",
                "<tr><td>1</td><td>0x77</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/bme68xgassensor.html"
    },
    {
        "block_name": "ADIS16505 IMU Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/adis16505imusensor.html"
    },
    {
        "block_name": "Pixy2 Vision Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/pixy2visionsensor.html"
    },
    {
        "block_name": "OV2640 Camera Sensor",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/ov2640camerasensor.html"
    },
    {
        "block_name": "Byte Pack",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Utilities",
            "Embedded Coder/Embedded Targets/Host Communication",
            "Embedded Coder Support Package for Infineon AURIX TC4x Microcontrollers/Utilities",
            "Embedded Coder Support Package for STMicroelectronics STM32 Processors/Utilities",
            "Simulink Coder Support Package for STMicroelectronics Nucleo Boards/Utilities",
            "SoC Blockset Support Package for Infineon AURIX Microcontrollers/Utilities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/bytepack.html"
    },
    {
        "block_name": "Byte Unpack",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Utilities",
            "Embedded Coder/Embedded Targets/Host Communication",
            "Embedded Coder Support Package for Infineon AURIX TC4x Microcontrollers/Utilities",
            "Embedded Coder Support Package for STMicroelectronics STM32 Processors/Utilities",
            "Simulink Coder Support Package for STMicroelectronics Nucleo Boards/Utilities",
            "SoC Blockset Support Package for Infineon AURIX Microcontrollers/Utilities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/byteunpack.html"
    },
    {
        "block_name": "Byte Reversal",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Utilities",
            "Embedded Coder/Embedded Targets/Host Communication",
            "Embedded Coder Support Package for Infineon AURIX TC4x Microcontrollers/Utilities",
            "Embedded Coder Support Package for STMicroelectronics STM32 Processors/Utilities",
            "Simulink Coder Support Package for STMicroelectronics Nucleo Boards/Utilities",
            "SoC Blockset Support Package for Infineon AURIX Microcontrollers/Utilities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/bytereversal.html"
    },
    {
        "block_name": "Memory Copy",
        "libraries": [
            "Embedded Coder Support Package for STMicroelectronics STM32 Processors/Utilities",
            "Simulink Coder Support Package for STMicroelectronics Nucleo Boards/Utilities",
            "Simulink Support Package for Arduino Hardware/Utilities"
        ],
        "parameters": [
            [
                "<tr><th><p>Bitwise Operator List Entry</p></th><th><p>Description</p></th></tr>",
                "<tr><td><p><code class=\"literal\">bitwise AND</code></p></td><td><p>Apply the mask value as a bitwise AND to the value in\nthe register.</p></td></tr>",
                "<tr><td><p><code class=\"literal\">bitwise OR</code></p></td><td><p>Apply the mask value as a bitwise OR to the value in\nthe register.</p></td></tr>",
                "<tr><td><p><code class=\"literal\">bitwise exclusive OR</code></p></td><td><p>Apply the mask value as a bitwise exclusive OR to the\nvalue in the register.</p></td></tr>",
                "<tr><td><p><code class=\"literal\">left shift</code></p></td><td><p>Shift the bits in the register to the left by the number\nof bits represented by the initialization value. For example, if your\ninitialization value is 3, the block shifts the register value to\nthe left by 3 bits. In this case, the value must be a positive integer.</p></td></tr>",
                "<tr><td><p><code class=\"literal\">right shift</code></p></td><td><p>Shift the bits in the register to the right by the number\nof bits represented by the initialization value. For example, if your\ninitialization value is 6, the block shifts the register value to\nthe right by 6 bits. In this case, the value must be a positive integer.</p></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/memorycopy.html"
    },
    {
        "block_name": "WiFi TCP/IP Receive",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/WiFi"
        ],
        "parameters": [
            [
                "<tr><th>Target Hardware</th><th>\n<p>ESP8266</p>\n</th><th>\n<p>WiFi Shield</p>\n</th><th>\n<p>MKR1000</p>\n</th></tr>",
                "<tr><td>\n<p>Maximum Number of Received Bytes</p>\n</td><td>40</td><td>64</td><td>1400</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/wifitcpipreceive.html"
    },
    {
        "block_name": "WiFi ThingSpeak Read",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/wifithingspeakread.html"
    },
    {
        "block_name": "WiFi TCP/IP Send",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/WiFi"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/wifitcpipsend.html"
    },
    {
        "block_name": "WiFi UDP Receive",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/WiFi"
        ],
        "parameters": [
            [
                "<tr><th>Target Hardware</th><th>\n<p>ESP8266</p>\n</th><th>\n<p>WiFi Shield</p>\n</th><th>\n<p>MKR1000</p>\n</th></tr>",
                "<tr><td>\n<p>Maximum Number of Received Bytes</p>\n</td><td>40</td><td>64</td><td>1400</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/wifiudpreceive.html"
    },
    {
        "block_name": "WiFi UDP Send",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/WiFi"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/wifiudpsend.html"
    },
    {
        "block_name": "WiFi ThingSpeak Write",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/wifithingspeakwrite.html"
    },
    {
        "block_name": "WebSocket Publish",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/WiFi"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/websocketpublish.html"
    },
    {
        "block_name": "WebSocket Subscribe",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/WiFi"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/websocketsubscribe.html"
    },
    {
        "block_name": "WiFi HTTP Client",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/WiFi"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/wifihttpclient.html"
    },
    {
        "block_name": "WiFi MQTT Subscribe",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/WiFi"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/wifimqttsubscribe.html"
    },
    {
        "block_name": "WiFi MQTT Publish",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/WiFi"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/wifimqttpublish.html"
    },
    {
        "block_name": "PWM",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Advanced/SAMD"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/pwmadvancedsamd.html"
    },
    {
        "block_name": "Analog Input",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Advanced/SAMD"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/analoginputadvancedsamd.html"
    },
    {
        "block_name": "Hardware Interrupt",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Advanced/SAMD"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/hardwareinterruptadvancedsamd.html"
    },
    {
        "block_name": "PWM",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Advanced/AVR"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/pwmadvancedavr.html"
    },
    {
        "block_name": "Analog Input",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Advanced/AVR"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/analoginputadvancedavr.html"
    },
    {
        "block_name": "Hardware Interrupt",
        "libraries": [
            "Simulink Support Package for Arduino Hardware/Advanced/AVR"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/arduino_ref/hardwareinterruptadvancedavr.html"
    },
    {
        "block_name": "Button",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/button.html"
    },
    {
        "block_name": "Color Sensor",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/colorsensor.html"
    },
    {
        "block_name": "Encoder",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/encoder.html"
    },
    {
        "block_name": "Gyro Sensor",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/gyrosensor.html"
    },
    {
        "block_name": "Infrared Sensor",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/infraredsensor.html"
    },
    {
        "block_name": "Motor",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/motor.html"
    },
    {
        "block_name": "Speaker",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/speaker.html"
    },
    {
        "block_name": "Display",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/display.html"
    },
    {
        "block_name": "Touch Sensor",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/touchsensor.html"
    },
    {
        "block_name": "Ultrasonic Sensor",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/ultrasonicsensor.html"
    },
    {
        "block_name": "Status Light",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/statuslight.html"
    },
    {
        "block_name": "TCP/IP Receive",
        "libraries": [
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Support Package for Raspberry Pi Hardware/Network",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Support Package for Raspberry Pi Hardware/Network",
            "Simulink Support Package for Raspberry Pi Hardware/Network",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Support Package for Raspberry Pi Hardware/Network"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/tcpipreceive.html"
    },
    {
        "block_name": "TCP/IP Send",
        "libraries": [
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Support Package for Raspberry Pi Hardware/Network",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Support Package for Raspberry Pi Hardware/Network",
            "Simulink Support Package for Raspberry Pi Hardware/Network",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Support Package for Raspberry Pi Hardware/Network"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/tcpipsend.html"
    },
    {
        "block_name": "UDP Receive",
        "libraries": [
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/udpreceive.html"
    },
    {
        "block_name": "Battery",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/battery.html"
    },
    {
        "block_name": "UDP Send",
        "libraries": [
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/udpsend.html"
    },
    {
        "block_name": "Timer",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/timer.html"
    },
    {
        "block_name": "NXT Ultrasonic Sensor",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/nxtultrasonicsensor.html"
    },
    {
        "block_name": "NXT Touch Sensor",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/nxttouchsensor.html"
    },
    {
        "block_name": "NXT Sound Sensor",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/nxtsoundsensor.html"
    },
    {
        "block_name": "NXT Gyro Sensor",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/nxtgyrosensor.html"
    },
    {
        "block_name": "TCP/IP Receive",
        "libraries": [
            "Simulink Support Package for Parrot Minidrones"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/parrot_ref/tcpipreceive.html"
    },
    {
        "block_name": "I2C Register Read",
        "libraries": [
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/i2cregisterread.html"
    },
    {
        "block_name": "Pixy2 Vision Sensor",
        "libraries": [
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/legomindstormsev3_ref/pixy2visionsensor.html"
    },
    {
        "block_name": "UDP Receive",
        "libraries": [
            "Simulink Support Package for Parrot Minidrones"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/parrot_ref/udpreceive.html"
    },
    {
        "block_name": "TCP/IP Send",
        "libraries": [
            "Simulink Support Package for Parrot Minidrones"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/parrot_ref/tcpipsend.html"
    },
    {
        "block_name": "UDP Send",
        "libraries": [
            "Simulink Support Package for Parrot Minidrones"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/parrot_ref/udpsend.html"
    },
    {
        "block_name": "PARROT Image Conversion",
        "libraries": [
            "Simulink Support Package for Parrot Minidrones"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/parrot_ref/parrotimageconversion.html"
    },
    {
        "block_name": "Cannon",
        "libraries": [
            "Simulink Support Package for Parrot Minidrones"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/parrot_ref/cannon.html"
    },
    {
        "block_name": "Grabber",
        "libraries": [
            "Simulink Support Package for Parrot Minidrones"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/parrot_ref/grabber.html"
    },
    {
        "block_name": "Keyboard Read",
        "libraries": [
            "Simulink Support Package for Parrot Minidrones"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/parrot_ref/keyboardread.html"
    },
    {
        "block_name": "V4L2 Video Capture",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Audio and Video"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/v4l2videocapture.html"
    },
    {
        "block_name": "ALSA Audio Capture",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Audio and Video"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/alsaaudiocapture.html"
    },
    {
        "block_name": "SDL Video Display",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Audio and Video"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/sdlvideodisplay.html"
    },
    {
        "block_name": "Audio File Read",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Audio and Video"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/audiofileread.html"
    },
    {
        "block_name": "eSpeak Text to Speech",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Audio and Video"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/espeaktexttospeech.html"
    },
    {
        "block_name": "ALSA Audio Playback",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Audio and Video"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/alsaaudioplayback.html"
    },
    {
        "block_name": "Standard Servo Write",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Basic"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/standardservowrite.html"
    },
    {
        "block_name": "GPIO Write",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Basic"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/gpiowrite.html"
    },
    {
        "block_name": "Video Stream Transmit",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Audio and Video"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/videostreamtransmit.html"
    },
    {
        "block_name": "GPIO Read",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Basic"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/gpioread.html"
    },
    {
        "block_name": "LED",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Basic"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/led.html"
    },
    {
        "block_name": "PWM",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Basic"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/pwm.html"
    },
    {
        "block_name": "Pan Tilt Hat",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Basic"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/pantilthat.html"
    },
    {
        "block_name": "External Interrupt",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Basic"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/externalinterrupt.html"
    },
    {
        "block_name": "Encoder",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Basic"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/encoder.html"
    },
    {
        "block_name": "ADS1x15",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Basic"
        ],
        "parameters": [
            [
                "<tr><th>I2C Address</th><th>ADC Address Pin</th></tr>",
                "<tr><td>0x48</td><td>GND</td></tr>",
                "<tr><td>0x49</td><td>VIN</td></tr>",
                "<tr><td>0x4A</td><td>SDA</td></tr>",
                "<tr><td>0x4B</td><td>SCL</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/ads1x15.html"
    },
    {
        "block_name": "CAN Transmit",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Communication"
        ],
        "parameters": [
            [
                "<tr><td>00</td><td>00</td><td>ABTF</td><td>MLOA</td><td>TXERR</td><td>TXBO</td><td>TXEP</td><td>TXWAR</td></tr>",
                "<tr><td>bit7</td><td>bit6</td><td>bit5</td><td>bit4</td><td>bit3</td><td>bit2</td><td>bit1</td><td>bit0</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/cantransmit.html"
    },
    {
        "block_name": "CAN Receive",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/canreceive.html"
    },
    {
        "block_name": "SPI Master Transfer",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/spicontrollertransfer.html"
    },
    {
        "block_name": "SPI Register Write",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/spiregisterwrite.html"
    },
    {
        "block_name": "I2C Master Read",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Communication"
        ],
        "parameters": [
            [
                "<tr><th>Status Value</th><th>Status Description</th></tr>",
                "<tr><td><code class=\"literal\">0</code></td><td><code class=\"literal\">SUCCESS</code></td></tr>",
                "<tr><td><code class=\"literal\">1</code></td><td><code class=\"literal\">BUSY</code></td></tr>",
                "<tr><td><code class=\"literal\">2</code></td><td><code class=\"literal\">ARBITRATION_LOST</code></td></tr>",
                "<tr><td><code class=\"literal\">4</code></td><td><code class=\"literal\">NO_ACKNOWLEDGE</code></td></tr>",
                "<tr><td><code class=\"literal\">8</code></td><td><code class=\"literal\">BUS_ERROR</code></td></tr>",
                "<tr><td><code class=\"literal\">16</code></td><td><code class=\"literal\">BUS_NOT_IN_USE</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/i2ccontrollerread.html"
    },
    {
        "block_name": "SPI Register Read",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/spiregisterread.html"
    },
    {
        "block_name": "I2C Master Write",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Communication"
        ],
        "parameters": [
            [
                "<tr><th>Status value</th><th>Status\ndescription</th></tr>",
                "<tr><td><code class=\"literal\">0</code></td><td><code class=\"literal\">SUCCESS</code></td></tr>",
                "<tr><td><code class=\"literal\">1</code></td><td><code class=\"literal\">BUSY</code></td></tr>",
                "<tr><td><code class=\"literal\">2</code></td><td><code class=\"literal\">ARBITRATION_LOST</code></td></tr>",
                "<tr><td><code class=\"literal\">4</code></td><td><code class=\"literal\">NO_ACKNOWLEDGE</code></td></tr>",
                "<tr><td><code class=\"literal\">8</code></td><td><code class=\"literal\">BUS_ERROR</code></td></tr>",
                "<tr><td><code class=\"literal\">16</code></td><td><code class=\"literal\">BUS_NOT_IN_USE</code></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/i2ccontrollerwrite.html"
    },
    {
        "block_name": "Serial Write",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/serialwrite.html"
    },
    {
        "block_name": "Serial Read",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/serialread.html"
    },
    {
        "block_name": "NNG Send",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/nngsend.html"
    },
    {
        "block_name": "NNG Receive",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/nngreceive.html"
    },
    {
        "block_name": "ThingSpeak Read",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Internet Of Things"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/thingspeakread.html"
    },
    {
        "block_name": "ThingSpeak Write",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Internet Of Things"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/thingspeakwrite.html"
    },
    {
        "block_name": "MQTT Subscribe",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Internet Of Things"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/mqttsubscribe.html"
    },
    {
        "block_name": "MQTT Publish",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Internet Of Things"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/mqttpublish.html"
    },
    {
        "block_name": "TalkBack Read",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Internet Of Things"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/talkbackread.html"
    },
    {
        "block_name": "TalkBack Write",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Internet Of Things"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/talkbackwrite.html"
    },
    {
        "block_name": "UDP Receive",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Network"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/udpreceive.html"
    },
    {
        "block_name": "TCP/IP Send",
        "libraries": [
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Support Package for Raspberry Pi Hardware/Network",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Support Package for Raspberry Pi Hardware/Network",
            "Simulink Support Package for Raspberry Pi Hardware/Network",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Support Package for Raspberry Pi Hardware/Network"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/tcpipsend.html"
    },
    {
        "block_name": "Websocket Publish",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Network"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/websocketpublish.html"
    },
    {
        "block_name": "Websocket Subscribe",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Network"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/websocketsubscribe.html"
    },
    {
        "block_name": "Modbus TCP/IP Master Read",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Network"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/modbustcpipclientread.html"
    },
    {
        "block_name": "Modbus TCP/IP Master Write",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Network"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/modbustcpipclientwrite.html"
    },
    {
        "block_name": "Modbus TCP/IP Slave Read",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Network"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/modbustcpipserverread.html"
    },
    {
        "block_name": "Modbus TCP/IP Slave Write",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Network"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/modbustcpipserverwrite.html"
    },
    {
        "block_name": "HTTP Client",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Network"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/httpclient.html"
    },
    {
        "block_name": "HTS221 Humidity Sensor",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sense HAT"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/hts221humiditysensor.html"
    },
    {
        "block_name": "LPS25h Pressure Sensor",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sense HAT"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/lps25hpressuresensor.html"
    },
    {
        "block_name": "TCP/IP Receive",
        "libraries": [
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Support Package for Raspberry Pi Hardware/Network",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Support Package for Raspberry Pi Hardware/Network",
            "Simulink Support Package for Raspberry Pi Hardware/Network",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Coder Support Package for BeagleBone Blue Hardware/Communication",
            "Simulink Support Package for Android Devices/Communication",
            "Simulink Support Package for LEGO MINDSTORMS EV3 Hardware",
            "Simulink Support Package for Raspberry Pi Hardware/Network"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/tcpipreceive.html"
    },
    {
        "block_name": "LSM9DS1 IMU Sensor",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sense HAT"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/lsm9ds1imusensor.html"
    },
    {
        "block_name": "UDP Send",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Network"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/udpsend.html"
    },
    {
        "block_name": "Joystick",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sense HAT"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/joystick.html"
    },
    {
        "block_name": "8x8 RGB LED Matrix",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sense HAT"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/8x8rgbledmatrix.html"
    },
    {
        "block_name": "CCS811 Air Quality Sensor",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sensors/Environmental Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>I2C Address</th></tr>",
                "<tr><td rowspan=\"2\">ADDR</td><td>Low</td><td>0x5A</td></tr>",
                "<tr><td>High</td><td>0x5B</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/ccs811airqualitysensor.html"
    },
    {
        "block_name": "BMP280 Pressure Sensor",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sensors/Environmental Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>I2C address</th></tr>",
                "<tr><td rowspan=\"2\">SDO</td><td>0</td><td>0x76</td></tr>",
                "<tr><td>1</td><td>0x77</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/bmp280pressuresensor.html"
    },
    {
        "block_name": "BME280 Pressure Sensor",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sensors/Environmental Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/bme280pressuresensor.html"
    },
    {
        "block_name": "LPS22HB Pressure Sensor",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sensors/Environmental Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>Peripheral Address</th></tr>",
                "<tr><td rowspan=\"2\">SA0</td><td>0</td><td>0x5C</td></tr>",
                "<tr><td>1</td><td>0x5D</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/lps22hbpressuresensor.html"
    },
    {
        "block_name": "ADXL34x Accelerometer",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sensors/IMU Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>I2C Address</th></tr>",
                "<tr><td rowspan=\"2\">ALT</td><td>Low</td><td>0x53</td></tr>",
                "<tr><td>High</td><td>0x1D</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/adxl34xaccelerometer.html"
    },
    {
        "block_name": "BMI160 IMU Sensor",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sensors/IMU Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/bmi160imusensor.html"
    },
    {
        "block_name": "LIS3MDL Magnetometer Sensor",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sensors/IMU Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/lis3mdlmagnetometersensor.html"
    },
    {
        "block_name": "BMM150 Magnetometer",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sensors/IMU Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/bmm150magnetometer.html"
    },
    {
        "block_name": "ICM20948 IMU Sensor",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sensors/IMU Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>I2C Address</th></tr>",
                "<tr><td rowspan=\"2\">AD0</td><td>Low</td><td>0x68</td></tr>",
                "<tr><td>High</td><td>0x69</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/icm20948imusensor.html"
    },
    {
        "block_name": "LSM303C IMU Sensor",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sensors/IMU Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/lsm303cimusensor.html"
    },
    {
        "block_name": "LSM6DS3 IMU Sensor",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sensors/IMU Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>Peripheral Address</th></tr>",
                "<tr><td rowspan=\"2\">SDO/SA0</td><td>0</td><td>0x6A</td></tr>",
                "<tr><td>1</td><td>0x6B</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/lsm6ds3imusensor.html"
    },
    {
        "block_name": "LSM6DS3H IMU Sensor",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sensors/IMU Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>Peripheral Address</th></tr>",
                "<tr><td rowspan=\"2\">SDO/SA0</td><td>0</td><td>0x6A</td></tr>",
                "<tr><td>1</td><td>0x6B</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/lsm6ds3himusensor.html"
    },
    {
        "block_name": "LSM6DSL IMU Sensor",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sensors/IMU Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>Peripheral Address</th></tr>",
                "<tr><td rowspan=\"2\">SDO/SA0</td><td>0</td><td>0x6A</td></tr>",
                "<tr><td>1</td><td>0x6B</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/lsm6dslimusensor.html"
    },
    {
        "block_name": "LSM6DSO IMU Sensor",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sensors/IMU Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>Peripheral Address</th></tr>",
                "<tr><td rowspan=\"2\">SDO/SA0</td><td>0</td><td>0x6A</td></tr>",
                "<tr><td>1</td><td>0x6B</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/lsm6dsoimusensor.html"
    },
    {
        "block_name": "LSM6DSM IMU Sensor",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sensors/IMU Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>Peripheral Address</th></tr>",
                "<tr><td rowspan=\"2\">SDO/SA0</td><td>0</td><td>0x6A</td></tr>",
                "<tr><td>1</td><td>0x6B</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/lsm6dsmimusensor.html"
    },
    {
        "block_name": "LSM6DSR IMU Sensor",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sensors/IMU Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Pin Name</th><th>Pin State</th><th>Peripheral Address</th></tr>",
                "<tr><td rowspan=\"2\">SDO/SA0</td><td>0</td><td>0x6A</td></tr>",
                "<tr><td>1</td><td>0x6B</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/lsm6dsrimusensor.html"
    },
    {
        "block_name": "Ultrasonic Sensor",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/ultrasonicsensor.html"
    },
    {
        "block_name": "Protocol Encoder",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Utilities",
            "Simulink Support Package for Arduino Hardware/Common",
            "C2000 Microcontroller Blockset/Target Communication",
            "Simulink Support Package for Arduino Hardware/Common",
            "Embedded Coder Support Package for Texas Instruments C2000 Processors/Target Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/protocolencoder.html"
    },
    {
        "block_name": "VL53L0X Time of Flight Sensor",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Sensors"
        ],
        "parameters": [
            [
                "<tr><th>Ranging mode</th><th>Timing budget</th><th>Typical max range</th><th>Typical application</th></tr>",
                "<tr><td>Default</td><td>30 ms</td><td>1.2 m</td><td>standard</td></tr>",
                "<tr><td>High accuracy</td><td>200 ms</td><td>2 m</td><td>precise measurement</td></tr>",
                "<tr><td>Long range</td><td>33 ms</td><td>1.2 m</td><td>long ranging for dark conditions</td></tr>",
                "<tr><td>High speed</td><td>20 ms</td><td>1.2 m</td><td>high speed where accuracy is not priority</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/vl53l0xtimeofflightsensor.html"
    },
    {
        "block_name": "Protocol Decoder",
        "libraries": [
            "Simulink Support Package for Raspberry Pi Hardware/Utilities",
            "Simulink Support Package for Arduino Hardware/Common",
            "C2000 Microcontroller Blockset/Target Communication",
            "Simulink Support Package for Arduino Hardware/Common",
            "Embedded Coder Support Package for Texas Instruments C2000 Processors/Target Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simulink/supportpkg/raspberrypi_ref/protocoldecoder.html"
    },
    {
        "block_name": "Ideal Force Sensor",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Mechanical Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/idealforcesensor.html"
    },
    {
        "block_name": "Ideal Translational Motion Sensor",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Mechanical Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/idealtranslationalmotionsensor.html"
    },
    {
        "block_name": "Ideal Rotational Motion Sensor",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Mechanical Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/idealrotationalmotionsensor.html"
    },
    {
        "block_name": "Ideal Torque Sensor",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Mechanical Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/idealtorquesensor.html"
    },
    {
        "block_name": "Ideal Angular Velocity Source",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Mechanical Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/idealangularvelocitysource.html"
    },
    {
        "block_name": "Ideal Torque Source",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Mechanical Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/idealtorquesource.html"
    },
    {
        "block_name": "Ideal Translational Velocity Source",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Mechanical Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/idealtranslationalvelocitysource.html"
    },
    {
        "block_name": "Gear Box",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Mechanisms"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/gearbox.html"
    },
    {
        "block_name": "Lever",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Mechanisms"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/lever.html"
    },
    {
        "block_name": "Ideal Force Source",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Mechanical Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/idealforcesource.html"
    },
    {
        "block_name": "Wheel and Axle",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Mechanisms"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/wheelandaxle.html"
    },
    {
        "block_name": "Slider-Crank",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Mechanisms"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/slidercrank.html"
    },
    {
        "block_name": "Rotational Multibody Interface",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Multibody Interfaces"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/rotationalmultibodyinterface.html"
    },
    {
        "block_name": "Inertia",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Rotational Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/inertia.html"
    },
    {
        "block_name": "Translational Multibody Interface",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Multibody Interfaces"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/translationalmultibodyinterface.html"
    },
    {
        "block_name": "Rotational Damper",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Rotational Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/rotationaldamper.html"
    },
    {
        "block_name": "Rotational Friction",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Rotational Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/rotationalfriction.html"
    },
    {
        "block_name": "Rotational Free End",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Rotational Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/rotationalfreeend.html"
    },
    {
        "block_name": "Mechanical Rotational Reference",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Rotational Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/mechanicalrotationalreference.html"
    },
    {
        "block_name": "Rotational Spring",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Rotational Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/rotationalspring.html"
    },
    {
        "block_name": "Mass",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Translational Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/mass.html"
    },
    {
        "block_name": "Rotational Inerter",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Rotational Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/rotationalinerter.html"
    },
    {
        "block_name": "Mechanical Translational Reference",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Translational Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/mechanicaltranslationalreference.html"
    },
    {
        "block_name": "Rotational Hard Stop",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Rotational Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/rotationalhardstop.html"
    },
    {
        "block_name": "Translational Free End",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Translational Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/translationalfreeend.html"
    },
    {
        "block_name": "Translational Damper",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Translational Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/translationaldamper.html"
    },
    {
        "block_name": "Translational Friction",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Translational Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/translationalfriction.html"
    },
    {
        "block_name": "Translational Hard Stop",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Translational Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/translationalhardstop.html"
    },
    {
        "block_name": "Translational Inerter",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Translational Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/translationalinerter.html"
    },
    {
        "block_name": "Translational Spring",
        "libraries": [
            "Simscape/Foundation Library/Mechanical/Translational Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/translationalspring.html"
    },
    {
        "block_name": "Capacitor",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/capacitor.html"
    },
    {
        "block_name": "Diode",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/diode.html"
    },
    {
        "block_name": "Floating Reference",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Elements",
            "Simscape/Electrical/Connectors & References"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/floatingreference.html"
    },
    {
        "block_name": "Gyrator",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/gyrator.html"
    },
    {
        "block_name": "Inductor",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/inductor.html"
    },
    {
        "block_name": "Infinite Resistance",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/infiniteresistance.html"
    },
    {
        "block_name": "Ideal Transformer",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/idealtransformer.html"
    },
    {
        "block_name": "Memristor",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/memristor.html"
    },
    {
        "block_name": "Op-Amp",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/opamp.html"
    },
    {
        "block_name": "Mutual Inductor",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/mutualinductor.html"
    },
    {
        "block_name": "Open Circuit",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Elements",
            "Simscape/Electrical/Connectors & References"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/opencircuit.html"
    },
    {
        "block_name": "Resistor",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/resistor.html"
    },
    {
        "block_name": "Rotational Electromechanical Converter",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/rotationalelectromechanicalconverter.html"
    },
    {
        "block_name": "Thermal Resistor",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/thermalresistor.html"
    },
    {
        "block_name": "Translational Electromechanical Converter",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/translationalelectromechanicalconverter.html"
    },
    {
        "block_name": "Current Sensor",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Sensors",
            "Simscape/Electrical/Sensors & Transducers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/currentsensor.html"
    },
    {
        "block_name": "Variable Resistor",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/variableresistor.html"
    },
    {
        "block_name": "Voltage Sensor",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Sensors",
            "Simscape/Electrical/Sensors & Transducers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/voltagesensor.html"
    },
    {
        "block_name": "Switch",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/switch.html"
    },
    {
        "block_name": "Electrical Reference",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Elements",
            "Simscape/Electrical/Connectors & References"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/electricalreference.html"
    },
    {
        "block_name": "AC Current Source",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/accurrentsource.html"
    },
    {
        "block_name": "AC Voltage Source",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/acvoltagesource.html"
    },
    {
        "block_name": "Controlled Voltage Source",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/controlledvoltagesource.html"
    },
    {
        "block_name": "Current-Controlled Current Source",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/currentcontrolledcurrentsource.html"
    },
    {
        "block_name": "Controlled Current Source",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/controlledcurrentsource.html"
    },
    {
        "block_name": "Current-Controlled Voltage Source",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/currentcontrolledvoltagesource.html"
    },
    {
        "block_name": "DC Voltage Source",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/dcvoltagesource.html"
    },
    {
        "block_name": "Voltage-Controlled Current Source",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/voltagecontrolledcurrentsource.html"
    },
    {
        "block_name": "DC Current Source",
        "libraries": [
            "Simscape/Foundation Library/Electrical/Electrical Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/dccurrentsource.html"
    },
    {
        "block_name": "Voltage-Controlled Voltage Source",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/voltagecontrolledvoltagesource.html"
    },
    {
        "block_name": "Fundamental Reluctance",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/fundamentalreluctance.html"
    },
    {
        "block_name": "Magnetic Reference",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/magneticreference.html"
    },
    {
        "block_name": "Permanent Magnet",
        "libraries": [
            "Simscape/Foundation Library/Magnetic/Magnetic Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/permanentmagnet.html"
    },
    {
        "block_name": "Electromagnetic Converter",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/electromagneticconverter.html"
    },
    {
        "block_name": "Reluctance",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/reluctance.html"
    },
    {
        "block_name": "Variable Reluctance",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/variablereluctance.html"
    },
    {
        "block_name": "Reluctance Force Actuator",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/reluctanceforceactuator.html"
    },
    {
        "block_name": "Flux Sensor",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/fluxsensor.html"
    },
    {
        "block_name": "MMF Sensor",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/mmfsensor.html"
    },
    {
        "block_name": "Flux Source",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/fluxsource.html"
    },
    {
        "block_name": "Controlled MMF Source",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/controlledmmfsource.html"
    },
    {
        "block_name": "Controlled Flux Source",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/controlledfluxsource.html"
    },
    {
        "block_name": "MMF Source",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/mmfsource.html"
    },
    {
        "block_name": "Constant Volume Chamber (IL)",
        "libraries": [
            "Simscape/Foundation Library/Isothermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/constantvolumechamberil.html"
    },
    {
        "block_name": "Flow Resistance (IL)",
        "libraries": [
            "Simscape/Foundation Library/Isothermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/flowresistanceil.html"
    },
    {
        "block_name": "Infinite Flow Resistance (IL)",
        "libraries": [
            "Simscape/Foundation Library/Isothermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/infiniteflowresistanceil.html"
    },
    {
        "block_name": "Laminar Leakage (IL)",
        "libraries": [
            "Simscape/Foundation Library/Isothermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/laminarleakageil.html"
    },
    {
        "block_name": "Pipe (IL)",
        "libraries": [
            "Simscape/Foundation Library/Isothermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pipeil.html"
    },
    {
        "block_name": "Local Restriction (IL)",
        "libraries": [
            "Simscape/Foundation Library/Isothermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/localrestrictionil.html"
    },
    {
        "block_name": "Rotational Mechanical Converter (IL)",
        "libraries": [
            "Simscape/Foundation Library/Isothermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/rotationalmechanicalconverteril.html"
    },
    {
        "block_name": "Flow Rate Sensor (IL)",
        "libraries": [
            "Simscape/Foundation Library/Isothermal Liquid/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/flowratesensoril.html"
    },
    {
        "block_name": "Translational Mechanical Converter (IL)",
        "libraries": [
            "Simscape/Foundation Library/Isothermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/translationalmechanicalconverteril.html"
    },
    {
        "block_name": "Reservoir (IL)",
        "libraries": [
            "Simscape/Foundation Library/Isothermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/reservoiril.html"
    },
    {
        "block_name": "Pressure Source (IL)",
        "libraries": [
            "Simscape/Foundation Library/Isothermal Liquid/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pressuresourceil.html"
    },
    {
        "block_name": "Pressure Sensor (IL)",
        "libraries": [
            "Simscape/Foundation Library/Isothermal Liquid/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pressuresensoril.html"
    },
    {
        "block_name": "Flow Rate Source (IL)",
        "libraries": [
            "Simscape/Foundation Library/Isothermal Liquid/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/flowratesourceil.html"
    },
    {
        "block_name": "Liquid Properties Sensor (IL)",
        "libraries": [
            "Simscape/Foundation Library/Isothermal Liquid/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/liquidpropertiessensoril.html"
    },
    {
        "block_name": "Isothermal Liquid Properties (IL)",
        "libraries": [
            "Simscape/Foundation Library/Isothermal Liquid/Utilities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/isothermalliquidpropertiesil.html"
    },
    {
        "block_name": "Constant Volume Chamber (TL)",
        "libraries": [
            "Simscape/Foundation Library/Thermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/constantvolumechambertl.html"
    },
    {
        "block_name": "Interface (H-IL)",
        "libraries": [
            "Simscape/Foundation Library/Hydraulic/Hydraulic Utilities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/interfacehil.html"
    },
    {
        "block_name": "Absolute Reference (TL)",
        "libraries": [
            "Simscape/Foundation Library/Thermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/absolutereferencetl.html"
    },
    {
        "block_name": "Cap (TL)",
        "libraries": [
            "Simscape/Foundation Library/Thermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/captl.html"
    },
    {
        "block_name": "Controlled Reservoir (TL)",
        "libraries": [
            "Simscape/Foundation Library/Thermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/controlledreservoirtl.html"
    },
    {
        "block_name": "Flow Resistance (TL)",
        "libraries": [
            "Simscape/Foundation Library/Thermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/flowresistancetl.html"
    },
    {
        "block_name": "Local Restriction (TL)",
        "libraries": [
            "Simscape/Foundation Library/Thermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/localrestrictiontl.html"
    },
    {
        "block_name": "Infinite Flow Resistance (TL)",
        "libraries": [
            "Simscape/Foundation Library/Thermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/infiniteflowresistancetl.html"
    },
    {
        "block_name": "Pipe (TL)",
        "libraries": [
            "Simscape/Foundation Library/Thermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pipetl.html"
    },
    {
        "block_name": "Rotational Mechanical Converter (TL)",
        "libraries": [
            "Simscape/Foundation Library/Thermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/rotationalmechanicalconvertertl.html"
    },
    {
        "block_name": "Translational Mechanical Converter (TL)",
        "libraries": [
            "Simscape/Foundation Library/Thermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/translationalmechanicalconvertertl.html"
    },
    {
        "block_name": "Reservoir (TL)",
        "libraries": [
            "Simscape/Foundation Library/Thermal Liquid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/reservoirtl.html"
    },
    {
        "block_name": "Pressure & Temperature Sensor (TL)",
        "libraries": [
            "Simscape/Foundation Library/Thermal Liquid/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pressuretemperaturesensortl.html"
    },
    {
        "block_name": "Flow Rate Sensor (TL)",
        "libraries": [
            "Simscape/Foundation Library/Thermal Liquid/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/flowratesensortl.html"
    },
    {
        "block_name": "Thermodynamic Properties Sensor (TL)",
        "libraries": [
            "Simscape/Foundation Library/Thermal Liquid/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/thermodynamicpropertiessensortl.html"
    },
    {
        "block_name": "Flow Rate Source (TL)",
        "libraries": [
            "Simscape/Foundation Library/Thermal Liquid/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/flowratesourcetl.html"
    },
    {
        "block_name": "Pressure Source (TL)",
        "libraries": [
            "Simscape/Foundation Library/Thermal Liquid/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pressuresourcetl.html"
    },
    {
        "block_name": "Thermal Liquid Settings (TL)",
        "libraries": [
            "Simscape/Foundation Library/Thermal Liquid/Utilities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/thermalliquidsettingstl.html"
    },
    {
        "block_name": "Cap (2P)",
        "libraries": [
            "Simscape/Foundation Library/Two-Phase Fluid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/cap2p.html"
    },
    {
        "block_name": "Absolute Reference (2P)",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/absolutereference2p.html"
    },
    {
        "block_name": "Constant Volume Chamber (2P)",
        "libraries": [
            "Simscape/Foundation Library/Two-Phase Fluid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/constantvolumechamber2p.html"
    },
    {
        "block_name": "Controlled Reservoir (2P)",
        "libraries": [
            "Simscape/Foundation Library/Two-Phase Fluid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/controlledreservoir2p.html"
    },
    {
        "block_name": "Flow Resistance (2P)",
        "libraries": [
            "Simscape/Foundation Library/Two-Phase Fluid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/flowresistance2p.html"
    },
    {
        "block_name": "Infinite Flow Resistance (2P)",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/infiniteflowresistance2p.html"
    },
    {
        "block_name": "Local Restriction (2P)",
        "libraries": [
            "Simscape/Foundation Library/Two-Phase Fluid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/localrestriction2p.html"
    },
    {
        "block_name": "Rotational Mechanical Converter (2P)",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/rotationalmechanicalconverter2p.html"
    },
    {
        "block_name": "Reservoir (2P)",
        "libraries": [
            "Simscape/Foundation Library/Two-Phase Fluid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/reservoir2p.html"
    },
    {
        "block_name": "Translational Mechanical Converter (2P)",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/translationalmechanicalconverter2p.html"
    },
    {
        "block_name": "Flow Rate Sensor (2P)",
        "libraries": [
            "Simscape/Foundation Library/Two-Phase Fluid/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/flowratesensor2p.html"
    },
    {
        "block_name": "Pipe (2P)",
        "libraries": [
            "Simscape/Foundation Library/Two-Phase Fluid/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pipe2p.html"
    },
    {
        "block_name": "Pressure, Temperature & Internal Energy Sensor (2P)",
        "libraries": [
            "Simscape/Foundation Library/Two-Phase Fluid/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pressuretemperatureinternalenergysensor2p.html"
    },
    {
        "block_name": "Thermodynamic Properties Sensor (2P)",
        "libraries": [
            "Simscape/Foundation Library/Two-Phase Fluid/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/thermodynamicpropertiessensor2p.html"
    },
    {
        "block_name": "Flow Rate Source (2P)",
        "libraries": [
            "Simscape/Foundation Library/Two-Phase Fluid/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/flowratesource2p.html"
    },
    {
        "block_name": "Vapor Quality Sensor (2P)",
        "libraries": [
            "Simscape/Foundation Library/Two-Phase Fluid/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/vaporqualitysensor2p.html"
    },
    {
        "block_name": "Saturation Properties Sensor (2P)",
        "libraries": [
            "Simscape/Foundation Library/Two-Phase Fluid/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/saturationpropertiessensor2p.html"
    },
    {
        "block_name": "Pressure Source (2P)",
        "libraries": [
            "Simscape/Foundation Library/Two-Phase Fluid/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pressuresource2p.html"
    },
    {
        "block_name": "Two-Phase Fluid Properties (2P)",
        "libraries": [
            "Simscape/Foundation Library/Two-Phase Fluid/Utilities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/twophasefluidproperties2p.html"
    },
    {
        "block_name": "Cap (G)",
        "libraries": [
            "Simscape/Foundation Library/Gas/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/capg.html"
    },
    {
        "block_name": "Constant Volume Chamber (G)",
        "libraries": [
            "Simscape/Foundation Library/Gas/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/constantvolumechamberg.html"
    },
    {
        "block_name": "Absolute Reference (G)",
        "libraries": [
            "Simscape/Foundation Library/Gas/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/absolutereferenceg.html"
    },
    {
        "block_name": "Flow Resistance (G)",
        "libraries": [
            "Simscape/Foundation Library/Gas/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/flowresistanceg.html"
    },
    {
        "block_name": "Controlled Reservoir (G)",
        "libraries": [
            "Simscape/Foundation Library/Gas/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/controlledreservoirg.html"
    },
    {
        "block_name": "Infinite Flow Resistance (G)",
        "libraries": [
            "Simscape/Foundation Library/Gas/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/infiniteflowresistanceg.html"
    },
    {
        "block_name": "Local Restriction (G)",
        "libraries": [
            "Simscape/Foundation Library/Gas/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/localrestrictiong.html"
    },
    {
        "block_name": "Pipe (G)",
        "libraries": [
            "Simscape/Foundation Library/Gas/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pipeg.html"
    },
    {
        "block_name": "Reservoir (G)",
        "libraries": [
            "Simscape/Foundation Library/Gas/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/reservoirg.html"
    },
    {
        "block_name": "Translational Mechanical Converter (G)",
        "libraries": [
            "Simscape/Foundation Library/Gas/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/translationalmechanicalconverterg.html"
    },
    {
        "block_name": "Rotational Mechanical Converter (G)",
        "libraries": [
            "Simscape/Foundation Library/Gas/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/rotationalmechanicalconverterg.html"
    },
    {
        "block_name": "Mach Number Sensor (G)",
        "libraries": [
            "Simscape/Foundation Library/Gas/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/machnumbersensorg.html"
    },
    {
        "block_name": "Flow Rate Sensor (G)",
        "libraries": [
            "Simscape/Foundation Library/Gas/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/flowratesensorg.html"
    },
    {
        "block_name": "Thermodynamic Properties Sensor (G)",
        "libraries": [
            "Simscape/Foundation Library/Gas/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/thermodynamicpropertiessensorg.html"
    },
    {
        "block_name": "Gas Properties (G)",
        "libraries": [
            "Simscape/Foundation Library/Gas/Utilities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/gaspropertiesg.html"
    },
    {
        "block_name": "Pressure Source (G)",
        "libraries": [
            "Simscape/Foundation Library/Gas/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pressuresourceg.html"
    },
    {
        "block_name": "Flow Rate Source (G)",
        "libraries": [
            "Simscape/Foundation Library/Gas/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/flowratesourceg.html"
    },
    {
        "block_name": "Absolute Reference (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/absolutereferencema.html"
    },
    {
        "block_name": "Cap (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/capma.html"
    },
    {
        "block_name": "Constant Volume Chamber (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/constantvolumechamberma.html"
    },
    {
        "block_name": "Controlled Reservoir (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/controlledreservoirma.html"
    },
    {
        "block_name": "Flow Resistance (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/flowresistancema.html"
    },
    {
        "block_name": "Infinite Flow Resistance (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/infiniteflowresistancema.html"
    },
    {
        "block_name": "Pipe (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pipema.html"
    },
    {
        "block_name": "Pressure & Temperature Sensor (G)",
        "libraries": [
            "Simscape/Foundation Library/Gas/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pressuretemperaturesensorg.html"
    },
    {
        "block_name": "Local Restriction (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/localrestrictionma.html"
    },
    {
        "block_name": "Reservoir (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/reservoirma.html"
    },
    {
        "block_name": "Rotational Mechanical Converter (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/rotationalmechanicalconverterma.html"
    },
    {
        "block_name": "Translational Mechanical Converter (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/translationalmechanicalconverterma.html"
    },
    {
        "block_name": "Measurement Selector (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/measurementselectorma.html"
    },
    {
        "block_name": "Flow Rate Sensor (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/flowratesensorma.html"
    },
    {
        "block_name": "Thermodynamic Properties Sensor (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/thermodynamicpropertiessensorma.html"
    },
    {
        "block_name": "Humidity & Trace Gas Sensor (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/humiditytracegassensorma.html"
    },
    {
        "block_name": "Pressure & Temperature Sensor (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pressuretemperaturesensorma.html"
    },
    {
        "block_name": "Pressure Source (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pressuresourcema.html"
    },
    {
        "block_name": "Flow Rate Source (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/flowratesourcema.html"
    },
    {
        "block_name": "Trace Gas Source (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Sources/Moisture & Trace Gas Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/tracegassourcema.html"
    },
    {
        "block_name": "Moisture Source (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Sources/Moisture & Trace Gas Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/moisturesourcema.html"
    },
    {
        "block_name": "Moist Air Properties (MA)",
        "libraries": [
            "Simscape/Foundation Library/Moist Air/Utilities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/moistairpropertiesma.html"
    },
    {
        "block_name": "Convective Heat Transfer",
        "libraries": [
            "Simscape/Foundation Library/Thermal/Thermal Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/convectiveheattransfer.html"
    },
    {
        "block_name": "Conductive Heat Transfer",
        "libraries": [
            "Simscape/Foundation Library/Thermal/Thermal Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/conductiveheattransfer.html"
    },
    {
        "block_name": "Infinite Thermal Resistance",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/infinitethermalresistance.html"
    },
    {
        "block_name": "Radiative Heat Transfer",
        "libraries": [
            "Simscape/Foundation Library/Thermal/Thermal Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/radiativeheattransfer.html"
    },
    {
        "block_name": "Perfect Insulator",
        "libraries": [
            "Simscape/Foundation Library/Thermal/Thermal Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/perfectinsulator.html"
    },
    {
        "block_name": "Thermal Mass",
        "libraries": [
            "Simscape/Foundation Library/Thermal/Thermal Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/thermalmass.html"
    },
    {
        "block_name": "Thermal Resistance",
        "libraries": [
            "Simscape/Foundation Library/Thermal/Thermal Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/thermalresistance.html"
    },
    {
        "block_name": "Thermal Reference",
        "libraries": [
            "Simscape/Foundation Library/Thermal/Thermal Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/thermalreference.html"
    },
    {
        "block_name": "Variable Thermal Resistance",
        "libraries": [
            "Simscape/Foundation Library/Thermal/Thermal Elements"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/variablethermalresistance.html"
    },
    {
        "block_name": "Controlled Heat Flow Rate Source",
        "libraries": [
            "Simscape/Foundation Library/Thermal/Thermal Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/controlledheatflowratesource.html"
    },
    {
        "block_name": "Heat Flow Rate Sensor",
        "libraries": [
            "Simscape/Foundation Library/Thermal/Thermal Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/heatflowratesensor.html"
    },
    {
        "block_name": "Temperature Sensor",
        "libraries": [
            "Simscape/Foundation Library/Thermal/Thermal Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/temperaturesensor.html"
    },
    {
        "block_name": "Controlled Temperature Source",
        "libraries": [
            "Simscape/Foundation Library/Thermal/Thermal Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/controlledtemperaturesource.html"
    },
    {
        "block_name": "PS Constant Delay",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Delays"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psconstantdelay.html"
    },
    {
        "block_name": "Temperature Source",
        "libraries": [
            "Simscape/Foundation Library/Thermal/Thermal Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/temperaturesource.html"
    },
    {
        "block_name": "Heat Flow Rate Source",
        "libraries": [
            "Simscape/Foundation Library/Thermal/Thermal Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/heatflowratesource.html"
    },
    {
        "block_name": "PS Asynchronous Sample & Hold",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Discrete"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psasynchronoussamplehold.html"
    },
    {
        "block_name": "PS Concatenate",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psconcatenate.html"
    },
    {
        "block_name": "PS Add",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psadd.html"
    },
    {
        "block_name": "PS Bias",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psbias.html"
    },
    {
        "block_name": "PS Variable Delay",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Delays"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psvariabledelay.html"
    },
    {
        "block_name": "PS Divide",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psdivide.html"
    },
    {
        "block_name": "PS Gain",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psgain.html"
    },
    {
        "block_name": "PS Math Function",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psmathfunction.html"
    },
    {
        "block_name": "PS Dot Product",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psdotproduct.html"
    },
    {
        "block_name": "PS Product",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psproduct.html"
    },
    {
        "block_name": "PS Subtract",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pssubtract.html"
    },
    {
        "block_name": "PS Transfer Function",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Linear Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pstransferfunction.html"
    },
    {
        "block_name": "PS Sum of Elements",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Functions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pssumofelements.html"
    },
    {
        "block_name": "PS Lookup Table (1D)",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Lookup Tables"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pslookuptable1d.html"
    },
    {
        "block_name": "PS Integrator",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Linear Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psintegrator.html"
    },
    {
        "block_name": "PS Lookup Table (3D)",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Lookup Tables"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pslookuptable3d.html"
    },
    {
        "block_name": "PS Lookup Table (2D)",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Lookup Tables"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pslookuptable2d.html"
    },
    {
        "block_name": "PS Lookup Table (4D)",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Lookup Tables"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pslookuptable4d.html"
    },
    {
        "block_name": "PS Scattered Lookup Table (3D)",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Lookup Tables"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psscatteredlookuptable3d.html"
    },
    {
        "block_name": "PS Abs",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Nonlinear Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psabs.html"
    },
    {
        "block_name": "PS Ceil",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Nonlinear Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psceil.html"
    },
    {
        "block_name": "PS Dead Zone",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Nonlinear Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psdeadzone.html"
    },
    {
        "block_name": "PS Scattered Lookup Table (2D)",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Lookup Tables"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psscatteredlookuptable2d.html"
    },
    {
        "block_name": "PS Fix",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Nonlinear Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psfix.html"
    },
    {
        "block_name": "PS Floor",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Nonlinear Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psfloor.html"
    },
    {
        "block_name": "PS Saturation",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Nonlinear Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pssaturation.html"
    },
    {
        "block_name": "PS Round",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Nonlinear Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psround.html"
    },
    {
        "block_name": "PS Selector",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Nonlinear Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psselector.html"
    },
    {
        "block_name": "PS Switch",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Nonlinear Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psswitch.html"
    },
    {
        "block_name": "PS Sign",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Nonlinear Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pssign.html"
    },
    {
        "block_name": "PS Three-Element Demux",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Nonlinear Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psthreeelementdemux.html"
    },
    {
        "block_name": "PS Max",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Nonlinear Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psmax.html"
    },
    {
        "block_name": "PS Min",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Nonlinear Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psmin.html"
    },
    {
        "block_name": "PS Constant Offset Estimator",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Periodic Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psconstantoffsetestimator.html"
    },
    {
        "block_name": "PS Vector Norm",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Nonlinear Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psvectornorm.html"
    },
    {
        "block_name": "PS Harmonic Estimator (Real, Imaginary)",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Periodic Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psharmonicestimatorrealimaginary.html"
    },
    {
        "block_name": "PS Harmonic Estimator (Amplitude, Phase)",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Periodic Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psharmonicestimatoramplitudephase.html"
    },
    {
        "block_name": "PS Terminator",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Sinks"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psterminator.html"
    },
    {
        "block_name": "PS Constant",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psconstant.html"
    },
    {
        "block_name": "PS RMS Estimator",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Periodic Operators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psrmsestimator.html"
    },
    {
        "block_name": "PS Ramp",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psramp.html"
    },
    {
        "block_name": "PS Counter",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pscounter.html"
    },
    {
        "block_name": "PS Random Number",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psrandomnumber.html"
    },
    {
        "block_name": "PS Repeating Sequence",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psrepeatingsequence.html"
    },
    {
        "block_name": "PS Sine Wave",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pssinewave.html"
    },
    {
        "block_name": "PS Step",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psstep.html"
    },
    {
        "block_name": "PS Uniform Random Number",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/psuniformrandomnumber.html"
    },
    {
        "block_name": "PS Signal Specification",
        "libraries": [
            "Simscape/Foundation Library/Physical Signals/Utilities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pssignalspecification.html"
    },
    {
        "block_name": "PS-Simulink Converter",
        "libraries": [
            "Simscape/Utilities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/pssimulinkconverter.html"
    },
    {
        "block_name": "Connection Label",
        "libraries": [
            "Simscape/Utilities",
            "RF Blockset/Circuit Envelope/Utilities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/connectionlabel.html"
    },
    {
        "block_name": "Probe",
        "libraries": [
            "Simscape/Utilities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/probe.html"
    },
    {
        "block_name": "Simulink-PS Converter",
        "libraries": [
            "Simscape/Utilities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/simulinkpsconverter.html"
    },
    {
        "block_name": "Connection Port",
        "libraries": [
            "Simulink/Signal Routing",
            "Simscape/Utilities",
            "Powertrain Blockset/Utilities/Simscape",
            "RF Blockset/Equivalent Baseband/Input",
            "RF Blockset/Circuit Envelope/Utilities",
            "Vehicle Dynamics Blockset/Utilities/Simscape"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/connectionport.html"
    },
    {
        "block_name": "Simscape Bus",
        "libraries": [
            "Simscape/Utilities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/simscapebus.html"
    },
    {
        "block_name": "Solver Configuration",
        "libraries": [
            "Simscape/Utilities"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/solverconfiguration.html"
    },
    {
        "block_name": "Simscape Component",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/simscapecomponent.html"
    },
    {
        "block_name": "Variant Connector",
        "libraries": [
            "Simscape/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VariantControls</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong> cell array of character vectors</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Value:</strong> Variant control that is associated with the\n                Variant choice</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Variant'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simscape/ref/variantconnector.html"
    },
    {
        "block_name": "Network Coupler (Compressible Link)",
        "libraries": [
            "Simscape/Utilities/Network Couplers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/networkcouplercompressiblelink.html"
    },
    {
        "block_name": "Network Coupler (Flexible Shaft)",
        "libraries": [
            "Simscape/Utilities/Network Couplers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/networkcouplerflexibleshaft.html"
    },
    {
        "block_name": "Network Coupler (Capacitor)",
        "libraries": [
            "Simscape/Utilities/Network Couplers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/networkcouplercapacitor.html"
    },
    {
        "block_name": "Network Coupler (Current-Voltage)",
        "libraries": [
            "Simscape/Utilities/Network Couplers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/networkcouplercurrentvoltage.html"
    },
    {
        "block_name": "Network Coupler (Inductor)",
        "libraries": [
            "Simscape/Utilities/Network Couplers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/networkcouplerinductor.html"
    },
    {
        "block_name": "Network Coupler (Voltage-Current)",
        "libraries": [
            "Simscape/Utilities/Network Couplers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/networkcouplervoltagecurrent.html"
    },
    {
        "block_name": "Network Coupler (Voltage-Voltage)",
        "libraries": [
            "Simscape/Utilities/Network Couplers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/networkcouplervoltagevoltage.html"
    },
    {
        "block_name": "Network Coupler (Thermal Mass)",
        "libraries": [
            "Simscape/Utilities/Network Couplers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/networkcouplerthermalmass.html"
    },
    {
        "block_name": "Network Coupler (Constant Volume Chamber (IL))",
        "libraries": [
            "Simscape/Utilities/Network Couplers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/networkcouplerconstantvolumechamberil.html"
    },
    {
        "block_name": "Prediction (discrete->continuous)",
        "libraries": [
            "Simscape/Utilities/Network Couplers/Fundamental Components"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/predictiondiscretecontinuous.html"
    },
    {
        "block_name": "Prediction (slow->fast)",
        "libraries": [
            "Simscape/Utilities/Network Couplers/Fundamental Components"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/predictionslowfast.html"
    },
    {
        "block_name": "Smoothing (continuous->discrete)",
        "libraries": [
            "Simscape/Utilities/Network Couplers/Fundamental Components"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/smoothingcontinuousdiscrete.html"
    },
    {
        "block_name": "Smoothing (fast->slow)",
        "libraries": [
            "Simscape/Utilities/Network Couplers/Fundamental Components"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/smoothingfastslow.html"
    },
    {
        "block_name": "Network Coupler (Constant Volume Chamber (TL))",
        "libraries": [
            "Simscape/Utilities/Network Couplers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/networkcouplerconstantvolumechambertl.html"
    },
    {
        "block_name": "Spectrum Analyzer",
        "libraries": [
            "Simscape/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SpectrumType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector or\n                                    string scalar</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simscape/ref/spectrumanalyzer.html"
    },
    {
        "block_name": "Simscape Component",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape/ref/simscapecomponent.html"
    },
    {
        "block_name": "Battery",
        "libraries": [
            "Simscape/Electrical/Sources",
            "Simscape/Battery/Cells"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/battery.html"
    },
    {
        "block_name": "Battery Equivalent Circuit",
        "libraries": [
            "Simscape/Battery/Cells"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/batteryequivalentcircuit.html"
    },
    {
        "block_name": "Battery (Table-Based)",
        "libraries": [
            "Simscape/Electrical/Sources",
            "Simscape/Battery/Cells"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/batterytablebased.html"
    },
    {
        "block_name": "Module (Generated Block)",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/modulegeneratedblock.html"
    },
    {
        "block_name": "Battery Single Particle",
        "libraries": [
            "Simscape/Battery/Cells"
        ],
        "parameters": [
            [
                "<tr><td width=\"150\"><strong>Parameter: </strong></td><td><code class=\"apiname\">ExtrapolationMethod</code></td></tr>",
                "<tr><td width=\"150\"><strong>Values: </strong></td><td><span class=\"example_desc\"><code class=\"literal\">\"nearest\"</code> (default) | <code class=\"literal\">\"linear\"</code> | <code class=\"literal\">\"error\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/batterysingleparticle.html"
    },
    {
        "block_name": "ParallelAssembly (Generated Block)",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/parallelassemblygeneratedblock.html"
    },
    {
        "block_name": "ModuleAssembly (Generated Block)",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/moduleassemblygeneratedblock.html"
    },
    {
        "block_name": "Pack (Generated Block)",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/packgeneratedblock.html"
    },
    {
        "block_name": "Battery CC-CV",
        "libraries": [
            "Simscape/Battery/BMS/Current Management"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/batterycccv.html"
    },
    {
        "block_name": "Passive Cell Balancing",
        "libraries": [
            "Simscape/Battery/BMS/Cell Balancing"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/passivecellbalancing.html"
    },
    {
        "block_name": "Battery Charging Current Limit",
        "libraries": [
            "Simscape/Battery/BMS/Current Management"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/batterychargingcurrentlimit.html"
    },
    {
        "block_name": "Battery Discharging Current Limit",
        "libraries": [
            "Simscape/Battery/BMS/Current Management"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/batterydischargingcurrentlimit.html"
    },
    {
        "block_name": "SOC Estimator (Adaptive Kalman Filter)",
        "libraries": [
            "Simscape/Battery/BMS/Estimators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/socestimatoradaptivekalmanfilter.html"
    },
    {
        "block_name": "SOC Estimator (Adaptive Kalman Filter, Variable Capacity)",
        "libraries": [
            "Simscape/Battery/BMS/Estimators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/socestimatoradaptivekalmanfiltervariablecapacity.html"
    },
    {
        "block_name": "SOC Estimator (Coulomb Counting)",
        "libraries": [
            "Simscape/Battery/BMS/Estimators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/socestimatorcoulombcounting.html"
    },
    {
        "block_name": "SOC Estimator (Coulomb Counting, Variable Capacity)",
        "libraries": [
            "Simscape/Battery/BMS/Estimators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/socestimatorcoulombcountingvariablecapacity.html"
    },
    {
        "block_name": "SOC Estimator (Kalman Filter)",
        "libraries": [
            "Simscape/Battery/BMS/Estimators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/socestimatorkalmanfilter.html"
    },
    {
        "block_name": "SOE Estimator (Adaptive Kalman Filter)",
        "libraries": [
            "Simscape/Battery/BMS/Estimators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/soeestimatoradaptivekalmanfilter.html"
    },
    {
        "block_name": "SOC Estimator (Kalman Filter, Variable Capacity)",
        "libraries": [
            "Simscape/Battery/BMS/Estimators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/socestimatorkalmanfiltervariablecapacity.html"
    },
    {
        "block_name": "SOE Estimator (Adaptive Kalman Filter, Variable Energy Capacity)",
        "libraries": [
            "Simscape/Battery/BMS/Estimators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/soeestimatoradaptivekalmanfiltervariableenergycapacity.html"
    },
    {
        "block_name": "SOE Estimator (Energy Counting)",
        "libraries": [
            "Simscape/Battery/BMS/Estimators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/soeestimatorenergycounting.html"
    },
    {
        "block_name": "SOE Estimator (Energy Counting, Variable Energy Capacity)",
        "libraries": [
            "Simscape/Battery/BMS/Estimators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/soeestimatorenergycountingvariableenergycapacity.html"
    },
    {
        "block_name": "SOE Estimator (Kalman Filter)",
        "libraries": [
            "Simscape/Battery/BMS/Estimators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/soeestimatorkalmanfilter.html"
    },
    {
        "block_name": "SOE Estimator (Kalman Filter, Variable Energy Capacity)",
        "libraries": [
            "Simscape/Battery/BMS/Estimators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/soeestimatorkalmanfiltervariableenergycapacity.html"
    },
    {
        "block_name": "Battery Capacity Estimator (Least Squares, Variable Weights)",
        "libraries": [
            "Simscape/Battery/BMS/Estimators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/batterycapacityestimatorleastsquaresvariableweights.html"
    },
    {
        "block_name": "Battery Capacity Estimator (Least Squares)",
        "libraries": [
            "Simscape/Battery/BMS/Estimators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/batterycapacityestimatorleastsquares.html"
    },
    {
        "block_name": "SOH Estimator",
        "libraries": [
            "Simscape/Battery/BMS/Estimators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/sohestimator.html"
    },
    {
        "block_name": "Battery Capacity Estimator (Kalman Filter)",
        "libraries": [
            "Simscape/Battery/BMS/Estimators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/batterycapacityestimatorkalmanfilter.html"
    },
    {
        "block_name": "Battery Cell Contact Monitoring",
        "libraries": [
            "Simscape/Battery/BMS/Protection"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/batterycellcontactmonitoring.html"
    },
    {
        "block_name": "SOH Estimator (Capacity-Based)",
        "libraries": [
            "Simscape/Battery/BMS/Estimators"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/sohestimatorcapacitybased.html"
    },
    {
        "block_name": "Battery Current Monitoring",
        "libraries": [
            "Simscape/Battery/BMS/Protection"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/batterycurrentmonitoring.html"
    },
    {
        "block_name": "Battery Voltage Monitoring",
        "libraries": [
            "Simscape/Battery/BMS/Protection"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/batteryvoltagemonitoring.html"
    },
    {
        "block_name": "Battery Temperature Monitoring",
        "libraries": [
            "Simscape/Battery/BMS/Protection"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/batterytemperaturemonitoring.html"
    },
    {
        "block_name": "Fault Qualification",
        "libraries": [
            "Simscape/Battery/BMS/Protection"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/faultqualification.html"
    },
    {
        "block_name": "Battery Coolant Control",
        "libraries": [
            "Simscape/Battery/BMS/Thermal Management"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/batterycoolantcontrol.html"
    },
    {
        "block_name": "Charger",
        "libraries": [
            "Simscape/Battery/Cyclers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/charger.html"
    },
    {
        "block_name": "Battery Heater Control",
        "libraries": [
            "Simscape/Battery/BMS/Thermal Management"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/batteryheatercontrol.html"
    },
    {
        "block_name": "Discharger",
        "libraries": [
            "Simscape/Battery/Cyclers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/discharger.html"
    },
    {
        "block_name": "Cycler",
        "libraries": [
            "Simscape/Battery/Cyclers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/cycler.html"
    },
    {
        "block_name": "Edge Cooling",
        "libraries": [
            "Simscape/Battery/Thermal"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/edgecooling.html"
    },
    {
        "block_name": "Parallel Channels",
        "libraries": [
            "Simscape/Battery/Thermal"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/parallelchannels.html"
    },
    {
        "block_name": "arrayOfThermalNodesConnector",
        "libraries": [
            "Simscape/Battery/Thermal"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/arrayofthermalnodesconnector.html"
    },
    {
        "block_name": "U-shaped Channels",
        "libraries": [
            "Simscape/Battery/Thermal"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/ushapedchannels.html"
    },
    {
        "block_name": "Active Interface",
        "libraries": [
            "Simscape/Battery/HIL"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/activeinterface.html"
    },
    {
        "block_name": "Passive Interface",
        "libraries": [
            "Simscape/Battery/HIL"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/passiveinterface.html"
    },
    {
        "block_name": "Passive Balancing Interface",
        "libraries": [
            "Simscape/Battery/HIL"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/passivebalancinginterface.html"
    },
    {
        "block_name": "arrayOfElectricalNodesConnector",
        "libraries": [
            "Simscape/Battery/Connectors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simscape-battery/ref/arrayofelectricalnodesconnector.html"
    },
    {
        "block_name": "Belt Drive",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/beltdrive.html"
    },
    {
        "block_name": "Belt Pulley",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/beltpulley.html"
    },
    {
        "block_name": "4-Speed CR-CR",
        "libraries": [
            "Simscape/Driveline/Transmissions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/4speedcrcr.html"
    },
    {
        "block_name": "4-Speed Ravigneaux",
        "libraries": [
            "Simscape/Driveline/Transmissions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/4speedravigneaux.html"
    },
    {
        "block_name": "7-Speed Lepelletier",
        "libraries": [
            "Simscape/Driveline/Transmissions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/7speedlepelletier.html"
    },
    {
        "block_name": "8-Speed",
        "libraries": [
            "Simscape/Driveline/Transmissions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/8speed.html"
    },
    {
        "block_name": "9-Speed",
        "libraries": [
            "Simscape/Driveline/Transmissions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/9speed.html"
    },
    {
        "block_name": "6-Speed Lepelletier",
        "libraries": [
            "Simscape/Driveline/Transmissions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/6speedlepelletier.html"
    },
    {
        "block_name": "10-Speed",
        "libraries": [
            "Simscape/Driveline/Transmissions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/10speed.html"
    },
    {
        "block_name": "Rotational Velocity Noise Source",
        "libraries": [
            "Simscape/Driveline/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/rotationalvelocitynoisesource.html"
    },
    {
        "block_name": "Transmission",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/transmission.html"
    },
    {
        "block_name": "Force Noise Source",
        "libraries": [
            "Simscape/Driveline/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/forcenoisesource.html"
    },
    {
        "block_name": "Torque Noise Source",
        "libraries": [
            "Simscape/Driveline/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/torquenoisesource.html"
    },
    {
        "block_name": "Translational Velocity Noise Source",
        "libraries": [
            "Simscape/Driveline/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/translationalvelocitynoisesource.html"
    },
    {
        "block_name": "Sinusoidal Force Source",
        "libraries": [
            "Simscape/Driveline/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/sinusoidalforcesource.html"
    },
    {
        "block_name": "Sinusoidal Torque Source",
        "libraries": [
            "Simscape/Driveline/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/sinusoidaltorquesource.html"
    },
    {
        "block_name": "Sinusoidal Rotational Velocity Source",
        "libraries": [
            "Simscape/Driveline/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/sinusoidalrotationalvelocitysource.html"
    },
    {
        "block_name": "Sinusoidal Translational Velocity Source",
        "libraries": [
            "Simscape/Driveline/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/sinusoidaltranslationalvelocitysource.html"
    },
    {
        "block_name": "Rotational Damper",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives/Springs & Dampers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/rotationaldamper.html"
    },
    {
        "block_name": "Translational Damper",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives/Springs & Dampers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/translationaldamper.html"
    },
    {
        "block_name": "Band Brake",
        "libraries": [
            "Simscape/Driveline/Brakes & Detents/Rotational"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/bandbrake.html"
    },
    {
        "block_name": "Disc Brake",
        "libraries": [
            "Simscape/Driveline/Brakes & Detents/Rotational"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/discbrake.html"
    },
    {
        "block_name": "Double-Shoe Brake",
        "libraries": [
            "Simscape/Driveline/Brakes & Detents/Rotational"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/doubleshoebrake.html"
    },
    {
        "block_name": "Loaded-Contact Rotational Friction",
        "libraries": [
            "Simscape/Driveline/Brakes & Detents/Rotational"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"7\"><strong class=\"guilabel\">Friction</strong></th></tr>",
                "<tr><td colspan=\"7\"><strong class=\"guilabel\">Friction model</strong></td></tr>",
                "<tr><td rowspan=\"2\"><code class=\"guidropdown\">Fixed kinetic\n                                                  friction coefficient</code></td><td colspan=\"2\" rowspan=\"2\"><code class=\"guidropdown\">Velocity-dependent\n                                                  kinetic friction coefficient</code></td><td colspan=\"2\"><code class=\"guidropdown\">Temperature-dependent friction\n                                                  coefficients</code></td><td colspan=\"2\"><code class=\"guidropdown\">Temperature and velocity-dependent\n                                                  friction coefficients</code></td></tr>",
                "<tr><td colspan=\"2\"><p>Exposes:</p>\n<div class=\"itemizedlist\"><ul><li><p>Conserving port\n                                                  <strong class=\"guilabel\">H</strong></p></li><li><p>Thermal parameters in the\n                                                  <strong class=\"guilabel\">Friction</strong> settings</p></li><li><p>\n<strong class=\"guilabel\">Thermal Port</strong> settings</p></li></ul></div><p>\n</p></td><td colspan=\"2\"><p>Exposes:</p>\n<div class=\"itemizedlist\"><ul><li><p>Conserving port\n                                                  <strong class=\"guilabel\">H</strong></p></li><li><p>Thermal parameters in the\n                                                  <strong class=\"guilabel\">Friction</strong> settings</p></li><li><p>\n<strong class=\"guilabel\">Thermal Port</strong> settings</p></li></ul></div><p>\n</p></td></tr>",
                "<tr><td>-</td><td colspan=\"2\">-</td><td colspan=\"2\"><strong class=\"guilabel\">Temperature vector</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Temperature vector</strong></td></tr>",
                "<tr><td>-</td><td colspan=\"2\"><strong class=\"guilabel\">Relative velocity\n                                                  vector</strong></td><td colspan=\"2\">-</td><td colspan=\"2\"><strong class=\"guilabel\">Relative velocity\n                                                  vector</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Static friction\n                                                  coefficient</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Static friction\n                                                  coefficient</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Static friction coefficient\n                                                  vector</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Static friction coefficient\n                                                  vector</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Kinetic friction\n                                                  coefficient</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Kinetic friction coefficient\n                                                  vector</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Kinetic friction coefficient\n                                                  vector</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Kinetic friction coefficient\n                                                  matrix</strong></td></tr>",
                "<tr><td>-</td><td colspan=\"2\"><strong class=\"guilabel\">Friction coefficient interpolation\n                                                  method</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Friction coefficient interpolation\n                                                  method</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Friction coefficient interpolation\n                                                  method</strong></td></tr>",
                "<tr><td>-</td><td colspan=\"2\"><strong class=\"guilabel\">Friction coefficient extrapolation\n                                                  method</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Friction coefficient extrapolation\n                                                  method</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Friction coefficient extrapolation\n                                                  method</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Velocity\n                                                  tolerance</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Velocity tolerance</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Velocity tolerance</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Velocity tolerance</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Threshold\n                                                  force</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Threshold force</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Threshold force</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Threshold force</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Viscous drag torque\n                                                  coefficient</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Viscous drag torque\n                                                  coefficient</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Viscous drag torque\n                                                  coefficient</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Viscous drag torque\n                                                  coefficient</strong></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sdl/ref/loadedcontactrotationalfriction.html"
    },
    {
        "block_name": "Rotational Detent",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/rotationaldetent.html"
    },
    {
        "block_name": "Translational Detent",
        "libraries": [
            "Simscape/Driveline/Brakes & Detents/Translational"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/translationaldetent.html"
    },
    {
        "block_name": "Loaded-Contact Translational Friction",
        "libraries": [
            "Simscape/Driveline/Brakes & Detents/Translational"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"7\"><strong class=\"guilabel\">Friction</strong></th></tr>",
                "<tr><td colspan=\"7\"><strong class=\"guilabel\">Friction model</strong></td></tr>",
                "<tr><td rowspan=\"2\"><code class=\"guidropdown\">Fixed kinetic\n                                                  friction coefficient</code></td><td colspan=\"2\" rowspan=\"2\"><code class=\"guidropdown\">Velocity-dependent\n                                                  kinetic friction coefficient</code></td><td colspan=\"2\"><code class=\"guidropdown\">Temperature-dependent friction\n                                                  coefficients</code></td><td colspan=\"2\"><code class=\"guidropdown\">Temperature and velocity-dependent\n                                                  friction coefficients</code></td></tr>",
                "<tr><td colspan=\"2\"><p>Exposes:</p>\n<div class=\"itemizedlist\"><ul><li><p>Conserving port\n                                                  <strong class=\"guilabel\">H</strong></p></li><li><p>Thermal parameters in the\n                                                  <strong class=\"guilabel\">Friction</strong> settings</p></li><li><p>\n<strong class=\"guilabel\">Thermal Port</strong> settings</p></li></ul></div><p>\n</p></td><td colspan=\"2\"><p>Exposes:</p>\n<div class=\"itemizedlist\"><ul><li><p>Conserving port\n                                                  <strong class=\"guilabel\">H</strong></p></li><li><p>Thermal parameters in the\n                                                  <strong class=\"guilabel\">Friction</strong> settings</p></li><li><p>\n<strong class=\"guilabel\">Thermal Port</strong> settings</p></li></ul></div><p>\n</p></td></tr>",
                "<tr><td>-</td><td colspan=\"2\">-</td><td colspan=\"2\"><strong class=\"guilabel\">Temperature vector</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Temperature vector</strong></td></tr>",
                "<tr><td>-</td><td colspan=\"2\"><strong class=\"guilabel\">Relative velocity\n                                                  vector</strong></td><td colspan=\"2\">-</td><td colspan=\"2\"><strong class=\"guilabel\">Relative velocity\n                                                  vector</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Static friction\n                                                  coefficient</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Static friction\n                                                  coefficient</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Static friction coefficient\n                                                  vector</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Static friction coefficient\n                                                  vector</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Kinetic friction\n                                                  coefficient</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Kinetic friction coefficient\n                                                  vector</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Kinetic friction coefficient\n                                                  vector</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Kinetic friction coefficient\n                                                  matrix</strong></td></tr>",
                "<tr><td>-</td><td colspan=\"2\"><strong class=\"guilabel\">Friction coefficient interpolation\n                                                  method</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Friction coefficient interpolation\n                                                  method</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Friction coefficient interpolation\n                                                  method</strong></td></tr>",
                "<tr><td>-</td><td colspan=\"2\"><strong class=\"guilabel\">Friction coefficient extrapolation\n                                                  method</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Friction coefficient extrapolation\n                                                  method</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Friction coefficient extrapolation\n                                                  method</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Velocity\n                                                  tolerance</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Velocity tolerance</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Velocity tolerance</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Velocity tolerance</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Threshold\n                                                  force</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Threshold force</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Threshold force</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Threshold force</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Viscous drag torque\n                                                  coefficient</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Viscous drag torque\n                                                  coefficient</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Viscous drag torque\n                                                  coefficient</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Viscous drag torque\n                                                  coefficient</strong></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sdl/ref/loadedcontacttranslationalfriction.html"
    },
    {
        "block_name": "Cone Clutch",
        "libraries": [
            "Simscape/Driveline/Clutches"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"7\"><strong class=\"guilabel\">Geometry</strong></th></tr>",
                "<tr><td colspan=\"7\"><strong class=\"guilabel\">Contact surface maximum\n                                                  diameter</strong></td></tr>",
                "<tr><td colspan=\"7\"><strong class=\"guilabel\">Contact surface minimum\n                                                  diameter</strong></td></tr>",
                "<tr><td colspan=\"7\"><strong class=\"guilabel\">Cone half angle</strong></td></tr>",
                "<tr><td colspan=\"7\"><strong class=\"guilabel\">Shift linkage control</strong>\n</td></tr>",
                "<tr><td colspan=\"3\"><code class=\"guidropdown\">Physical\n                                                  signal</code></td><td colspan=\"4\"><code class=\"guidropdown\">Conserving\n                                                  port</code></td></tr>",
                "<tr><td colspan=\"3\"><p>Exposes\n                                                  physical signal input port\n                                                  <strong class=\"guilabel\">N</strong></p></td><td colspan=\"4\"><p>Exposes:</p>\n<div class=\"itemizedlist\"><ul><li><p>Conserving port\n                                                  <strong class=\"guilabel\">S</strong></p></li><li><p>Physical signal output port\n                                                  <strong class=\"guilabel\">X</strong></p></li><li><p>\n<strong class=\"guilabel\">Shift Linkage</strong> settings</p></li></ul></div><p>\n</p></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sdl/ref/coneclutch.html"
    },
    {
        "block_name": "Disc Friction Clutch",
        "libraries": [
            "Simscape/Driveline/Clutches"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"7\"><strong class=\"guilabel\">Friction</strong></th></tr>",
                "<tr><td colspan=\"7\"><strong class=\"guilabel\">Friction\n                                model</strong></td></tr>",
                "<tr><td rowspan=\"2\"><code class=\"guidropdown\">Fixed kinetic friction\n                                    coefficient</code></td><td colspan=\"2\" rowspan=\"2\"><code class=\"guidropdown\">Velocity-dependent kinetic friction\n                                    coefficient</code></td><td colspan=\"2\"><code class=\"guidropdown\">Temperature-dependent\n                                    friction coefficients</code></td><td colspan=\"2\"><code class=\"guidropdown\">Temperature and\n                                    velocity-dependent friction coefficients</code></td></tr>",
                "<tr><td colspan=\"2\"><p>Exposes:</p>\n<div class=\"itemizedlist\"><ul><li><p>Conserving port <strong class=\"guilabel\">H</strong></p></li><li><p>\n<strong class=\"guilabel\">Thermal Port </strong>settings</p></li></ul></div><p>\n</p></td><td colspan=\"2\"><p>Exposes:</p>\n<div class=\"itemizedlist\"><ul><li><p>Conserving port <strong class=\"guilabel\">H</strong></p></li><li><p>\n<strong class=\"guilabel\">Thermal Port </strong>settings</p></li></ul></div><p>\n</p></td></tr>",
                "<tr><td>-</td><td colspan=\"2\"><strong class=\"guilabel\">Relative velocity\n                                    vector</strong></td><td colspan=\"2\">-</td><td colspan=\"2\"><strong class=\"guilabel\">Relative velocity\n                                    vector</strong></td></tr>",
                "<tr><td>-</td><td colspan=\"2\">-</td><td colspan=\"2\"><strong class=\"guilabel\">Temperature\n                                    vector</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Temperature\n                                    vector</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Static friction coefficient</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Static friction\n                                    coefficient</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Static friction\n                                    coefficient vector</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Static friction\n                                    coefficient vector</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Kinetic friction coefficient</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Kinetic friction\n                                    coefficient vector</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Kinetic friction\n                                    coefficient vector</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Kinetic friction\n                                    coefficient matrix</strong></td></tr>",
                "<tr><td>-</td><td colspan=\"2\"><strong class=\"guilabel\">Friction coefficient\n                                    interpolation method</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Friction coefficient\n                                    interpolation method</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Friction coefficient\n                                    interpolation method</strong></td></tr>",
                "<tr><td>-</td><td colspan=\"2\"><strong class=\"guilabel\">Friction coefficient\n                                    extrapolation method</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Friction coefficient\n                                    extrapolation method</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Friction coefficient\n                                    extrapolation method</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">De-rating factor</strong></td><td colspan=\"2\"><strong class=\"guilabel\">De-rating\n                                    factor</strong></td><td colspan=\"2\"><strong class=\"guilabel\">De-rating\n                                    factor</strong></td><td colspan=\"2\"><strong class=\"guilabel\">De-rating\n                                    factor</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Clutch velocity tolerance</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Clutch velocity\n                                    tolerance</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Clutch velocity\n                                    tolerance</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Clutch velocity\n                                    tolerance</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Engagement threshold pressure</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Engagement threshold\n                                    pressure</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Engagement threshold\n                                    pressure</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Engagement threshold\n                                    pressure</strong></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sdl/ref/discfrictionclutch.html"
    },
    {
        "block_name": "Dog Clutch",
        "libraries": [
            "Simscape/Driveline/Clutches"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/dogclutch.html"
    },
    {
        "block_name": "Logic-Controlled Clutch",
        "libraries": [
            "Simscape/Driveline/Clutches"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/logiccontrolledclutch.html"
    },
    {
        "block_name": "Fundamental Friction Clutch",
        "libraries": [
            "Simscape/Driveline/Clutches/Fundamental Components"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/fundamentalfrictionclutch.html"
    },
    {
        "block_name": "Double-Sided Synchronizer",
        "libraries": [
            "Simscape/Driveline/Clutches"
        ],
        "parameters": [
            [
                "<tr><th>Dog Clutch State</th><th>Parameter Restriction</th></tr>",
                "<tr><td>Dog clutch A Initially engaged</td><td>Negative of the parameter value must be greater than\n                                            the sum of parameters <strong class=\"guilabel\">Ring-hub clearance when\n                                                dog clutch disengaged</strong> and <strong class=\"guilabel\">Tooth\n                                                overlap to engage</strong></td></tr>",
                "<tr><td>Dog clutch A Initially disengaged</td><td>Negative of the parameter value must be smaller than\n                                            the sum of parameters <strong class=\"guilabel\">Ring-hub clearance when\n                                                dog clutch disengaged</strong> and <strong class=\"guilabel\">Tooth\n                                                overlap to engage</strong></td></tr>",
                "<tr><td>Dog clutch B Initially engaged</td><td>Parameter value must be greater than the sum of\n                                            parameters <strong class=\"guilabel\">Ring-hub clearance when dog clutch\n                                                disengaged</strong> and <strong class=\"guilabel\">Tooth overlap to\n                                                engage</strong></td></tr>",
                "<tr><td>Dog clutch B Initially disengaged</td><td>Parameter value must be smaller than the sum of\n                                            parameters <strong class=\"guilabel\">Ring-hub clearance when dog clutch\n                                                disengaged</strong> and <strong class=\"guilabel\">Tooth overlap to\n                                                engage</strong></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sdl/ref/doublesidedsynchronizer.html"
    },
    {
        "block_name": "Unidirectional Clutch",
        "libraries": [
            "Simscape/Driveline/Clutches"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/unidirectionalclutch.html"
    },
    {
        "block_name": "Synchronizer",
        "libraries": [
            "Simscape/Driveline/Clutches"
        ],
        "parameters": [
            [
                "<tr><th>Linkage Travel Direction </th><th>Dog Clutch State</th><th>Parameter Restriction</th></tr>",
                "<tr><td rowspan=\"2\"><code class=\"guidropdown\">Positive shift linkage\n                                                displacement engages clutch</code></td><td>Initially engaged</td><td>Parameter must be greater than the sum of parameters\n                                                <strong class=\"guilabel\">Ring-hub clearance when dog clutch\n                                                disengaged</strong> and <strong class=\"guilabel\">Tooth overlap to\n                                                engage</strong></td></tr>",
                "<tr><td>Initially disengaged</td><td>Parameter must be smaller than the sum of parameters\n                                                <strong class=\"guilabel\">Ring-hub clearance when dog clutch\n                                                disengaged</strong> and <strong class=\"guilabel\">Tooth overlap to\n                                                engage</strong></td></tr>",
                "<tr><td rowspan=\"2\"><code class=\"guidropdown\">Negative shift linkage\n                                                displacement engages clutch</code></td><td>Initially engaged</td><td>Negative of the parameter must be greater than the\n                                            sum of parameters <strong class=\"guilabel\">Ring-hub clearance when dog\n                                                clutch disengaged</strong> and <strong class=\"guilabel\">Tooth\n                                                overlap to engage</strong></td></tr>",
                "<tr><td>Initially disengaged</td><td>Negative of the parameter must be smaller than the\n                                            sum of parameters <strong class=\"guilabel\">Ring-hub clearance when dog\n                                                clutch disengaged</strong> and <strong class=\"guilabel\">Tooth\n                                                overlap to engage</strong></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sdl/ref/synchronizer.html"
    },
    {
        "block_name": "Belt Drive",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/beltdrive.html"
    },
    {
        "block_name": "Bearing",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/bearing.html"
    },
    {
        "block_name": "Belt Pulley",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/beltpulley.html"
    },
    {
        "block_name": "Chain Drive",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/chaindrive.html"
    },
    {
        "block_name": "Cable",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/cable.html"
    },
    {
        "block_name": "Flexible Shaft",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/flexibleshaft.html"
    },
    {
        "block_name": "Rope Drum",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/ropedrum.html"
    },
    {
        "block_name": "Shock Absorber",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/shockabsorber.html"
    },
    {
        "block_name": "Rod",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"3\"><strong class=\"guilabel\">Rod</strong></th></tr>",
                "<tr><td colspan=\"3\"><strong class=\"guilabel\">Parameterization</strong></td></tr>",
                "<tr><td><code class=\"guidropdown\">By stiffness and inertia</code></td><td colspan=\"2\"><code class=\"guidropdown\">By material and\n\t\t\t\t\t\t\t\t\t\tgeometry</code></td></tr>",
                "<tr><td><strong class=\"guilabel\">Stiffness</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Geometry</strong></td></tr>",
                "<tr><td rowspan=\"6\"><strong class=\"guilabel\">Mass</strong></td><td><code class=\"guidropdown\">Solid</code></td><td><code class=\"guidropdown\">Annular</code></td></tr>",
                "<tr><td colspan=\"2\"><strong class=\"guilabel\">Length</strong></td></tr>",
                "<tr><td colspan=\"2\"><strong class=\"guilabel\">Outer diameter</strong></td></tr>",
                "<tr><td>-</td><td><strong class=\"guilabel\">Inner diameter</strong></td></tr>",
                "<tr><td colspan=\"2\"><strong class=\"guilabel\">Density</strong></td></tr>",
                "<tr><td colspan=\"2\"><strong class=\"guilabel\">Young's\n\t\t\t\t\t\t\t\t\tmodulus</strong></td></tr>",
                "<tr><td colspan=\"3\"><strong class=\"guilabel\">Damping\n\t\t\t\t\t\t\t\t\tratio</strong></td></tr>",
                "<tr><td colspan=\"3\"><strong class=\"guilabel\">Number of flexible\n\t\t\t\t\t\t\t\t\t\telements</strong></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sdl/ref/rod.html"
    },
    {
        "block_name": "Torsional Spring-Damper",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/torsionalspringdamper.html"
    },
    {
        "block_name": "Torque Converter",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [
            [
                "<tr><td>\n<div class=\"mediaobject\" id=\"d126e85833\"><div class=\"code_responsive\"><p class=\"programlistingindent\"><span><span class=\"MathEquation\" style=\"font-size: 14px;\"><span aria-label=\"K equals omega slash StartRoot SquareRootOf tau indexOf I baseline EndRoot\" class=\"MathRoot HBox\" role=\"math\" style=\"display: inline-block;\"><span class=\"MathRow HBox\" style=\"display: inline-block; font-size: 14px;\"><span class=\"MathText MathTextBox mwEqnIdentifier\" style=\"margin-right: 0.1em;\">K</span><span class=\"MathText MathTextBox mwEqnSymbol\" style=\"margin-left: 0.277778em;\">=</span><span class=\"MathText MathTextBox mwEqnSymbol\" style=\"margin-left: 0.277778em; font-style: italic;\">\u03c9</span><span class=\"MathText MathTextBox mwEqnSymbol\">/</span><span class=\"MathRadical HBox\" style=\"display: inline-block; font-size: 14px; margin-left: 0.166667em;\"><span class=\"VBox\" style=\"display: inline-block; text-align: center; vertical-align: 0px;\"><span class=\"StretchyBox\" style=\"display: inline-block; text-align: right; position: relative;\"><span class=\"MathTextBox mwEqnSymbol\" style=\"display: inline-block; margin-top: 3px; margin-bottom: 1px;\">\u221a</span></span></span><span class=\"VBox\" style=\"display: inline-block; text-align: center; vertical-align: 0px;\"><span class=\"RuleBox rulebox\" style=\"display: block; border-bottom-style: solid; border-bottom-width: 1px; width: 100%; height: 0px; z-index: 1; margin-top: 0px;\"></span><span class=\"WhiteSpaceBox\" style=\"display: block; vertical-align: 2px;\"></span><span class=\"MathRow HBox\" style=\"display: block; font-size: 14px; margin-top: 2px;\"><span class=\"MathScript HBox\" style=\"display: inline-block; font-size: 14px;\"><span class=\"MathRow HBox\" style=\"display: inline-block; font-size: 14px;\"><span class=\"MathText MathTextBox mwEqnSymbol\" style=\"font-style: italic;\">\u03c4</span></span><span class=\"VBox\" style=\"display: inline-block; text-align: left; vertical-align: -2px;\"><span class=\"MathRow HBox\" style=\"display: block; font-size: 10px; margin-top: 0px;\"><span class=\"MathText MathTextBox mwEqnIdentifier\" style=\"margin-left: 0.05em; margin-right: 0.1em;\">I</span></span></span></span></span></span></span></span></span></span></span></p></div></div>\n</td><td>Set <strong class=\"guilabel\">Capacity factor parameterization</strong> parameter to\n                          <code class=\"guidropdown\">Ratio of speed to square root of impeller\n                          torque</code>.</td></tr>",
                "<tr><td>\n<div class=\"mediaobject\" id=\"d126e85847\"><div class=\"code_responsive\"><p class=\"programlistingindent\"><span><span class=\"MathEquation\" style=\"font-size: 14px;\"><span aria-label=\"K toThePowerOf times baseline equals tau indexOf I baseline slash omega Squared baseline\" class=\"MathRoot HBox\" role=\"math\" style=\"display: inline-block;\"><span class=\"MathRow HBox\" style=\"display: inline-block; font-size: 14px;\"><span class=\"MathScript HBox\" style=\"display: inline-block; font-size: 14px;\"><span class=\"MathRow HBox\" style=\"display: inline-block; font-size: 14px;\"><span class=\"MathText MathTextBox mwEqnIdentifier\" style=\"margin-right: 0.1em;\">K</span></span><span class=\"VBox\" style=\"display: inline-block; text-align: left; vertical-align: 6px;\"><span class=\"MathRow HBox\" style=\"display: block; font-size: 10px; margin-top: 0px;\"><span class=\"MathText MathTextBox mwEqnSymbol\">\u2217</span></span></span></span><span class=\"MathText MathTextBox mwEqnSymbol\" style=\"margin-left: 0.277778em;\">=</span><span class=\"MathScript HBox\" style=\"display: inline-block; font-size: 14px; margin-left: 0.277778em;\"><span class=\"MathRow HBox\" style=\"display: inline-block; font-size: 14px;\"><span class=\"MathText MathTextBox mwEqnSymbol\" style=\"font-style: italic;\">\u03c4</span></span><span class=\"VBox\" style=\"display: inline-block; text-align: left; vertical-align: -2px;\"><span class=\"MathRow HBox\" style=\"display: block; font-size: 10px; margin-top: 0px;\"><span class=\"MathText MathTextBox mwEqnIdentifier\" style=\"margin-left: 0.05em; margin-right: 0.1em;\">I</span></span></span></span><span class=\"MathText MathTextBox mwEqnSymbol\">/</span><span class=\"MathScript HBox\" style=\"display: inline-block; font-size: 14px;\"><span class=\"MathRow HBox\" style=\"display: inline-block; font-size: 14px;\"><span class=\"MathText MathTextBox mwEqnSymbol\" style=\"font-style: italic;\">\u03c9</span></span><span class=\"VBox\" style=\"display: inline-block; text-align: left; vertical-align: 6px;\"><span class=\"MathRow HBox\" style=\"display: block; font-size: 10px; margin-top: 0px;\"><span class=\"MathText MathTextBox mwEqnNumber\">2</span></span></span></span></span></span></span></span></p></div></div>\n</td><td>Set <strong class=\"guilabel\">Capacity factor parameterization</strong> parameter to\n                          <code class=\"guidropdown\">Ratio of impeller torque to the square of the\n                          speed</code>. The default value is 1e-3 * [6.616, 6.048, 5.787,\n                        5.384, 4.681, 3.779, 2.671, 2.047, 1.111, .4]\n                          <code class=\"literal\">N*m/(rad/s)^2</code>.</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sdl/ref/torqueconverter.html"
    },
    {
        "block_name": "Variable Ratio Transmission",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/variableratiotransmission.html"
    },
    {
        "block_name": "Universal Joint",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/universaljoint.html"
    },
    {
        "block_name": "Air Spring",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/airspring.html"
    },
    {
        "block_name": "Nonlinear Rotational Spring",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/nonlinearrotationalspring.html"
    },
    {
        "block_name": "Nonlinear Translational Damper",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives/Springs & Dampers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/nonlineartranslationaldamper.html"
    },
    {
        "block_name": "Nonlinear Translational Spring",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives/Springs & Dampers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/nonlineartranslationalspring.html"
    },
    {
        "block_name": "Nonlinear Rotational Damper",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives/Springs & Dampers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/nonlinearrotationaldamper.html"
    },
    {
        "block_name": "Variable Rotational Damper",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives/Springs & Dampers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/variablerotationaldamper.html"
    },
    {
        "block_name": "Translational Damper",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives/Springs & Dampers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/translationaldamper.html"
    },
    {
        "block_name": "Variable Rotational Spring",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/variablerotationalspring.html"
    },
    {
        "block_name": "Variable Translational Damper",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/variabletranslationaldamper.html"
    },
    {
        "block_name": "Variable Translational Spring",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives/Springs & Dampers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/variabletranslationalspring.html"
    },
    {
        "block_name": "Aerodynamic Propeller",
        "libraries": [
            "Simscape/Driveline/Engines & Motors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/aerodynamicpropeller.html"
    },
    {
        "block_name": "Marine Propeller",
        "libraries": [
            "Simscape/Driveline/Engines & Motors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/marinepropeller.html"
    },
    {
        "block_name": "Wind Turbine",
        "libraries": [
            "Simscape/Driveline/Engines & Motors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/windturbine.html"
    },
    {
        "block_name": "Motor & Drive",
        "libraries": [
            "Simscape/Driveline/Engines & Motors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/motordrive.html"
    },
    {
        "block_name": "Generic Engine",
        "libraries": [
            "Simscape/Driveline/Engines & Motors"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Fuel\n\t\t\t\t\t\t\t\t\t\tConsumption</strong></th></tr>",
                "<tr><td colspan=\"5\"><strong class=\"guilabel\">Fuel consumption\n\t\t\t\t\t\t\t\t\t\tmodel</strong></td></tr>",
                "<tr><td rowspan=\"7\"><code class=\"guidropdown\">No fuel\n\t\t\t\t\t\t\t\t\tconsumption</code></td><td><code class=\"guidropdown\">Constant per revolution</code></td><td rowspan=\"3\"><code class=\"guidropdown\">Fuel consumption by speed and\n\t\t\t\t\t\t\t\t\t\ttorque</code></td><td rowspan=\"3\"><code class=\"guidropdown\">Brake specific fuel consumption by\n\t\t\t\t\t\t\t\t\t\tspeed and torque</code></td><td><code class=\"guidropdown\">Brake specific fuel consumption by speed and\n\t\t\t\t\t\t\t\t\t\tbrake mean effective pressure</code></td></tr>",
                "<tr><td rowspan=\"6\"><strong class=\"guilabel\">Fuel consumption per\n\t\t\t\t\t\t\t\t\t\trevolution</strong></td><td><strong class=\"guilabel\">Displaced volume</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Revolutions per cycle</strong></td></tr>",
                "<tr><td colspan=\"3\"><strong class=\"guilabel\">Speed\n\t\t\t\t\t\t\t\t\t\tvector</strong></td></tr>",
                "<tr><td colspan=\"2\"><strong class=\"guilabel\">Torque\n\t\t\t\t\t\t\t\t\t\tvector</strong></td><td><strong class=\"guilabel\">Brake mean effective pressure\n\t\t\t\t\t\t\t\t\tvector</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Fuel consumption table</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Brake specific fuel\n\t\t\t\t\t\t\t\t\t\tconsumption table</strong></td></tr>",
                "<tr><td colspan=\"3\"><strong class=\"guilabel\">Interpolation\n\t\t\t\t\t\t\t\t\t\tmethod</strong></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sdl/ref/genericengine.html"
    },
    {
        "block_name": "Rotational Damper",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives/Springs & Dampers"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/rotationaldamper.html"
    },
    {
        "block_name": "Piston Engine",
        "libraries": [
            "Simscape/Driveline/Engines & Motors"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Fuel\n\t\t\t\t\t\t\t\t\t\tConsumption</strong></th></tr>",
                "<tr><td colspan=\"5\">Fuel consumption model \u2014 Choose\n\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">No fuel consumption</code>,\n\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Constant per revolution</code>,\n\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Fuel consumption by speed and\n\t\t\t\t\t\t\t\t\t\ttorque</code>, <code class=\"guidropdown\">Brake specific fuel\n\t\t\t\t\t\t\t\t\t\tconsumption by speed and torque</code>, or\n\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Brake specific fuel consumption by speed and\n\t\t\t\t\t\t\t\t\t\tbrake mean effective pressure</code></td></tr>",
                "<tr><td rowspan=\"6\"><strong class=\"emphasis bold\">No fuel\n\t\t\t\t\t\t\t\t\t\tconsumption</strong></td><td><strong class=\"emphasis bold\">Constant per\n\t\t\t\t\t\t\t\t\trevolution</strong></td><td rowspan=\"2\"><strong class=\"emphasis bold\">Fuel consumption by speed\n\t\t\t\t\t\t\t\t\t\tand torque</strong></td><td rowspan=\"2\"><strong class=\"emphasis bold\">Brake specific fuel\n\t\t\t\t\t\t\t\t\t\tconsumption by speed and torque</strong></td><td rowspan=\"2\"><strong class=\"emphasis bold\">Brake specific fuel\n\t\t\t\t\t\t\t\t\t\tconsumption by speed and brake mean effective\n\t\t\t\t\t\t\t\t\t\tpressure</strong></td></tr>",
                "<tr><td rowspan=\"5\"><p>Fuel consumption per\n\t\t\t\t\t\t\t\t\trevolution</p></td></tr>",
                "<tr><td colspan=\"3\"><p>Speed\n\t\t\t\t\t\t\t\t\tvector</p></td></tr>",
                "<tr><td colspan=\"2\"><p>Torque\n\t\t\t\t\t\t\t\t\tvector</p></td><td><p>Brake mean effective pressure vector</p></td></tr>",
                "<tr><td><p>Fuel consumption table</p></td><td colspan=\"2\"><p>Brake specific fuel\n\t\t\t\t\t\t\t\t\t\tconsumption table</p></td></tr>",
                "<tr><td colspan=\"3\"><p>Interpolation method \u2014\n\t\t\t\t\t\t\t\t\t\tChoose <code class=\"guidropdown\">Linear</code> or\n\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Smooth</code></p></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sdl/ref/pistonengine.html"
    },
    {
        "block_name": "Air Intake",
        "libraries": [
            "Simscape/Driveline/Engines & Motors/Engine Subcomponents"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/airintake.html"
    },
    {
        "block_name": "Spark Ignition Engine",
        "libraries": [
            "Simscape/Driveline/Engines & Motors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/sparkignitionengine.html"
    },
    {
        "block_name": "Piston",
        "libraries": [
            "Simscape/Driveline/Engines & Motors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/piston.html"
    },
    {
        "block_name": "Exhaust Manifold Thermal",
        "libraries": [
            "Simscape/Driveline/Engines & Motors/Engine Subcomponents"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/exhaustmanifoldthermal.html"
    },
    {
        "block_name": "Crankshaft",
        "libraries": [
            "Simscape/Driveline/Engines & Motors/Engine Subcomponents"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/crankshaft.html"
    },
    {
        "block_name": "SI Combustion Cylinder",
        "libraries": [
            "Simscape/Driveline/Engines & Motors/Engine Subcomponents"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/sicombustioncylinder.html"
    },
    {
        "block_name": "Cycloidal Drive",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/cycloidaldrive.html"
    },
    {
        "block_name": "Ignition Trigger",
        "libraries": [
            "Simscape/Driveline/Engines & Motors/Engine Subcomponents"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/ignitiontrigger.html"
    },
    {
        "block_name": "Compound Planetary Gear",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/compoundplanetarygear.html"
    },
    {
        "block_name": "Differential",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/differential.html"
    },
    {
        "block_name": "Harmonic Drive",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/harmonicdrive.html"
    },
    {
        "block_name": "Ravigneaux Gear",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/ravigneauxgear.html"
    },
    {
        "block_name": "Double-Pinion Planetary Gear",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/doublepinionplanetarygear.html"
    },
    {
        "block_name": "Planetary Gear",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/planetarygear.html"
    },
    {
        "block_name": "Limited-Slip Differential",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/limitedslipdifferential.html"
    },
    {
        "block_name": "Planet-Planet",
        "libraries": [
            "Simscape/Driveline/Gears/Planetary Subcomponents"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/planetplanet.html"
    },
    {
        "block_name": "Simple Gear with Variable Efficiency",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/simplegearwithvariableefficiency.html"
    },
    {
        "block_name": "Worm Gear",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/wormgear.html"
    },
    {
        "block_name": "Simple Gear",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"6\">Default Model \u2014 For nonthermal\n\t\t\t\t\t\t\t\t\tmodels, thermal port <strong class=\"guilabel\">H</strong> is not\n\t\t\t\t\t\t\t\t\tvisible.</th><th colspan=\"2\">Thermal Model \u2014 For thermal models,\n\t\t\t\t\t\t\t\t\tthermal port <strong class=\"guilabel\">H</strong> is visible.</th></tr>",
                "<tr><th colspan=\"6\">Meshing Losses</th><th colspan=\"2\">Meshing Losses</th></tr>",
                "<tr><th colspan=\"6\"><p>Friction model \u2014 Choose\n\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">No meshing losses - Suitable for HIL\n\t\t\t\t\t\t\t\t\t\t\tsimulation</code>, <code class=\"guidropdown\">Constant\n\t\t\t\t\t\t\t\t\t\t\tefficiency</code>, or <code class=\"guidropdown\">Load-dependent\n\t\t\t\t\t\t\t\t\t\t\tefficiency</code></p></th><th colspan=\"2\"><p>Friction model \u2014 Choose\n\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Temperature-dependent\n\t\t\t\t\t\t\t\t\t\t\tefficiency</code> or <code class=\"guidropdown\">Temperature and\n\t\t\t\t\t\t\t\t\t\t\tload-dependent efficiency</code></p></th></tr>",
                "<tr><td rowspan=\"5\"><strong class=\"emphasis bold\">No meshing losses -\n\t\t\t\t\t\t\t\t\t\tSuitable for HIL simulation</strong></td><td colspan=\"3\"><strong class=\"emphasis bold\">Constant\n\t\t\t\t\t\t\t\t\t\tefficiency</strong></td><td colspan=\"2\"><strong class=\"emphasis bold\">Load-dependent efficiency</strong></td><td><strong class=\"emphasis bold\">Temperature-dependent\n\t\t\t\t\t\t\t\t\t\tefficiency</strong></td><td><strong class=\"emphasis bold\">Temperature and load-dependent\n\t\t\t\t\t\t\t\t\t\tefficiency</strong></td></tr>",
                "<tr><td colspan=\"3\"><p>Efficiency</p></td><td colspan=\"2\"><p>Input shaft torque at no\n\t\t\t\t\t\t\t\t\t\tload</p></td><td><p>Temperature</p></td><td><p>Temperature</p></td></tr>",
                "<tr><td colspan=\"3\"><p>Follower power\n\t\t\t\t\t\t\t\t\t\tthreshold</p></td><td colspan=\"2\"><p>Nominal output\n\t\t\t\t\t\t\t\t\t\ttorque</p></td><td><p>Efficiency</p></td><td><p>Load at base gear</p></td></tr>",
                "<tr><td colspan=\"3\">\u00a0</td><td colspan=\"2\"><p>Efficiency at nominal\n\t\t\t\t\t\t\t\t\t\toutput torque</p></td><td rowspan=\"2\"><p>Follower power threshold</p></td><td><p>Efficiency matrix</p></td></tr>",
                "<tr><td colspan=\"3\">\u00a0</td><td colspan=\"2\"><p>Follower angular velocity\n\t\t\t\t\t\t\t\t\t\tthreshold</p></td><td><p>Follower angular velocity threshold</p></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sdl/ref/simplegear.html"
    },
    {
        "block_name": "Ring-Planet",
        "libraries": [
            "Simscape/Driveline/Gears/Planetary Subcomponents"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/ringplanet.html"
    },
    {
        "block_name": "Sun-Planet",
        "libraries": [
            "Simscape/Driveline/Gears/Planetary Subcomponents"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/sunplanet.html"
    },
    {
        "block_name": "Sun-Planet Worm Gear",
        "libraries": [
            "Simscape/Driveline/Gears/Planetary Subcomponents"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"6\">Meshing Losses Setting\n                                Parameters and Values</th></tr>",
                "<tr><td colspan=\"6\"><strong class=\"guilabel\">Friction\n                                    Model</strong></td></tr>",
                "<tr><td colspan=\"2\" rowspan=\"7\"><code class=\"guidropdown\">No\n                                    meshing losses - Suitable for HIL\n                                simulation</code></td><td colspan=\"2\"><code class=\"guidropdown\">Constant\n                                    efficiency</code></td><td colspan=\"2\"><code class=\"guidropdown\">Temperature-dependent\n                                    efficiency</code></td></tr>",
                "<tr><td colspan=\"2\"><strong class=\"guilabel\">Friction\n                                    parameterization</strong></td><td colspan=\"2\" rowspan=\"2\"><strong class=\"guilabel\">Temperature</strong></td></tr>",
                "<tr><td><code class=\"guidropdown\">Friction coefficient and geometrical\n                                    parameters</code></td><td><code class=\"guidropdown\">Efficiencies</code></td></tr>",
                "<tr><td><strong class=\"guilabel\">Normal pressure angle</strong></td><td><strong class=\"guilabel\">Worm-gear efficiency</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Worm-gear\n                                    efficiency</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Lead angle</strong></td><td rowspan=\"2\"><strong class=\"guilabel\">Gear-worm\n                                    efficiency</strong></td><td colspan=\"2\" rowspan=\"2\"><strong class=\"guilabel\">Gear-worm efficiency</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Friction coefficient</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Power threshold</strong></td><td><strong class=\"guilabel\">Power threshold</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Power\n                                    threshold</strong></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sdl/ref/sunplanetwormgear.html"
    },
    {
        "block_name": "Leadscrew",
        "libraries": [
            "Simscape/Driveline/Gears/Rotational- Translational"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/leadscrew.html"
    },
    {
        "block_name": "Rack & Pinion",
        "libraries": [
            "Simscape/Driveline/Gears/Rotational- Translational"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/rackpinion.html"
    },
    {
        "block_name": "Sun-Planet Bevel",
        "libraries": [
            "Simscape/Driveline/Gears/Planetary Subcomponents"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/sunplanetbevel.html"
    },
    {
        "block_name": "Variable Inertia",
        "libraries": [
            "Simscape/Driveline/Inertias & Loads"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/variableinertia.html"
    },
    {
        "block_name": "Unbalanced Load",
        "libraries": [
            "Simscape/Driveline/Inertias & Loads"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/unbalancedload.html"
    },
    {
        "block_name": "Variable Mass",
        "libraries": [],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/variablemass.html"
    },
    {
        "block_name": "Force Noise Source",
        "libraries": [
            "Simscape/Driveline/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/forcenoisesource.html"
    },
    {
        "block_name": "Translational Power Sensor",
        "libraries": [
            "Simscape/Driveline/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/translationalpowersensor.html"
    },
    {
        "block_name": "Rotational Power Sensor",
        "libraries": [
            "Simscape/Driveline/Sensors"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/rotationalpowersensor.html"
    },
    {
        "block_name": "Torque Noise Source",
        "libraries": [
            "Simscape/Driveline/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/torquenoisesource.html"
    },
    {
        "block_name": "Rotational Velocity Noise Source",
        "libraries": [
            "Simscape/Driveline/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/rotationalvelocitynoisesource.html"
    },
    {
        "block_name": "Sinusoidal Force Source",
        "libraries": [
            "Simscape/Driveline/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/sinusoidalforcesource.html"
    },
    {
        "block_name": "Sinusoidal Rotational Velocity Source",
        "libraries": [
            "Simscape/Driveline/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/sinusoidalrotationalvelocitysource.html"
    },
    {
        "block_name": "Translational Velocity Noise Source",
        "libraries": [
            "Simscape/Driveline/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/translationalvelocitynoisesource.html"
    },
    {
        "block_name": "Sinusoidal Torque Source",
        "libraries": [
            "Simscape/Driveline/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/sinusoidaltorquesource.html"
    },
    {
        "block_name": "Sinusoidal Translational Velocity Source",
        "libraries": [
            "Simscape/Driveline/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/sinusoidaltranslationalvelocitysource.html"
    },
    {
        "block_name": "Battery (System-Level)",
        "libraries": [
            "Simscape/Driveline/Sources"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/batterysystemlevel.html"
    },
    {
        "block_name": "Longitudinal Vehicle",
        "libraries": [
            "Simscape/Driveline/Tires & Vehicles"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/longitudinalvehicle.html"
    },
    {
        "block_name": "Tire (Friction Parameterized)",
        "libraries": [
            "Simscape/Driveline/Tires & Vehicles"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/tirefrictionparameterized.html"
    },
    {
        "block_name": "Vehicle Body",
        "libraries": [
            "Simscape/Driveline/Tires & Vehicles"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"3\"><strong class=\"guilabel\">Pitch</strong></th></tr>",
                "<tr><th colspan=\"3\">Pitch dynamics \u2014 Choose\n                                        <code class=\"guidropdown\">Off</code> or\n                                        <code class=\"guidropdown\">On</code></th></tr>",
                "<tr><td><strong class=\"emphasis bold\">Off</strong></td><td colspan=\"2\"><strong class=\"emphasis bold\">On</strong></td></tr>",
                "<tr><td rowspan=\"25\">\u00a0</td><td colspan=\"2\">Pitch moment of inertia</td></tr>",
                "<tr><td colspan=\"2\">Suspension model \u2014 Choose\n                                        <code class=\"guidropdown\">Linear</code> or <code class=\"guidropdown\">By table\n                                        lookup</code></td></tr>",
                "<tr><td><strong class=\"emphasis bold\">Linear</strong></td><td><strong class=\"emphasis bold\">By table lookup</strong></td></tr>",
                "<tr><td>Front suspension stiffness</td><td>Front suspension stiffness force vector</td></tr>",
                "<tr><td>Front suspension damping</td><td>Front suspension deformation vector</td></tr>",
                "<tr><td>Rear suspension stiffness</td><td>Front suspension damping force vector</td></tr>",
                "<tr><td rowspan=\"7\">Rear suspension damping</td><td>Front suspension velocity vector</td></tr>",
                "<tr><td>Rear suspension stiffness force vector</td></tr>",
                "<tr><td>Rear suspension deformation vector</td></tr>",
                "<tr><td>Rear suspension damping force vector</td></tr>",
                "<tr><td>Rear suspension velocity vector</td></tr>",
                "<tr><td>Interpolation method</td></tr>",
                "<tr><td>Extrapolation method</td></tr>",
                "<tr><td colspan=\"2\">Hard stop \u2014 Choose\n                                        <code class=\"guidropdown\">Off</code> or\n                                        <code class=\"guidropdown\">On</code></td></tr>",
                "<tr><td><strong class=\"emphasis bold\">Off</strong></td><td><strong class=\"emphasis bold\">On</strong></td></tr>",
                "<tr><td rowspan=\"8\">\u00a0</td><td>Front upper bound</td></tr>",
                "<tr><td>Front lower bound</td></tr>",
                "<tr><td>Front contact stiffness</td></tr>",
                "<tr><td>Front contact damping</td></tr>",
                "<tr><td>Rear upper bound</td></tr>",
                "<tr><td>Rear lower bound</td></tr>",
                "<tr><td>Rear contact stiffness</td></tr>",
                "<tr><td>Rear contact damping</td></tr>",
                "<tr><td colspan=\"2\">Initial pitch</td></tr>",
                "<tr><td colspan=\"2\">Initial pitch rate</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sdl/ref/vehiclebody.html"
    },
    {
        "block_name": "Tire (Simple)",
        "libraries": [
            "Simscape/Driveline/Tires & Vehicles"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/tiresimple.html"
    },
    {
        "block_name": "Road Profile",
        "libraries": [
            "Simscape/Driveline/Tires & Vehicles"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/roadprofile.html"
    },
    {
        "block_name": "Tire (Magic Formula)",
        "libraries": [
            "Simscape/Driveline/Tires & Vehicles"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/tiremagicformula.html"
    },
    {
        "block_name": "Rolling Resistance",
        "libraries": [
            "Simscape/Driveline/Tires & Vehicles/Tire Subcomponents"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/rollingresistance.html"
    },
    {
        "block_name": "Tire-Road Interaction (Magic Formula)",
        "libraries": [
            "Simscape/Driveline/Tires & Vehicles/Tire Subcomponents"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/tireroadinteractionmagicformula.html"
    },
    {
        "block_name": "4-Speed CR-CR",
        "libraries": [
            "Simscape/Driveline/Transmissions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/4speedcrcr.html"
    },
    {
        "block_name": "4-Speed Ravigneaux",
        "libraries": [
            "Simscape/Driveline/Transmissions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/4speedravigneaux.html"
    },
    {
        "block_name": "6-Speed Lepelletier",
        "libraries": [
            "Simscape/Driveline/Transmissions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/6speedlepelletier.html"
    },
    {
        "block_name": "8-Speed",
        "libraries": [
            "Simscape/Driveline/Transmissions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/8speed.html"
    },
    {
        "block_name": "9-Speed",
        "libraries": [
            "Simscape/Driveline/Transmissions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/9speed.html"
    },
    {
        "block_name": "10-Speed",
        "libraries": [
            "Simscape/Driveline/Transmissions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/10speed.html"
    },
    {
        "block_name": "Dog Clutch",
        "libraries": [
            "Simscape/Driveline/Clutches"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/dogclutch.html"
    },
    {
        "block_name": "7-Speed Lepelletier",
        "libraries": [
            "Simscape/Driveline/Transmissions"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/7speedlepelletier.html"
    },
    {
        "block_name": "Double-Sided Synchronizer",
        "libraries": [
            "Simscape/Driveline/Clutches"
        ],
        "parameters": [
            [
                "<tr><th>Dog Clutch State</th><th>Parameter Restriction</th></tr>",
                "<tr><td>Dog clutch A Initially engaged</td><td>Negative of the parameter value must be greater than\n                                            the sum of parameters <strong class=\"guilabel\">Ring-hub clearance when\n                                                dog clutch disengaged</strong> and <strong class=\"guilabel\">Tooth\n                                                overlap to engage</strong></td></tr>",
                "<tr><td>Dog clutch A Initially disengaged</td><td>Negative of the parameter value must be smaller than\n                                            the sum of parameters <strong class=\"guilabel\">Ring-hub clearance when\n                                                dog clutch disengaged</strong> and <strong class=\"guilabel\">Tooth\n                                                overlap to engage</strong></td></tr>",
                "<tr><td>Dog clutch B Initially engaged</td><td>Parameter value must be greater than the sum of\n                                            parameters <strong class=\"guilabel\">Ring-hub clearance when dog clutch\n                                                disengaged</strong> and <strong class=\"guilabel\">Tooth overlap to\n                                                engage</strong></td></tr>",
                "<tr><td>Dog clutch B Initially disengaged</td><td>Parameter value must be smaller than the sum of\n                                            parameters <strong class=\"guilabel\">Ring-hub clearance when dog clutch\n                                                disengaged</strong> and <strong class=\"guilabel\">Tooth overlap to\n                                                engage</strong></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sdl/ref/doublesidedsynchronizer.html"
    },
    {
        "block_name": "Synchronizer",
        "libraries": [
            "Simscape/Driveline/Clutches"
        ],
        "parameters": [
            [
                "<tr><th>Linkage Travel Direction </th><th>Dog Clutch State</th><th>Parameter Restriction</th></tr>",
                "<tr><td rowspan=\"2\"><code class=\"guidropdown\">Positive shift linkage\n                                                displacement engages clutch</code></td><td>Initially engaged</td><td>Parameter must be greater than the sum of parameters\n                                                <strong class=\"guilabel\">Ring-hub clearance when dog clutch\n                                                disengaged</strong> and <strong class=\"guilabel\">Tooth overlap to\n                                                engage</strong></td></tr>",
                "<tr><td>Initially disengaged</td><td>Parameter must be smaller than the sum of parameters\n                                                <strong class=\"guilabel\">Ring-hub clearance when dog clutch\n                                                disengaged</strong> and <strong class=\"guilabel\">Tooth overlap to\n                                                engage</strong></td></tr>",
                "<tr><td rowspan=\"2\"><code class=\"guidropdown\">Negative shift linkage\n                                                displacement engages clutch</code></td><td>Initially engaged</td><td>Negative of the parameter must be greater than the\n                                            sum of parameters <strong class=\"guilabel\">Ring-hub clearance when dog\n                                                clutch disengaged</strong> and <strong class=\"guilabel\">Tooth\n                                                overlap to engage</strong></td></tr>",
                "<tr><td>Initially disengaged</td><td>Negative of the parameter must be smaller than the\n                                            sum of parameters <strong class=\"guilabel\">Ring-hub clearance when dog\n                                                clutch disengaged</strong> and <strong class=\"guilabel\">Tooth\n                                                overlap to engage</strong></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sdl/ref/synchronizer.html"
    },
    {
        "block_name": "Transmission",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/transmission.html"
    },
    {
        "block_name": "Shock Absorber",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/shockabsorber.html"
    },
    {
        "block_name": "Torque Converter",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [
            [
                "<tr><td>\n<div class=\"mediaobject\" id=\"d126e85833\"><div class=\"code_responsive\"><p class=\"programlistingindent\"><span><span class=\"MathEquation\" style=\"font-size: 14px;\"><span aria-label=\"K equals omega slash StartRoot SquareRootOf tau indexOf I baseline EndRoot\" class=\"MathRoot HBox\" role=\"math\" style=\"display: inline-block;\"><span class=\"MathRow HBox\" style=\"display: inline-block; font-size: 14px;\"><span class=\"MathText MathTextBox mwEqnIdentifier\" style=\"margin-right: 0.1em;\">K</span><span class=\"MathText MathTextBox mwEqnSymbol\" style=\"margin-left: 0.277778em;\">=</span><span class=\"MathText MathTextBox mwEqnSymbol\" style=\"margin-left: 0.277778em; font-style: italic;\">\u03c9</span><span class=\"MathText MathTextBox mwEqnSymbol\">/</span><span class=\"MathRadical HBox\" style=\"display: inline-block; font-size: 14px; margin-left: 0.166667em;\"><span class=\"VBox\" style=\"display: inline-block; text-align: center; vertical-align: 0px;\"><span class=\"StretchyBox\" style=\"display: inline-block; text-align: right; position: relative;\"><span class=\"MathTextBox mwEqnSymbol\" style=\"display: inline-block; margin-top: 3px; margin-bottom: 1px;\">\u221a</span></span></span><span class=\"VBox\" style=\"display: inline-block; text-align: center; vertical-align: 0px;\"><span class=\"RuleBox rulebox\" style=\"display: block; border-bottom-style: solid; border-bottom-width: 1px; width: 100%; height: 0px; z-index: 1; margin-top: 0px;\"></span><span class=\"WhiteSpaceBox\" style=\"display: block; vertical-align: 2px;\"></span><span class=\"MathRow HBox\" style=\"display: block; font-size: 14px; margin-top: 2px;\"><span class=\"MathScript HBox\" style=\"display: inline-block; font-size: 14px;\"><span class=\"MathRow HBox\" style=\"display: inline-block; font-size: 14px;\"><span class=\"MathText MathTextBox mwEqnSymbol\" style=\"font-style: italic;\">\u03c4</span></span><span class=\"VBox\" style=\"display: inline-block; text-align: left; vertical-align: -2px;\"><span class=\"MathRow HBox\" style=\"display: block; font-size: 10px; margin-top: 0px;\"><span class=\"MathText MathTextBox mwEqnIdentifier\" style=\"margin-left: 0.05em; margin-right: 0.1em;\">I</span></span></span></span></span></span></span></span></span></span></span></p></div></div>\n</td><td>Set <strong class=\"guilabel\">Capacity factor parameterization</strong> parameter to\n                          <code class=\"guidropdown\">Ratio of speed to square root of impeller\n                          torque</code>.</td></tr>",
                "<tr><td>\n<div class=\"mediaobject\" id=\"d126e85847\"><div class=\"code_responsive\"><p class=\"programlistingindent\"><span><span class=\"MathEquation\" style=\"font-size: 14px;\"><span aria-label=\"K toThePowerOf times baseline equals tau indexOf I baseline slash omega Squared baseline\" class=\"MathRoot HBox\" role=\"math\" style=\"display: inline-block;\"><span class=\"MathRow HBox\" style=\"display: inline-block; font-size: 14px;\"><span class=\"MathScript HBox\" style=\"display: inline-block; font-size: 14px;\"><span class=\"MathRow HBox\" style=\"display: inline-block; font-size: 14px;\"><span class=\"MathText MathTextBox mwEqnIdentifier\" style=\"margin-right: 0.1em;\">K</span></span><span class=\"VBox\" style=\"display: inline-block; text-align: left; vertical-align: 6px;\"><span class=\"MathRow HBox\" style=\"display: block; font-size: 10px; margin-top: 0px;\"><span class=\"MathText MathTextBox mwEqnSymbol\">\u2217</span></span></span></span><span class=\"MathText MathTextBox mwEqnSymbol\" style=\"margin-left: 0.277778em;\">=</span><span class=\"MathScript HBox\" style=\"display: inline-block; font-size: 14px; margin-left: 0.277778em;\"><span class=\"MathRow HBox\" style=\"display: inline-block; font-size: 14px;\"><span class=\"MathText MathTextBox mwEqnSymbol\" style=\"font-style: italic;\">\u03c4</span></span><span class=\"VBox\" style=\"display: inline-block; text-align: left; vertical-align: -2px;\"><span class=\"MathRow HBox\" style=\"display: block; font-size: 10px; margin-top: 0px;\"><span class=\"MathText MathTextBox mwEqnIdentifier\" style=\"margin-left: 0.05em; margin-right: 0.1em;\">I</span></span></span></span><span class=\"MathText MathTextBox mwEqnSymbol\">/</span><span class=\"MathScript HBox\" style=\"display: inline-block; font-size: 14px;\"><span class=\"MathRow HBox\" style=\"display: inline-block; font-size: 14px;\"><span class=\"MathText MathTextBox mwEqnSymbol\" style=\"font-style: italic;\">\u03c9</span></span><span class=\"VBox\" style=\"display: inline-block; text-align: left; vertical-align: 6px;\"><span class=\"MathRow HBox\" style=\"display: block; font-size: 10px; margin-top: 0px;\"><span class=\"MathText MathTextBox mwEqnNumber\">2</span></span></span></span></span></span></span></span></p></div></div>\n</td><td>Set <strong class=\"guilabel\">Capacity factor parameterization</strong> parameter to\n                          <code class=\"guidropdown\">Ratio of impeller torque to the square of the\n                          speed</code>. The default value is 1e-3 * [6.616, 6.048, 5.787,\n                        5.384, 4.681, 3.779, 2.671, 2.047, 1.111, .4]\n                          <code class=\"literal\">N*m/(rad/s)^2</code>.</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sdl/ref/torqueconverter.html"
    },
    {
        "block_name": "Torsional Spring-Damper",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/torsionalspringdamper.html"
    },
    {
        "block_name": "Variable Ratio Transmission",
        "libraries": [
            "Simscape/Driveline/Couplings & Drives"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/variableratiotransmission.html"
    },
    {
        "block_name": "Compound Planetary Gear",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/compoundplanetarygear.html"
    },
    {
        "block_name": "Differential",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/differential.html"
    },
    {
        "block_name": "Generic Engine",
        "libraries": [
            "Simscape/Driveline/Engines & Motors"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"5\"><strong class=\"guilabel\">Fuel\n\t\t\t\t\t\t\t\t\t\tConsumption</strong></th></tr>",
                "<tr><td colspan=\"5\"><strong class=\"guilabel\">Fuel consumption\n\t\t\t\t\t\t\t\t\t\tmodel</strong></td></tr>",
                "<tr><td rowspan=\"7\"><code class=\"guidropdown\">No fuel\n\t\t\t\t\t\t\t\t\tconsumption</code></td><td><code class=\"guidropdown\">Constant per revolution</code></td><td rowspan=\"3\"><code class=\"guidropdown\">Fuel consumption by speed and\n\t\t\t\t\t\t\t\t\t\ttorque</code></td><td rowspan=\"3\"><code class=\"guidropdown\">Brake specific fuel consumption by\n\t\t\t\t\t\t\t\t\t\tspeed and torque</code></td><td><code class=\"guidropdown\">Brake specific fuel consumption by speed and\n\t\t\t\t\t\t\t\t\t\tbrake mean effective pressure</code></td></tr>",
                "<tr><td rowspan=\"6\"><strong class=\"guilabel\">Fuel consumption per\n\t\t\t\t\t\t\t\t\t\trevolution</strong></td><td><strong class=\"guilabel\">Displaced volume</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Revolutions per cycle</strong></td></tr>",
                "<tr><td colspan=\"3\"><strong class=\"guilabel\">Speed\n\t\t\t\t\t\t\t\t\t\tvector</strong></td></tr>",
                "<tr><td colspan=\"2\"><strong class=\"guilabel\">Torque\n\t\t\t\t\t\t\t\t\t\tvector</strong></td><td><strong class=\"guilabel\">Brake mean effective pressure\n\t\t\t\t\t\t\t\t\tvector</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Fuel consumption table</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Brake specific fuel\n\t\t\t\t\t\t\t\t\t\tconsumption table</strong></td></tr>",
                "<tr><td colspan=\"3\"><strong class=\"guilabel\">Interpolation\n\t\t\t\t\t\t\t\t\t\tmethod</strong></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sdl/ref/genericengine.html"
    },
    {
        "block_name": "Double-Pinion Planetary Gear",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/doublepinionplanetarygear.html"
    },
    {
        "block_name": "Harmonic Drive",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/harmonicdrive.html"
    },
    {
        "block_name": "Planet-Planet",
        "libraries": [
            "Simscape/Driveline/Gears/Planetary Subcomponents"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/planetplanet.html"
    },
    {
        "block_name": "Planetary Gear",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/planetarygear.html"
    },
    {
        "block_name": "Leadscrew",
        "libraries": [
            "Simscape/Driveline/Gears/Rotational- Translational"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/leadscrew.html"
    },
    {
        "block_name": "Rack & Pinion",
        "libraries": [
            "Simscape/Driveline/Gears/Rotational- Translational"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/rackpinion.html"
    },
    {
        "block_name": "Ravigneaux Gear",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/ravigneauxgear.html"
    },
    {
        "block_name": "Simple Gear",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"6\">Default Model \u2014 For nonthermal\n\t\t\t\t\t\t\t\t\tmodels, thermal port <strong class=\"guilabel\">H</strong> is not\n\t\t\t\t\t\t\t\t\tvisible.</th><th colspan=\"2\">Thermal Model \u2014 For thermal models,\n\t\t\t\t\t\t\t\t\tthermal port <strong class=\"guilabel\">H</strong> is visible.</th></tr>",
                "<tr><th colspan=\"6\">Meshing Losses</th><th colspan=\"2\">Meshing Losses</th></tr>",
                "<tr><th colspan=\"6\"><p>Friction model \u2014 Choose\n\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">No meshing losses - Suitable for HIL\n\t\t\t\t\t\t\t\t\t\t\tsimulation</code>, <code class=\"guidropdown\">Constant\n\t\t\t\t\t\t\t\t\t\t\tefficiency</code>, or <code class=\"guidropdown\">Load-dependent\n\t\t\t\t\t\t\t\t\t\t\tefficiency</code></p></th><th colspan=\"2\"><p>Friction model \u2014 Choose\n\t\t\t\t\t\t\t\t\t\t\t<code class=\"guidropdown\">Temperature-dependent\n\t\t\t\t\t\t\t\t\t\t\tefficiency</code> or <code class=\"guidropdown\">Temperature and\n\t\t\t\t\t\t\t\t\t\t\tload-dependent efficiency</code></p></th></tr>",
                "<tr><td rowspan=\"5\"><strong class=\"emphasis bold\">No meshing losses -\n\t\t\t\t\t\t\t\t\t\tSuitable for HIL simulation</strong></td><td colspan=\"3\"><strong class=\"emphasis bold\">Constant\n\t\t\t\t\t\t\t\t\t\tefficiency</strong></td><td colspan=\"2\"><strong class=\"emphasis bold\">Load-dependent efficiency</strong></td><td><strong class=\"emphasis bold\">Temperature-dependent\n\t\t\t\t\t\t\t\t\t\tefficiency</strong></td><td><strong class=\"emphasis bold\">Temperature and load-dependent\n\t\t\t\t\t\t\t\t\t\tefficiency</strong></td></tr>",
                "<tr><td colspan=\"3\"><p>Efficiency</p></td><td colspan=\"2\"><p>Input shaft torque at no\n\t\t\t\t\t\t\t\t\t\tload</p></td><td><p>Temperature</p></td><td><p>Temperature</p></td></tr>",
                "<tr><td colspan=\"3\"><p>Follower power\n\t\t\t\t\t\t\t\t\t\tthreshold</p></td><td colspan=\"2\"><p>Nominal output\n\t\t\t\t\t\t\t\t\t\ttorque</p></td><td><p>Efficiency</p></td><td><p>Load at base gear</p></td></tr>",
                "<tr><td colspan=\"3\">\u00a0</td><td colspan=\"2\"><p>Efficiency at nominal\n\t\t\t\t\t\t\t\t\t\toutput torque</p></td><td rowspan=\"2\"><p>Follower power threshold</p></td><td><p>Efficiency matrix</p></td></tr>",
                "<tr><td colspan=\"3\">\u00a0</td><td colspan=\"2\"><p>Follower angular velocity\n\t\t\t\t\t\t\t\t\t\tthreshold</p></td><td><p>Follower angular velocity threshold</p></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sdl/ref/simplegear.html"
    },
    {
        "block_name": "Sun-Planet",
        "libraries": [
            "Simscape/Driveline/Gears/Planetary Subcomponents"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/sunplanet.html"
    },
    {
        "block_name": "Sun-Planet Bevel",
        "libraries": [
            "Simscape/Driveline/Gears/Planetary Subcomponents"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/sunplanetbevel.html"
    },
    {
        "block_name": "Ring-Planet",
        "libraries": [
            "Simscape/Driveline/Gears/Planetary Subcomponents"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/ringplanet.html"
    },
    {
        "block_name": "Sun-Planet Worm Gear",
        "libraries": [
            "Simscape/Driveline/Gears/Planetary Subcomponents"
        ],
        "parameters": [
            [
                "<tr><th colspan=\"6\">Meshing Losses Setting\n                                Parameters and Values</th></tr>",
                "<tr><td colspan=\"6\"><strong class=\"guilabel\">Friction\n                                    Model</strong></td></tr>",
                "<tr><td colspan=\"2\" rowspan=\"7\"><code class=\"guidropdown\">No\n                                    meshing losses - Suitable for HIL\n                                simulation</code></td><td colspan=\"2\"><code class=\"guidropdown\">Constant\n                                    efficiency</code></td><td colspan=\"2\"><code class=\"guidropdown\">Temperature-dependent\n                                    efficiency</code></td></tr>",
                "<tr><td colspan=\"2\"><strong class=\"guilabel\">Friction\n                                    parameterization</strong></td><td colspan=\"2\" rowspan=\"2\"><strong class=\"guilabel\">Temperature</strong></td></tr>",
                "<tr><td><code class=\"guidropdown\">Friction coefficient and geometrical\n                                    parameters</code></td><td><code class=\"guidropdown\">Efficiencies</code></td></tr>",
                "<tr><td><strong class=\"guilabel\">Normal pressure angle</strong></td><td><strong class=\"guilabel\">Worm-gear efficiency</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Worm-gear\n                                    efficiency</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Lead angle</strong></td><td rowspan=\"2\"><strong class=\"guilabel\">Gear-worm\n                                    efficiency</strong></td><td colspan=\"2\" rowspan=\"2\"><strong class=\"guilabel\">Gear-worm efficiency</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Friction coefficient</strong></td></tr>",
                "<tr><td><strong class=\"guilabel\">Power threshold</strong></td><td><strong class=\"guilabel\">Power threshold</strong></td><td colspan=\"2\"><strong class=\"guilabel\">Power\n                                    threshold</strong></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sdl/ref/sunplanetwormgear.html"
    },
    {
        "block_name": "Tire (Friction Parameterized)",
        "libraries": [
            "Simscape/Driveline/Tires & Vehicles"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/tirefrictionparameterized.html"
    },
    {
        "block_name": "Worm Gear",
        "libraries": [
            "Simscape/Driveline/Gears"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/wormgear.html"
    },
    {
        "block_name": "Tire (Simple)",
        "libraries": [
            "Simscape/Driveline/Tires & Vehicles"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/tiresimple.html"
    },
    {
        "block_name": "Tire (Magic Formula)",
        "libraries": [
            "Simscape/Driveline/Tires & Vehicles"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sdl/ref/tiremagicformula.html"
    },
    {
        "block_name": "Chart",
        "libraries": [
            "Stateflow"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter</strong>:\n                                        <code class=\"literal\">ShowPortLabels</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string scalar or\n                                    character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>:\n                                        <code class=\"literal\">\"none\"</code><code class=\"literal\">\"FromPortIcon\"</code> |\n                                        <code class=\"literal\">\"FromPortBlockName\"</code> |\n                                        <code class=\"literal\">\"SignalName\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                        <code class=\"literal\">\"FromPortIcon\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/stateflow/ref/chart.html"
    },
    {
        "block_name": "Truth Table",
        "libraries": [
            "Stateflow"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter</strong>:\n                                        <code class=\"literal\">ShowPortLabels</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string scalar or\n                                    character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>:\n                                        <code class=\"literal\">\"none\"</code><code class=\"literal\">\"FromPortIcon\"</code> |\n                                        <code class=\"literal\">\"FromPortBlockName\"</code> |\n                                        <code class=\"literal\">\"SignalName\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                        <code class=\"literal\">\"FromPortIcon\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/stateflow/ref/truthtable.html"
    },
    {
        "block_name": "Entity Terminator",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntryAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB code </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesArrived</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/entityterminator.html"
    },
    {
        "block_name": "Entity Replicator",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ReplicasDepartFrom</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Separate\n                                    output ports'</code> | <code class=\"literal\">'Single output\n                                    port'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Separate\n                                    output ports'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ReplicationAmountSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Dialog'</code> | <code class=\"literal\">'Attribute'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Dialog'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberReplicas</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ReplicateAttributeName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'ReplicateAttribute'</code> |  character\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'ReplicateAttribute'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">HoldOriginalEntityUntilAllReplicasDepart</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/entityreplicator.html"
    },
    {
        "block_name": "Hit Crossing",
        "libraries": [
            "Simulink/Discontinuities",
            "Simulink/Messages & Events",
            "HDL Coder/Discontinuities",
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">HitCrossingOffset</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: real values</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t<code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">HitCrossingDirection</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'either'</code> | <code class=\"literal\">'rising'</code>\n\t\t\t\t\t\t\t\t\t|<code class=\"literal\">'falling'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'either'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">ShowOutputPort</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\"></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">HitCrossingOutputType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Signal'</code> | <code class=\"literal\">'Message'</code> |\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Function-Call'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'Signal'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter:</strong>\n<code class=\"literal\">ZeroCross</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type:</strong> character vector, string</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'on'</code> | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'on'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/hitcrossing.html"
    },
    {
        "block_name": "Message Send",
        "libraries": [
            "Simulink/Messages & Events",
            "SimEvents",
            "Simulink/Messages & Events",
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ShowEnablePort</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/send.html"
    },
    {
        "block_name": "State Transition Table",
        "libraries": [
            "Stateflow"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Parameter</strong>:\n                                        <code class=\"literal\">ShowPortLabels</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string scalar or\n                                    character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Value</strong>:\n                                        <code class=\"literal\">\"none\"</code><code class=\"literal\">\"FromPortIcon\"</code> |\n                                        <code class=\"literal\">\"FromPortBlockName\"</code> |\n                                        <code class=\"literal\">\"SignalName\"</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                        <code class=\"literal\">\"FromPortIcon\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/stateflow/ref/statetransitiontable.html"
    },
    {
        "block_name": "Sequence Viewer",
        "libraries": [
            "Simulink/Messages & Events",
            "Simulink Test",
            "SimEvents",
            "Stateflow"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">VariableStepTimePrecision</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string scalar or\n                                character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">\"3\"</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">\"3\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">History</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string scalar or\n                                character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">\"1000\"</code> | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">\"1000\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/stateflow/ref/sequenceviewer.html"
    },
    {
        "block_name": "Entity Generator",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">GenerationMethod</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Time-based'</code> |\n                                    <code class=\"literal\">'Event-based'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Time-based'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">TimeSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Dialog'</code> | <code class=\"literal\">'Signal port'</code> |\n                                    <code class=\"literal\">'MATLAB action'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Dialog'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Period</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">IntergenerationTimeAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB code</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'dt =\n                                    rand(1,1);'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">GenerateEntityAtSimulationStart</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntityType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Structured'</code> | <code class=\"literal\">'Anonymous'</code>\n                                | <code class=\"literal\">'Bus object'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Structured'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntityPriority</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'300'</code> | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'300'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntityTypeName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Entity'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Entity'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">DataInitialValue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'0'</code>\n                                | scalar | vector | matrix </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AttributeName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Attribute1'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Attribute1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AttributeInitialValue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">1</code> |\n                                scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">GenerateAction, ExitAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB code </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesDeparted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">PendingEntityInBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AverageIntergenerationTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/entitygenerator.html"
    },
    {
        "block_name": "Entity Server",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Capacity</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code>|\n                                scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ServiceTimeSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Dialog'</code> | <code class=\"literal\">'Signal port'</code>\n                                | <code class=\"literal\">'Attribute'</code>| <code class=\"literal\">'MATLAB\n                                action'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Dialog'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ServiceTimeAttributeName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'ServiceTime'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'ServiceTime'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ServiceTimeValue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'1.0'</code> | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'1.0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ServiceTimeAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB code</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'dt =\n                                    rand(1,1);'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntryAction, ServiceCompleteAction, ExitAction,\n                                    BlockedAction, PreemptAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB code </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">PermitPreemptionBasedOnAttribute</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SortingAttributeName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'entity'</code> |\n                                    <code class=\"literal\">'entitySys.priority'</code> | character\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'entity'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SortingDirection</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Ascending'</code> |\n                                <code class=\"literal\">'Descending'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Ascending'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">WriteResidualTimeToAttribute</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ResidualTimeAttributeName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'ResidualTime'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'ResidualTime'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesDeparted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesInBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">PendingEntityPresentInBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesPending</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AverageWait</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Utilization</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesPreempted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumEntitiesExtracted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/entityserver.html"
    },
    {
        "block_name": "Entity Queue",
        "libraries": [
            "Simulink/Messages & Events",
            "SimEvents",
            "Simulink/Messages & Events",
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">QueueOverwriting</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code> (for Simulink) and <code class=\"literal\">'off'</code> (for SimEvents)</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Capacity</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'25'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'25'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">QueueType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'FIFO'</code> | <code class=\"literal\">'LIFO'</code> |\n                                    <code class=\"literal\">'Priority'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'FIFO'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">MulticastTag</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'A'</code>\n                                | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'A'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">PrioritySource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'PriorityAttribute'</code> | character\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'PriorityAttribute'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SortingDirection</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Ascending'</code> | <code class=\"literal\">'Descending'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Ascending'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntityArrivalSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Input\n                                    port'</code> | <code class=\"literal\">'Multicast'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Input\n                                    port'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntryAction, ExitAction,\n                                BlockedAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB code </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesDeparted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesInBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AverageWait</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AverageQueueLength</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumEntitiesExtracted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/queue.html"
    },
    {
        "block_name": "Entity Store",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Capacity</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'25'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'25'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesDeparted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesInBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AverageWait</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AverageStoreSize</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumEntitiesExtracted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/entitystore.html"
    },
    {
        "block_name": "Message Receive",
        "libraries": [
            "Simulink/Messages & Events",
            "SimEvents",
            "Simulink/Messages & Events",
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">UseInternalQueue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">QueueOverwriting</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code> (for Simulink) and <code class=\"literal\">'off'</code> (for SimEvents)</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">QueueLength</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'16'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'16'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">QueueType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'FIFO'</code> | <code class=\"literal\">'LIFO'</code> |\n                                    <code class=\"literal\">'Priority'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'FIFO'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">PriorityOrder</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Ascending'</code> | <code class=\"literal\">'Descending'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Ascending'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ShowQueueStatus</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">InitialValue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'[]'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'[]'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ValueSourceWhenQueueIsEmpty</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Hold last\n                                    value'</code> | <code class=\"literal\">'Use initial value'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Hold last\n                                    value'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SampleTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'-1'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'-1'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/receive.html"
    },
    {
        "block_name": "Entity Transport Delay",
        "libraries": [
            "Simulink/Continuous",
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">Capacity</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'inf'</code> | real scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'inf'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">ShowNumberEntitiesInBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n\t\t\t\t\t\t\t\t| <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n\t\t\t\t\t\t\t\t\t<code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/entitytransportdelay.html"
    },
    {
        "block_name": "Conveyor System",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mConveyorLength</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'100'</code> | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'100'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mConveyorSpeed</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'1000'</code> | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'1000'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mMinDisBetEntity</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'0'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mEntityLengthSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Dialog'</code> | <code class=\"literal\">'Attribute'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Dialog'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mEntityLength</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mEntityLengthAttrName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Length'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Length'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mOutputBlockedOpt</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Accumulate'</code> | <code class=\"literal\">'Pause'</code> |\n                                    <code class=\"literal\">'Error'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Accumulate'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mErrorUponFullOpt</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mIsVariableSpeed</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mNumEntitiesDepOpt</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mNumEntitiesInBlockOpt</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mEntityPendingOpt</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mNumExtractedFromBlockOpt</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mConveyorSpeedOpt</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/conveyorsystem.html"
    },
    {
        "block_name": "Entity Output Switch",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                  <code class=\"literal\">NumberOutputPorts</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'2'</code> |\n                scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'2'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                  <code class=\"literal\">SwitchingCriterion</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'First port that is not\n                  blocked'</code> | <code class=\"literal\">'Round robin'</code> | <code class=\"literal\">'From control\n                  port'</code> | <code class=\"literal\">'From attribute'</code> |\n                  <code class=\"literal\">'Equiprobable'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'First port that is not\n                  blocked'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                  <code class=\"literal\">InitialPortSelection</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code> |\n                scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                  <code class=\"literal\">SwitchAttributeName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Attribute1'</code> |\n                character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                <code class=\"literal\">'Attribute1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                <code class=\"literal\">Seed</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'34567'</code> |\n                scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'34567'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/entityoutputswitch.html"
    },
    {
        "block_name": "Entity Multicast",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">MulticastTag</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'A'</code>\n                                | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'A'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/entitymulticast.html"
    },
    {
        "block_name": "Entity Gate",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">OperatingMode</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Enable\n                                    gate'</code> | <code class=\"literal\">'Release gate'</code>\n<code class=\"literal\">'Selection gate'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Enable\n                                    gate'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">MatchingAttributeName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Attribute1'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Attribute1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">InitialValueOfMatchingAttribute</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'NaN'</code> | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'NaN'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">OpenGateAtSimulationStar</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/entitygate.html"
    },
    {
        "block_name": "Entity Input Switch",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberInputPorts</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'2'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'2'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ActivePortSelection</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'All'</code> | <code class=\"literal\">'Switch'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'All'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SwitchingCriterion</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Round\n                                    robin'</code> | <code class=\"literal\">'From control port'</code> |\n                                    <code class=\"literal\">'Equiprobable'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Round\n                                    robin'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">InitialPortSelection</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Seed</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'23453'</code> | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'23453'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/entityinputswitch.html"
    },
    {
        "block_name": "Entity Queue",
        "libraries": [
            "Simulink/Messages & Events",
            "SimEvents",
            "Simulink/Messages & Events",
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">QueueOverwriting</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code> (for Simulink) and <code class=\"literal\">'off'</code> (for SimEvents)</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Capacity</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'25'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'25'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">QueueType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'FIFO'</code> | <code class=\"literal\">'LIFO'</code> |\n                                    <code class=\"literal\">'Priority'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'FIFO'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">MulticastTag</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'A'</code>\n                                | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'A'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">PrioritySource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'PriorityAttribute'</code> | character\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'PriorityAttribute'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SortingDirection</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Ascending'</code> | <code class=\"literal\">'Descending'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Ascending'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntityArrivalSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Input\n                                    port'</code> | <code class=\"literal\">'Multicast'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Input\n                                    port'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntryAction, ExitAction,\n                                BlockedAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB code </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesDeparted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesInBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AverageWait</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AverageQueueLength</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumEntitiesExtracted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/queue.html"
    },
    {
        "block_name": "Entity Selector",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mNumberOfStreams</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mKeyEntityAttributeName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'{'ID'}'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'{'ID'}'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mEntityAttributeName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'{'Type'}'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'{'Type'}'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mMatchingNumberSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Dialog'</code> |\n                                <code class=\"literal\">'Attribute'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Dialog'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mNumberOfMatches</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mNumberOfMatchesAttribute</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Name'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Name'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mNumEntitiesDepOpt</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mNumEntitiesInBlockOpt</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">mNumEntitiesExtractedOpt</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/entityselector.html"
    },
    {
        "block_name": "Entity Batch Creator",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberOfEntitiesInBatch</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'4'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'4'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntityTypeName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Batch'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Batch'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">BusObject</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">InputEntityName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'batch'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'batch'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntryAction, BatchGenerateAction, ExitAction,\n                                    BlockedAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB code </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberOfEntitiesArrived</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberOfEntitiesDeparted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberOfEntitiesRequiredForNextBatch</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">PendingEntity</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/entitybatchcreator.html"
    },
    {
        "block_name": "Multicast Receive Queue",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simevents/ref/multicastreceivequeue.html"
    },
    {
        "block_name": "Entity Generator",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">GenerationMethod</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Time-based'</code> |\n                                    <code class=\"literal\">'Event-based'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Time-based'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">TimeSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Dialog'</code> | <code class=\"literal\">'Signal port'</code> |\n                                    <code class=\"literal\">'MATLAB action'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Dialog'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Period</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">IntergenerationTimeAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB code</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'dt =\n                                    rand(1,1);'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">GenerateEntityAtSimulationStart</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'on'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntityType</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Structured'</code> | <code class=\"literal\">'Anonymous'</code>\n                                | <code class=\"literal\">'Bus object'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Structured'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntityPriority</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'300'</code> | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'300'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntityTypeName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Entity'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Entity'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">DataInitialValue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'0'</code>\n                                | scalar | vector | matrix </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AttributeName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Attribute1'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Attribute1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AttributeInitialValue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">1</code> |\n                                scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">GenerateAction, ExitAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB code </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesDeparted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">PendingEntityInBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AverageIntergenerationTime</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/entitygenerator.html"
    },
    {
        "block_name": "Entity Store",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Capacity</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'25'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'25'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesDeparted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesInBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AverageWait</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AverageStoreSize</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumEntitiesExtracted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/entitystore.html"
    },
    {
        "block_name": "Entity Terminator",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntryAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB code </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesArrived</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/entityterminator.html"
    },
    {
        "block_name": "Entity Server",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Capacity</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code>|\n                                scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ServiceTimeSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Dialog'</code> | <code class=\"literal\">'Signal port'</code>\n                                | <code class=\"literal\">'Attribute'</code>| <code class=\"literal\">'MATLAB\n                                action'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Dialog'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ServiceTimeAttributeName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'ServiceTime'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'ServiceTime'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ServiceTimeValue</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'1.0'</code> | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'1.0'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ServiceTimeAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB code</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'dt =\n                                    rand(1,1);'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntryAction, ServiceCompleteAction, ExitAction,\n                                    BlockedAction, PreemptAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB code </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">PermitPreemptionBasedOnAttribute</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SortingAttributeName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'entity'</code> |\n                                    <code class=\"literal\">'entitySys.priority'</code> | character\n                                vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'entity'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SortingDirection</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Ascending'</code> |\n                                <code class=\"literal\">'Descending'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Ascending'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">WriteResidualTimeToAttribute</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ResidualTimeAttributeName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'ResidualTime'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'ResidualTime'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesDeparted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesInBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">PendingEntityPresentInBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesPending</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AverageWait</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">Utilization</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesPreempted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumEntitiesExtracted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/entityserver.html"
    },
    {
        "block_name": "Composite Entity Creator",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberInputPorts</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'2'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'2'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntityTypeName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Combined'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Combined'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">BusObject</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">InputEntityName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'E1|E2'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'E1|E2'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/compositeentitycreator.html"
    },
    {
        "block_name": "Composite Entity Splitter",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberOutputPorts</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'2'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'2'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/compositeentitysplitter.html"
    },
    {
        "block_name": "Resource Acquirer",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberWaitingEntities</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntryAction, ExitAction,\n                                BlockedAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB code </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesDeparted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesInBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AverageWait</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumEntitiesExtracted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/resourceacquirer.html"
    },
    {
        "block_name": "Entity Batch Splitter",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntryAction, UnbatchAction, ExitAction,\n                                    BlockedAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB code </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberOfEntitiesArrived</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberOfEntitiesDeparted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberOfEntitiesWaitingToDepart</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">PendingEntity</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/entitybatchsplitter.html"
    },
    {
        "block_name": "Entity Batch Creator",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberOfEntitiesInBatch</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'4'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'4'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntityTypeName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Batch'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Batch'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">BusObject</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">InputEntityName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'batch'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'batch'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntryAction, BatchGenerateAction, ExitAction,\n                                    BlockedAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB code </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberOfEntitiesArrived</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberOfEntitiesDeparted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberOfEntitiesRequiredForNextBatch</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">PendingEntity</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/entitybatchcreator.html"
    },
    {
        "block_name": "Resource Acquirer",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberWaitingEntities</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'1'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">'1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntryAction, ExitAction,\n                                BlockedAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB code </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesDeparted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesInBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AverageWait</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumEntitiesExtracted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/resourceacquirer.html"
    },
    {
        "block_name": "Resource Releaser",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ResourceToRelease</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'All'</code> | <code class=\"literal\">'Selected'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'All'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">EntryAction, ExitAction,\n                                BlockedAction</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: MATLAB<sup>\u00ae</sup> code </span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">''</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesDeparted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumberEntitiesInBlock</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">NumEntitiesExtracted</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/resourcereleaser.html"
    },
    {
        "block_name": "Entity Find",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                    <code class=\"literal\">ResourceName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: resource name</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                  <code class=\"literal\">'Resource1'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/entityfind.html"
    },
    {
        "block_name": "SimEvents Debugger",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simevents/ref/simeventsdebugger.html"
    },
    {
        "block_name": "Resource Pool",
        "libraries": [
            "SimEvents/Entity Management",
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ResourceName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Resource1'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Resource1'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ResourceGranularity</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Discrete\n                                    unit'</code> | <code class=\"literal\">'Fractional amount'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Discrete\n                                    unit'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ReusableUponRelease</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ResourceAmountSource</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">'Dialog'</code> | <code class=\"literal\">'Change amount through\n                                    control port'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'Dialog'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">ResourceAmount</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'10'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'10'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">InitialResourceAmount</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'10'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'10'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">InitialResourceAmount</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'10'</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'10'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AmountInUse</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AverageUtilization</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">AmountAvailable</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'on'</code>\n                                | <code class=\"literal\">'off'</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">'off'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/resourcepool.html"
    },
    {
        "block_name": "Sequence Viewer",
        "libraries": [
            "Simulink/Messages & Events",
            "Simulink Test",
            "SimEvents",
            "Stateflow"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">VariableStepTimePrecision</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string scalar or\n                                character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">\"3\"</code>\n                                | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                <code class=\"literal\">\"3\"</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">History</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: string scalar or\n                                character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>:\n                                    <code class=\"literal\">\"1000\"</code> | scalar</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>:\n                                    <code class=\"literal\">\"1000\"</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/sequenceviewer.html"
    },
    {
        "block_name": "Discrete Event Chart",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/simevents/ref/discreteeventchart.html"
    },
    {
        "block_name": "Thread Trigger",
        "libraries": [
            "Simulink Real-Time/Async"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">edge</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">taskpri</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/threadtrigger.html"
    },
    {
        "block_name": "DDS Receive",
        "libraries": [
            "Simulink Real-Time/DDS"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">datadict</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">topic</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">xmlPath</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">qos</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sampletime</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ddsreceive.html"
    },
    {
        "block_name": "MATLAB Discrete-Event System",
        "libraries": [
            "SimEvents"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">System</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'&lt;Enter\n                                    System Class Name&gt;'</code> | character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'&lt;Enter\n                                    System Class Name&gt;'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter</strong>:\n                                    <code class=\"literal\">SimulateUsing</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Type</strong>: character vector</span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Values</strong>: <code class=\"literal\">'Code\n                                    generation'</code> | <code class=\"literal\">Interpreted\n                                execution</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Default</strong>: <code class=\"literal\">'Code\n                                    generation'</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/simevents/ref/matlabdiscreteeventsystem.html"
    },
    {
        "block_name": "DDS Send",
        "libraries": [
            "Simulink Real-Time/DDS"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">datadict</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">topic</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">xmlPath</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">qos</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sampletime</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ddssend.html"
    },
    {
        "block_name": "Logitech G29 Steering Wheel",
        "libraries": [
            "Simulink Real-Time/Logitech G29"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sampleTime</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/logitechg29steeringwheel.html"
    },
    {
        "block_name": "File Log",
        "libraries": [
            "Simulink Real-Time/Logging"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/filelog.html"
    },
    {
        "block_name": "Enable File Log",
        "libraries": [
            "Simulink Real-Time/Logging"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/enablefilelog.html"
    },
    {
        "block_name": "Enable Profiler",
        "libraries": [
            "Simulink Real-Time/Profiling"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/enableprofiler.html"
    },
    {
        "block_name": "SLRT Overload Options",
        "libraries": [
            "Simulink Real-Time/Target Management"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/slrtoverloadoptions.html"
    },
    {
        "block_name": "Log Event",
        "libraries": [
            "Simulink Real-Time/Profiling"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/logevent.html"
    },
    {
        "block_name": "Bit Packing",
        "libraries": [
            "Simulink Real-Time/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">BitPatterns</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">PackDataType</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">PackDataSize</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/bitpacking.html"
    },
    {
        "block_name": "Persistent Variable Read",
        "libraries": [
            "Simulink Real-Time/Target Management"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">varName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">defaultValue</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/persistentvariableread.html"
    },
    {
        "block_name": "Persistent Variable Write",
        "libraries": [
            "Simulink Real-Time/Target Management"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">varName</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/persistentvariablewrite.html"
    },
    {
        "block_name": "Byte Reversal/Change Endianess",
        "libraries": [
            "Simulink Real-Time/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">numInp</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/bytereversalchangeendianess.html"
    },
    {
        "block_name": "Bit Unpacking",
        "libraries": [
            "Simulink Real-Time/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">BitPatterns</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">PackDataType</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">PackDataSize</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">UnpackDataTypes</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">UnpackDataSizes</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SignExtend</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/bitunpacking.html"
    },
    {
        "block_name": "Protocol Decoder",
        "libraries": [
            "Simulink Real-Time/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Header</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Header</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FieldNames</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FixedSizeFieldLength</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FixedFieldDataTypes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">IsLittleEndian</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaxVariableSizeFieldLength</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ChecksumAlgorithm</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ChecksumSize</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ChecksumFilepath</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TerminatorOption</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">CustomTerminatorVal</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">IsInputLengthAvailable</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/protocoldecoder.html"
    },
    {
        "block_name": "Byte Unpacking",
        "libraries": [
            "Simulink Real-Time/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskUnpackedDataTypes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskUnpackedDataSizes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskAlignment</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/byteunpacking.html"
    },
    {
        "block_name": "Byte Packing",
        "libraries": [
            "Simulink Real-Time/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskPackedDataType</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskUnpackedDataTypes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskAlignment</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/bytepacking.html"
    },
    {
        "block_name": "Protocol Encoder",
        "libraries": [
            "Simulink Real-Time/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Header</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FieldNames</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FixedSizeFieldLength</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FixedFieldDataTypes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">IsLittleEndian</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ChecksumAlgorithm</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ChecksumSize</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ChecksumFilepath</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TerminatorOption</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">CustomTerminatorVal</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/protocolencoder.html"
    },
    {
        "block_name": "Shared Memory Pack",
        "libraries": [
            "Simulink Real-Time/Shared Memory"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">partition</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/sharedmemorypack.html"
    },
    {
        "block_name": "Shared Memory Unpack",
        "libraries": [
            "Simulink Real-Time/Shared Memory"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">partition</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/sharedmemoryunpack.html"
    },
    {
        "block_name": "CAN Unpack",
        "libraries": [
            "Vehicle Network Toolbox/CAN Communication",
            "C2000 Microcontroller Blockset/Target Communication",
            "Embedded Coder/Embedded Targets/Host Communication",
            "Simulink Real-Time/CAN/CAN MSG blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DataFormat</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'raw data'</code> | <code class=\"literal\">'manually specified signals'</code> |\n                  <code class=\"literal\">'CANdb specified signals'</code> | <code class=\"literal\">'ARXML specified\n                  signals'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'raw data'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">CANdbFile</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgList</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgName</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgIDType</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Standard (11-bit identifier)'</code> | <code class=\"literal\">'Extended (29-bit\n                  identifier)'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Standard (11-bit identifier)'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgIdentifier</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'0'</code> to <code class=\"literal\">'536870911'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgLength</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'0'</code> to <code class=\"literal\">'8'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'8'</code>\n</span></td></tr>"
            ],
            [
                "<tr><th>Signal Name</th><th>Multiplex Type</th><th>Multiplex Value</th></tr>",
                "<tr><td>Signal-A</td><td>Standard</td><td>Not applicable</td></tr>",
                "<tr><td>Signal-B</td><td>Multiplexed</td><td>1</td></tr>",
                "<tr><td>Signal-C</td><td>Multiplexed</td><td>0</td></tr>",
                "<tr><td>Signal-D</td><td>Multiplexor</td><td>Not applicable</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">IDPort</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TimestampPort</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ErrorPort</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">RemotePort</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LengthPort</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">StatusPort</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/canunpack.html"
    },
    {
        "block_name": "CAN Pack",
        "libraries": [
            "Vehicle Network Toolbox/CAN Communication",
            "C2000 Microcontroller Blockset/Target Communication",
            "Embedded Coder/Embedded Targets/Host Communication",
            "Simulink Real-Time/CAN/CAN MSG blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DataFormat</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'raw data'</code> | <code class=\"literal\">'manually specified signals'</code> |\n                  <code class=\"literal\">'CANdb specified signals'</code> | <code class=\"literal\">'ARXML specified\n                  signals'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'raw data'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">CANdbFile</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgList</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgName</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgIDType</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Standard (11-bit identifier)'</code> | <code class=\"literal\">'Extended (29-bit\n                  identifier)'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Standard (11-bit identifier)'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgIdentifier</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'0'</code> to <code class=\"literal\">'536870911'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgLength</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'0'</code> to <code class=\"literal\">'8'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'8'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Remote</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">BusOutput</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><th>Signal Name</th><th>Multiplex Type</th><th>Multiplex Value</th></tr>",
                "<tr><td>Signal-A</td><td>Standard</td><td>Not applicable</td></tr>",
                "<tr><td>Signal-B</td><td>Multiplexed</td><td>1</td></tr>",
                "<tr><td>Signal-C</td><td>Multiplexed</td><td>0</td></tr>",
                "<tr><td>Signal-D</td><td>Multiplexor</td><td>Not applicable</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/canpack.html"
    },
    {
        "block_name": "CAN FD Pack",
        "libraries": [
            "Vehicle Network Toolbox/CAN FD Communication",
            "C2000 Microcontroller Blockset/Target Communication",
            "Simulink Real-Time/CAN/CAN-FD MSG blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DataFormat</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'raw data'</code> | <code class=\"literal\">'manually specified signals'</code> |\n                  <code class=\"literal\">'CANdb specified signals'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'raw data'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">CANdbFile</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgList</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgName</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ProtocolMode</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'CAN FD'</code> | <code class=\"literal\">'CAN'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'CAN FD'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgIDType</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Standard (11-bit identifier)'</code> | <code class=\"literal\">'Extended (29-bit\n                  identifier)'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Standard (11-bit identifier)'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgIdentifier</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'0'</code> to <code class=\"literal\">'536870911'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgLength</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'0'</code> to <code class=\"literal\">'8'</code>, <code class=\"literal\">'12'</code>,\n                  <code class=\"literal\">'16'</code>, <code class=\"literal\">'20'</code>, <code class=\"literal\">'24'</code>,\n                  <code class=\"literal\">'32'</code>, <code class=\"literal\">'48'</code>, <code class=\"literal\">'64'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'8'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Remote</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">BRSSwitch</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><th>Signal Name</th><th>Multiplex Type</th><th>Multiplex Value</th></tr>",
                "<tr><td>Signal-A</td><td>Standard</td><td>Not applicable</td></tr>",
                "<tr><td>Signal-B</td><td>Multiplexed</td><td>1</td></tr>",
                "<tr><td>Signal-C</td><td>Multiplexed</td><td>0</td></tr>",
                "<tr><td>Signal-D</td><td>Multiplexor</td><td>Not applicable</td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/canfdpack.html"
    },
    {
        "block_name": "LIN Unpack",
        "libraries": [
            "Simulink Real-Time/LIN"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LDFFileName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">selectedFrameName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">frameId</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/linunpack.html"
    },
    {
        "block_name": "CAN FD Unpack",
        "libraries": [
            "Vehicle Network Toolbox/CAN FD Communication",
            "C2000 Microcontroller Blockset/Target Communication",
            "Simulink Real-Time/CAN/CAN-FD MSG blocks"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DataFormat</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'raw data'</code> | <code class=\"literal\">'manually specified signals'</code> |\n                  <code class=\"literal\">'CANdb specified signals'</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'raw data'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">CANdbFile</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgList</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgName</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgIDType</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'Standard (11-bit identifier)'</code> | <code class=\"literal\">'Extended (29-bit\n                  identifier)'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'Standard (11-bit identifier)'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgIdentifier</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'0'</code> to <code class=\"literal\">'536870911'</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MsgLength</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'0'</code> to <code class=\"literal\">'8'</code>, <code class=\"literal\">'12'</code>,\n                  <code class=\"literal\">'16'</code>, <code class=\"literal\">'20'</code>, <code class=\"literal\">'24'</code>,\n                  <code class=\"literal\">'32'</code>, <code class=\"literal\">'48'</code>, <code class=\"literal\">'64'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'8'</code>\n</span></td></tr>"
            ],
            [
                "<tr><th>Signal Name</th><th>Multiplex Type</th><th>Multiplex Value</th></tr>",
                "<tr><td>Signal-A</td><td>Standard</td><td>Not applicable</td></tr>",
                "<tr><td>Signal-B</td><td>Multiplexed</td><td>1</td></tr>",
                "<tr><td>Signal-C</td><td>Multiplexed</td><td>0</td></tr>",
                "<tr><td>Signal-D</td><td>Multiplexor</td><td>Not applicable</td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">IDPort</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TimestampPort</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ErrorPort</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">RemotePort</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LengthPort</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">StatusPort</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">BRSPort</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ESIPort</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DLCPort</code>\n</span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Type:</strong>\n<code class=\"literal\">string</code> | <code class=\"literal\">character vector</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Values:</strong>\n<code class=\"literal\">'off'</code> | <code class=\"literal\">'on'</code></span></td></tr>",
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Default:</strong>\n<code class=\"literal\">'off'</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/canfdunpack.html"
    },
    {
        "block_name": "EtherCAT Init",
        "libraries": [
            "Simulink Real-Time/EtherCAT"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">config_file</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">device_id</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">portnum</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">dctuning</code>\n</span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">enaDebug</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethercatinit.html"
    },
    {
        "block_name": "LIN Pack",
        "libraries": [
            "Simulink Real-Time/LIN"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">LDFFileName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">selectedFrameName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">frameId</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/linpack.html"
    },
    {
        "block_name": "EtherCAT Get Emergency",
        "libraries": [
            "Simulink Real-Time/EtherCAT"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">device_id</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">logmsg</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sample_time</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethercatgetemergency.html"
    },
    {
        "block_name": "EtherCAT Get Scanbus Error Data",
        "libraries": [
            "Simulink Real-Time/EtherCAT"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethercatgetscanbuserrordata.html"
    },
    {
        "block_name": "EtherCAT Get Notifications",
        "libraries": [
            "Simulink Real-Time/EtherCAT"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">device_id</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sample_time</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethercatgetnotifications.html"
    },
    {
        "block_name": "EtherCAT PDO Transmit",
        "libraries": [
            "Simulink Real-Time/EtherCAT"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">device_id</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_name</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_offset</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_type</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">type_size</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_dim</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sample_time</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethercatpdotransmit.html"
    },
    {
        "block_name": "EtherCAT PDO Receive",
        "libraries": [
            "Simulink Real-Time/EtherCAT"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">device_id</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_name</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_offset</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_type</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">type_size</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_dim</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sample_time</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethercatpdoreceive.html"
    },
    {
        "block_name": "EtherCAT Sync SDO Download",
        "libraries": [
            "Simulink Real-Time/EtherCAT"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">index</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">subIndex</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_type</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_dim</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">device_id</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">subdevice_name</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sample_time</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">timeout</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethercatsyncsdodownload.html"
    },
    {
        "block_name": "EtherCAT Sync SDO Upload",
        "libraries": [
            "Simulink Real-Time/EtherCAT"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">index</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">subIndex</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_type</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_dim</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">device_id</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">subdevice_name</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sample_time</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">timeout</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethercatsyncsdoupload.html"
    },
    {
        "block_name": "EtherCAT Async SDO Download",
        "libraries": [
            "Simulink Real-Time/EtherCAT"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">index</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">complete</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">subIndex</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_type</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_dim</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">device_id</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">subdevice_name</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sample_time</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethercatasyncsdodownload.html"
    },
    {
        "block_name": "EtherCAT Sync SSC/SoE Upload",
        "libraries": [
            "Simulink Real-Time/EtherCAT"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">idn</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">drive</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_type</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_dim</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">device_id</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">subdevice_name</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sample_time</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">timeout</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethercatsyncsscsoeupload.html"
    },
    {
        "block_name": "EtherCAT Sync SSC/SoE Download",
        "libraries": [
            "Simulink Real-Time/EtherCAT"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">idn</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">drive</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_type</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_dim</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">device_id</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">subdevice_name</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sample_time</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">timeout</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethercatsyncsscsoedownload.html"
    },
    {
        "block_name": "EtherCAT Async SSC/SoE Upload",
        "libraries": [
            "Simulink Real-Time/EtherCAT"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">idn</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">drive</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_type</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_dim</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">device_id</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">subdevice_name</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sample_time</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">timeout</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethercatasyncsscsoeupload.html"
    },
    {
        "block_name": "EtherCAT Async SSC/SoE Download",
        "libraries": [
            "Simulink Real-Time/EtherCAT"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">idn</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">drive</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_type</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_dim</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">device_id</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">subdevice_name</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sample_time</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">timeout</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethercatasyncsscsoedownload.html"
    },
    {
        "block_name": "EtherCAT Get State",
        "libraries": [
            "Simulink Real-Time/EtherCAT"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">device_id</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sample_time</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethercatgetstate.html"
    },
    {
        "block_name": "EtherCAT Set State",
        "libraries": [
            "Simulink Real-Time/EtherCAT"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">device_id</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">timeout</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sample_time</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethercatsetstate.html"
    },
    {
        "block_name": "EtherCAT Async SDO Upload",
        "libraries": [
            "Simulink Real-Time/EtherCAT"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">index</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">complete</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">subIndex</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_type</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sig_dim</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">device_id</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">subdevice_name</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sample_time</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethercatasyncsdoupload.html"
    },
    {
        "block_name": "EtherCAT Set Device State",
        "libraries": [
            "Simulink Real-Time/EtherCAT"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">device_id</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">device_name</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sample_time</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethercatsetdevicestate.html"
    },
    {
        "block_name": "EtherCAT Get Device State",
        "libraries": [
            "Simulink Real-Time/EtherCAT"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">device_id</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">device_name</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sample_time</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethercatgetdevicestate.html"
    },
    {
        "block_name": "Ethernet Send",
        "libraries": [
            "Simulink Real-Time/IP/Ethernet"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InterfaceName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OverwriteSrcMACAddress</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MessageIn</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethernetsend.html"
    },
    {
        "block_name": "J1939 Network Configuration",
        "libraries": [
            "Simulink Real-Time/J1939 Communication",
            "Vehicle Network Toolbox/J1939 Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/j1939networkconfiguration.html"
    },
    {
        "block_name": "Ethernet Receive",
        "libraries": [
            "Simulink Real-Time/IP/Ethernet"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InterfaceName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DataWidth</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MessageOut</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaxMessagesPerStep</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FilterString</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ethernetreceive.html"
    },
    {
        "block_name": "J1939 Node Configuration",
        "libraries": [
            "Simulink Real-Time/J1939 Communication",
            "Vehicle Network Toolbox/J1939 Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/j1939nodeconfiguration.html"
    },
    {
        "block_name": "J1939 CAN Transport Layer",
        "libraries": [
            "Simulink Real-Time/J1939"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/j1939cantransportlayer.html"
    },
    {
        "block_name": "J1939 Receive",
        "libraries": [
            "Simulink Real-Time/J1939 Communication",
            "Vehicle Network Toolbox/J1939 Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/j1939receive.html"
    },
    {
        "block_name": "IEEE 1588 Read Parameter",
        "libraries": [
            "Simulink Real-Time/PTP"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">param</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sample_time</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/ieee1588readparameter.html"
    },
    {
        "block_name": "J1939 Transmit",
        "libraries": [
            "Simulink Real-Time/J1939 Communication",
            "Vehicle Network Toolbox/J1939 Communication"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/j1939transmit.html"
    },
    {
        "block_name": "TCP Client",
        "libraries": [
            "Simulink Real-Time/IP"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">useHostTargetConn</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">remoteAddress</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">remotePort</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/tcpclient.html"
    },
    {
        "block_name": "TCP Receive",
        "libraries": [
            "Simulink Real-Time/IP"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">socketAddPort</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">rcvWidth</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sampleTime</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/tcpreceive.html"
    },
    {
        "block_name": "TCP Server",
        "libraries": [
            "Simulink Real-Time/IP"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">useHostTargetConn</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">serverAddress</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">serverPort</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/tcpserver.html"
    },
    {
        "block_name": "TCP Send",
        "libraries": [
            "Simulink Real-Time/IP"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">socketAddPort</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sampleTime</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/tcpsend.html"
    },
    {
        "block_name": "Byte Packing",
        "libraries": [
            "Simulink Real-Time/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskPackedDataType</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskUnpackedDataTypes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskAlignment</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/bytepacking.html"
    },
    {
        "block_name": "Byte Unpacking",
        "libraries": [
            "Simulink Real-Time/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskUnpackedDataTypes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskUnpackedDataSizes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskAlignment</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/byteunpacking.html"
    },
    {
        "block_name": "Byte Reversal/Change Endianess",
        "libraries": [
            "Simulink Real-Time/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">numInp</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/bytereversalchangeendianess.html"
    },
    {
        "block_name": "Shared Memory Unpack",
        "libraries": [
            "Simulink Real-Time/Shared Memory"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">partition</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/sharedmemoryunpack.html"
    },
    {
        "block_name": "UDP Send",
        "libraries": [
            "Simulink Real-Time/IP"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">useHostTargetConn</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">toAddress</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">toPort</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sampleTime</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MessageIn</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/udpsend.html"
    },
    {
        "block_name": "Shared Memory Pack",
        "libraries": [
            "Simulink Real-Time/Shared Memory"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">partition</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/sharedmemorypack.html"
    },
    {
        "block_name": "UDP Receive",
        "libraries": [
            "Simulink Real-Time/IP"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">useHostTargetConn</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/udpreceive.html"
    },
    {
        "block_name": "UDP Multicast Receive",
        "libraries": [
            "Simulink Real-Time/IP"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">bindAddress</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/udpmulticastreceive.html"
    },
    {
        "block_name": "Byte Reversal/Change Endianess",
        "libraries": [
            "Simulink Real-Time/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">numInp</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/bytereversalchangeendianess.html"
    },
    {
        "block_name": "Byte Unpacking",
        "libraries": [
            "Simulink Real-Time/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskUnpackedDataTypes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskUnpackedDataSizes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskAlignment</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/byteunpacking.html"
    },
    {
        "block_name": "Shared Memory Pack",
        "libraries": [
            "Simulink Real-Time/Shared Memory"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">partition</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/sharedmemorypack.html"
    },
    {
        "block_name": "Shared Memory Unpack",
        "libraries": [
            "Simulink Real-Time/Shared Memory"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">partition</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/sharedmemoryunpack.html"
    },
    {
        "block_name": "Byte Packing",
        "libraries": [
            "Simulink Real-Time/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskPackedDataType</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskUnpackedDataTypes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskAlignment</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/bytepacking.html"
    },
    {
        "block_name": "ASCII Decode",
        "libraries": [
            "Simulink Real-Time/RS232"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">format</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">nvars</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">varids</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/asciidecode.html"
    },
    {
        "block_name": "ASCII Encode",
        "libraries": [
            "Simulink Real-Time/RS232"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">format</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">nvars</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">maxlength</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">vartypes</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/asciiencode.html"
    },
    {
        "block_name": "ASCII Decode V2",
        "libraries": [
            "Simulink Real-Time/RS232"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">format</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/asciidecodev2.html"
    },
    {
        "block_name": "FIFO Read",
        "libraries": [
            "Simulink Real-Time/RS232"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">maxsize</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">minsize</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">usedelimiter</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">delimiter</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">outputtype</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">enable</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">enableout</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/fiforead.html"
    },
    {
        "block_name": "FIFO Read Binary",
        "libraries": [
            "Simulink Real-Time/RS232"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">hdr</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">lengths</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">hold</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">enable</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">maxsize</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">outputtype</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/fiforeadbinary.html"
    },
    {
        "block_name": "FIFO Write",
        "libraries": [
            "Simulink Real-Time/RS232"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">size</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">inputtype</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">present</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">id</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/fifowrite.html"
    },
    {
        "block_name": "FIFO Read HDRS",
        "libraries": [
            "Simulink Real-Time/RS232"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">hdr</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">nterm</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">hold</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">enable</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">maxsize</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">outputtype</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/fiforeadhdrs.html"
    },
    {
        "block_name": "Modem Control",
        "libraries": [
            "Simulink Real-Time/RS232/Mainboard"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/modemcontrol.html"
    },
    {
        "block_name": "Modem Status",
        "libraries": [
            "Simulink Real-Time/RS232/Mainboard"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/modemstatus.html"
    },
    {
        "block_name": "Legacy Serial Read",
        "libraries": [
            "Simulink Real-Time/RS232/Mainboard"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/legacyserialread.html"
    },
    {
        "block_name": "Legacy Serial Write",
        "libraries": [
            "Simulink Real-Time/RS232/Mainboard"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/legacyserialwrite.html"
    },
    {
        "block_name": "Legacy Serial Setup",
        "libraries": [
            "Simulink Real-Time/RS232/Mainboard"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/legacyserialsetup.html"
    },
    {
        "block_name": "Legacy Serial Port F",
        "libraries": [
            "Simulink Real-Time/RS232/Mainboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">port</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">baud</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">width</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">nstop</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">parity</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ctsmode</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">port</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">fifosize</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">idtype</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sampletime</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/legacyserialportf.html"
    },
    {
        "block_name": "Legacy Serial Port",
        "libraries": [
            "Simulink Real-Time/RS232/Mainboard"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">port</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">baud</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">width</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">nstop</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">parity</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ctsmode</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">maxread</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">minread</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">usedelimiter</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">delimiter</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">odtype</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">fifosize</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">idtype</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">sampletime</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/legacyserialport.html"
    },
    {
        "block_name": "Byte Packing",
        "libraries": [
            "Simulink Real-Time/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskPackedDataType</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskUnpackedDataTypes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskAlignment</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/bytepacking.html"
    },
    {
        "block_name": "Byte Unpacking",
        "libraries": [
            "Simulink Real-Time/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskUnpackedDataTypes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskUnpackedDataSizes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaskAlignment</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/byteunpacking.html"
    },
    {
        "block_name": "Byte Reversal/Change Endianess",
        "libraries": [
            "Simulink Real-Time/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">numInp</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/bytereversalchangeendianess.html"
    },
    {
        "block_name": "Protocol Decoder",
        "libraries": [
            "Simulink Real-Time/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Header</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Header</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FieldNames</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FixedSizeFieldLength</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FixedFieldDataTypes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">IsLittleEndian</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaxVariableSizeFieldLength</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ChecksumAlgorithm</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ChecksumSize</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ChecksumFilepath</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TerminatorOption</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">CustomTerminatorVal</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">IsInputLengthAvailable</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/protocoldecoder.html"
    },
    {
        "block_name": "Protocol Encoder",
        "libraries": [
            "Simulink Real-Time/Utilities"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Header</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FieldNames</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FixedSizeFieldLength</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FixedFieldDataTypes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">IsLittleEndian</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ChecksumAlgorithm</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ChecksumSize</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ChecksumFilepath</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">TerminatorOption</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">CustomTerminatorVal</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/protocolencoder.html"
    },
    {
        "block_name": "Shared Memory Pack",
        "libraries": [
            "Simulink Real-Time/Shared Memory"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">partition</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/sharedmemorypack.html"
    },
    {
        "block_name": "XCP CAN Configuration",
        "libraries": [
            "Vehicle Network Toolbox/XCP Communication/CAN",
            "Simulink Real-Time/XCP/CAN"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/xcpcanconfiguration.html"
    },
    {
        "block_name": "Shared Memory Unpack",
        "libraries": [
            "Simulink Real-Time/Shared Memory"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\">\n<strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">partition</code>\n</span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/sharedmemoryunpack.html"
    },
    {
        "block_name": "XCP CAN Data Stimulation",
        "libraries": [
            "Vehicle Network Toolbox/XCP Communication/CAN",
            "Simulink Real-Time/XCP/CAN"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/xcpcandatastimulation.html"
    },
    {
        "block_name": "XCP CAN Data Acquisition",
        "libraries": [
            "Vehicle Network Toolbox/XCP Communication/CAN",
            "Simulink Real-Time/XCP/CAN"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/xcpcandataacquisition.html"
    },
    {
        "block_name": "XCP CAN Transport Layer",
        "libraries": [
            "Simulink Real-Time/XCP/CAN FD"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/xcpcantransportlayer.html"
    },
    {
        "block_name": "XCP CAN FD Configuration",
        "libraries": [
            "Vehicle Network Toolbox/XCP Communication/CAN FD",
            "Simulink Real-Time/XCP/CAN FD"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/xcpcanfdconfiguration.html"
    },
    {
        "block_name": "XCP CAN FD Data Acquisition",
        "libraries": [
            "Vehicle Network Toolbox/XCP Communication/CAN FD",
            "Simulink Real-Time/XCP/CAN FD"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/xcpcanfddataacquisition.html"
    },
    {
        "block_name": "XCP CAN FD Data Stimulation",
        "libraries": [
            "Vehicle Network Toolbox/XCP Communication/CAN FD",
            "Simulink Real-Time/XCP/CAN FD"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/xcpcanfddatastimulation.html"
    },
    {
        "block_name": "XCP UDP Configuration",
        "libraries": [
            "Vehicle Network Toolbox/XCP Communication/UDP",
            "Simulink Real-Time/XCP/UDP"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/xcpudpconfiguration.html"
    },
    {
        "block_name": "XCP CAN FD Transport Layer",
        "libraries": [
            "Simulink Real-Time/XCP/CAN FD"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/xcpcanfdtransportlayer.html"
    },
    {
        "block_name": "XCP UDP Data Acquisition",
        "libraries": [
            "Vehicle Network Toolbox/XCP Communication/UDP",
            "Simulink Real-Time/XCP/UDP"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/xcpudpdataacquisition.html"
    },
    {
        "block_name": "XCP UDP Data Stimulation",
        "libraries": [
            "Vehicle Network Toolbox/XCP Communication/UDP",
            "Simulink Real-Time/XCP/UDP"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/xcpudpdatastimulation.html"
    },
    {
        "block_name": "XCP UDP Bypass",
        "libraries": [
            "Vehicle Network Toolbox/XCP Communication/UDP",
            "Simulink Real-Time/XCP/UDP"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/xcpudpbypass.html"
    },
    {
        "block_name": "File Log",
        "libraries": [
            "Simulink Real-Time/Logging"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/filelog.html"
    },
    {
        "block_name": "Enable File Log",
        "libraries": [
            "Simulink Real-Time/Logging"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/enablefilelog.html"
    },
    {
        "block_name": "Enable Profiler",
        "libraries": [
            "Simulink Real-Time/Profiling"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/enableprofiler.html"
    },
    {
        "block_name": "Analog Input",
        "libraries": [
            "Simulink Desktop Real-Time"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvAddress</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">MaxMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">YieldWhenWaiting</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Channels</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VoltRange</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">RangeMode</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">DataType</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sldrt/ref/analoginput.html"
    },
    {
        "block_name": "Log Event",
        "libraries": [
            "Simulink Real-Time/Profiling"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/slrealtime/io_ref/logevent.html"
    },
    {
        "block_name": "Analog Output",
        "libraries": [
            "Simulink Desktop Real-Time"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvAddress</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">MaxMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">YieldWhenWaiting</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Channels</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">VoltRange</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">RangeMode</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InitialValue</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FinalValue</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sldrt/ref/analogoutput.html"
    },
    {
        "block_name": "Counter Input",
        "libraries": [
            "Simulink Desktop Real-Time"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvAddress</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">MaxMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">YieldWhenWaiting</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Channels</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ResetMode</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">CounterEdge</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">CounterGate</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">DataType</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sldrt/ref/counterinput.html"
    },
    {
        "block_name": "Frequency Output",
        "libraries": [
            "Simulink Desktop Real-Time"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvAddress</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">MaxMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">YieldWhenWaiting</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Channels</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FrequencySource</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Frequency</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Frequency</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FrequencyFinalValue</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DutySource</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Duty</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Duty</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DutyFinalValue</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sldrt/ref/frequencyoutput.html"
    },
    {
        "block_name": "Digital Input",
        "libraries": [
            "Simulink Desktop Real-Time"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvAddress</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">MaxMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">YieldWhenWaiting</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Channels</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">BitMode</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">DataType</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sldrt/ref/digitalinput.html"
    },
    {
        "block_name": "Encoder Input",
        "libraries": [
            "Simulink Desktop Real-Time"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvAddress</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">MaxMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">YieldWhenWaiting</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Channels</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">QuadMode</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">IndexPulse</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InputFilter</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">DataType</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sldrt/ref/encoderinput.html"
    },
    {
        "block_name": "Digital Output",
        "libraries": [
            "Simulink Desktop Real-Time"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvAddress</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">MaxMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">YieldWhenWaiting</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Channels</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">BitMode</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InitialValue</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FinalValue</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sldrt/ref/digitaloutput.html"
    },
    {
        "block_name": "ThingSpeak Input",
        "libraries": [
            "Simulink Desktop Real-Time/Internet of Things"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvAddress</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">MaxMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">YieldWhenWaiting</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ChannelFields</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DataTypeStr</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OptParam</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DataTypeStr</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DataTypeStr</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sldrt/ref/thingspeakinput.html"
    },
    {
        "block_name": "Packet Output",
        "libraries": [
            "Simulink Desktop Real-Time"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvAddress</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">MaxMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">YieldWhenWaiting</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">PacketID</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">PacketID</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">PacketSize</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DataTypes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ByteOrder</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowReady</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowError</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InitialValue</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FinalValue</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sldrt/ref/packetoutput.html"
    },
    {
        "block_name": "ThingSpeak Output",
        "libraries": [
            "Simulink Desktop Real-Time/Internet of Things"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvAddress</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">MaxMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">YieldWhenWaiting</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ChannelFields</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InitialValue</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FinalValue</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sldrt/ref/thingspeakoutput.html"
    },
    {
        "block_name": "Servo Output",
        "libraries": [
            "Simulink Desktop Real-Time"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvAddress</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">MaxMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">YieldWhenWaiting</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Channels</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">RangeMode</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MinPulseDuration</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">MaxPulseDuration</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InitialValue</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FinalValue</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sldrt/ref/servooutput.html"
    },
    {
        "block_name": "Packet Input",
        "libraries": [
            "Simulink Desktop Real-Time"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvAddress</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">MaxMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">YieldWhenWaiting</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">PacketID</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">PacketID</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">PacketSize</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DataTypes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ByteOrder</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowReady</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowError</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowTimestamp</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sldrt/ref/packetinput.html"
    },
    {
        "block_name": "Other Input",
        "libraries": [
            "Simulink Desktop Real-Time"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvAddress</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">MaxMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">YieldWhenWaiting</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Channels</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OptParam</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">DataType</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sldrt/ref/otherinput.html"
    },
    {
        "block_name": "Stream Input",
        "libraries": [
            "Simulink Desktop Real-Time"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvAddress</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">MaxMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">YieldWhenWaiting</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DataTypes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FormatString</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Terminator</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowReady</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowError</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sldrt/ref/streaminput.html"
    },
    {
        "block_name": "Stream Output",
        "libraries": [
            "Simulink Desktop Real-Time"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvAddress</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">MaxMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">YieldWhenWaiting</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">PortSizes</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FormatString</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowReady</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowError</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InitialValue</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FinalValue</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sldrt/ref/streamoutput.html"
    },
    {
        "block_name": "Other Output",
        "libraries": [
            "Simulink Desktop Real-Time"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvName</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvAddress</code></span></td></tr>",
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">DrvOptions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">MaxMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">YieldWhenWaiting</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">Channels</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">OptParam</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">InitialValue</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">FinalValue</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sldrt/ref/otheroutput.html"
    },
    {
        "block_name": "Execution Time",
        "libraries": [
            "Simulink Desktop Real-Time/Target Profiling"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowTaskTimes</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sldrt/ref/executiontime.html"
    },
    {
        "block_name": "Timestamp",
        "libraries": [
            "Simulink Desktop Real-Time/Target Profiling"
        ],
        "parameters": [],
        "source": "https://www.mathworks.com/help/sldrt/ref/timestamp.html"
    },
    {
        "block_name": "Real-Time Sync",
        "libraries": [
            "Simulink Desktop Real-Time"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">MaxMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">YieldWhenWaiting</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sldrt/ref/realtimesync.html"
    },
    {
        "block_name": "Video Input",
        "libraries": [
            "Simulink Desktop Real-Time"
        ],
        "parameters": [
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">SampleTime</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                                                  Parameter:</strong>\n<code class=\"literal\">MaxMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowMissedTicks</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">YieldWhenWaiting</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ROIOriginSource</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">RoiOrigin</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">RoiDimensions</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block\n                Parameter:</strong><code class=\"literal\">Channels</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowReady</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowError</code></span></td></tr>"
            ],
            [
                "<tr><td><span class=\"member\"><strong class=\"emphasis bold\">Block Parameter:</strong>\n<code class=\"literal\">ShowTimestamp</code></span></td></tr>"
            ]
        ],
        "source": "https://www.mathworks.com/help/sldrt/ref/videoinput.html"
    }
]